{
  "contractName": "ContractPermission",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "checkAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getInputAmountRange",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "Amount",
          "type": "uint256"
        }
      ],
      "name": "isInputAmountInRange",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_minAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxAmount",
          "type": "uint256"
        }
      ],
      "name": "setInputAmountRange",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bool",
          "name": "_bValid",
          "type": "bool"
        }
      ],
      "name": "setValid",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getPriceRateRange",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_minPriceRate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxPriceRate",
          "type": "uint256"
        }
      ],
      "name": "setPriceRateRange",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "strikePrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "underlyingPrice",
          "type": "uint256"
        }
      ],
      "name": "checkStrikePrice",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"checkAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"strikePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"underlyingPrice\",\"type\":\"uint256\"}],\"name\":\"checkStrikePrice\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getInputAmountRange\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getPriceRateRange\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"Amount\",\"type\":\"uint256\"}],\"name\":\"isInputAmountInRange\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxAmount\",\"type\":\"uint256\"}],\"name\":\"setInputAmountRange\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minPriceRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxPriceRate\",\"type\":\"uint256\"}],\"name\":\"setPriceRateRange\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_bValid\",\"type\":\"bool\"}],\"name\":\"setValid\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"A smart-contract which has operations of collateral and methods of calculate collateral occupation.  \",\"methods\":{\"checkStrikePrice(uint256,uint256)\":{\"details\":\"check user input price is in valid range.\",\"params\":{\"strikePrice\":\"user input strikePrice\",\"underlyingPrice\":\"current underlying price.\"}},\"getInputAmountRange()\":{\"details\":\"get the valid range of input amount\"},\"getPriceRateRange()\":{\"details\":\"retrieve input price valid range rate, thousandths.\"},\"isInputAmountInRange(uint256)\":{\"details\":\"Determine whether the input amount is within the valid range\",\"params\":{\"Amount\":\"Test value which is user input\"}},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.      * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setInputAmountRange(uint256,uint256)\":{\"details\":\"set the valid range of input amount\",\"params\":{\"_maxAmount\":\"the maximum input amount limit\",\"_minAmount\":\"the minimum input amount limit\"}},\"setPriceRateRange(uint256,uint256)\":{\"details\":\"set input price valid range rate, thousandths.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"collateral calculate module\"},\"userdoc\":{\"methods\":{\"approve(address,uint256)\":{\"notice\":\"     * Requirements:      * - `spender` cannot be the zero address.\"}}}},\"settings\":{\"compilationTarget\":{\"/C/work/solidity/FinnexusOptions_V2/contracts/ContractPermission/ContractPermission.sol\":\"ContractPermission\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/work/solidity/FinnexusOptions_V2/contracts/ContractPermission/ContractPermission.sol\":{\"keccak256\":\"0xa8928e9ae8b2c03a20503bd94d889a3253422eb3d6245304a0abeafc386da5b7\",\"urls\":[\"bzz-raw://aa9f286e06e2c34890f298e992eea74e73a36ff7f8fb7def927022f1d5ddb912\",\"dweb:/ipfs/QmRtymHnVu7EfheFCyhtCqqtX68AoPoKBxVDuU1tD51VWv\"]},\"/C/work/solidity/FinnexusOptions_V2/contracts/ContractPermission/PermissionData.sol\":{\"keccak256\":\"0x0d8caec0e4526d816a13a7b1a4de2498961d407a5809a3afdc80a0da6c5d67a1\",\"urls\":[\"bzz-raw://26663cfac17d99cb465d69add6877fffcf7bf613441fee263efdf615807b7a85\",\"dweb:/ipfs/QmQzmL8qLdMvqRwJKrm2F9bEeF62EqSTskBFsgXMQc4hMC\"]},\"/C/work/solidity/FinnexusOptions_V2/contracts/modules/Allowances.sol\":{\"keccak256\":\"0x255942b8ea5f6917ac9107cab2131ff0de01c9f690853b832c06719a6d70d454\",\"urls\":[\"bzz-raw://d9227585ac1cc3ecc7981c714a208ecef34f6f790a9b050af6ee345d1be4cfc0\",\"dweb:/ipfs/QmRraHaCyKsQe9TjinfAuxbHoR2GGGwZT8viVvVtN5yroY\"]},\"/C/work/solidity/FinnexusOptions_V2/contracts/modules/ImputRange.sol\":{\"keccak256\":\"0x65ab43f712a736f137f14fc9d1903a23d79b71bcd3998e6823a0e5a632c0a60f\",\"urls\":[\"bzz-raw://6b1e11366cd5c48f669b0548a83417a8f9a2fb8e7eba29ea00a2e9f6e348ad88\",\"dweb:/ipfs/QmcjypF3VX64terp1ALAA25B1wV8x7rJRpHMaKTGQ1GTuL\"]},\"/C/work/solidity/FinnexusOptions_V2/contracts/modules/Ownable.sol\":{\"keccak256\":\"0xbee80fd7a5d8bfc985dfb69ab47d582835fbf1e3352598e9c75ee931d8201b5d\",\"urls\":[\"bzz-raw://e388e11e0172712bf10327ddee6df03aeebeda1218734aadb40b1d2a46567d8d\",\"dweb:/ipfs/QmXn5T5gAAZmNKWvXNV9YkuDv7h5ppvdYwACUT5yD7ycxD\"]}},\"version\":1}",
  "bytecode": "0x608060408190526c0c9f2c9cd04674edea40000000600190815560646002556004805460ff191690911790556105dc6005556101f460065560008054600160a060020a0319163317808255600160a060020a0316917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a36106d0806100886000396000f3fe608060405234801561001057600080fd5b50600436106100ec576000357c010000000000000000000000000000000000000000000000000000000090048063813b5d4b116100a95780639ab91a35116100835780639ab91a3514610215578063aec6280614610238578063bc9abed214610259578063f2fde38b14610261576100ec565b8063813b5d4b146101cc5780638da5cb5b146101e95780638f32d59b1461020d576100ec565b8063095ea7b3146100f15780633daba0d71461011f5780635bf5d8971461015f5780636c64edee146101825780636ec6eff3146101a1578063715018a6146101c4575b600080fd5b61011d6004803603604081101561010757600080fd5b50600160a060020a038135169060200135610287565b005b61014b6004803603604081101561013557600080fd5b50600160a060020a0381351690602001356102ed565b604080519115158252519081900360200190f35b61011d6004803603604081101561017557600080fd5b5080359060200135610321565b61011d6004803603602081101561019857600080fd5b50351515610376565b61014b600480360360408110156101b757600080fd5b50803590602001356103d3565b61011d610409565b61014b600480360360208110156101e257600080fd5b50356104aa565b6101f16104c6565b60408051600160a060020a039092168252519081900360200190f35b61014b6104d5565b61011d6004803603604081101561022b57600080fd5b50803590602001356104e6565b61024061053b565b6040805192835260208301919091528051918290030190f35b610240610545565b61011d6004803603602081101561027757600080fd5b5035600160a060020a031661054f565b61028f6104d5565b6102d1576040805160e560020a62461bcd028152602060048201819052602482015260008051602061067c833981519152604482015290519081900360640190fd5b600160a060020a03909116600090815260036020526040902055565b60045460009060ff16158061031a5750600160a060020a0383166000908152600360205260409020548211155b9392505050565b6103296104d5565b61036b576040805160e560020a62461bcd028152602060048201819052602482015260008051602061067c833981519152604482015290519081900360640190fd5b600691909155600555565b61037e6104d5565b6103c0576040805160e560020a62461bcd028152602060048201819052602482015260008051602061067c833981519152604482015290519081900360640190fd5b6004805460ff1916911515919091179055565b6000826103e86005548402816103e557fe5b041015801561031a5750826103e86006548402816103ff57fe5b0411159392505050565b6104116104d5565b610453576040805160e560020a62461bcd028152602060048201819052602482015260008051602061067c833981519152604482015290519081900360640190fd5b60008054604051600160a060020a03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b600081600154101580156104c057508160025411155b92915050565b600054600160a060020a031690565b600054600160a060020a0316331490565b6104ee6104d5565b610530576040805160e560020a62461bcd028152602060048201819052602482015260008051602061067c833981519152604482015290519081900360640190fd5b600291909155600155565b6006546005549091565b6002546001549091565b6105576104d5565b610599576040805160e560020a62461bcd028152602060048201819052602482015260008051602061067c833981519152604482015290519081900360640190fd5b6105a2816105a5565b50565b600160a060020a0381166105ed5760405160e560020a62461bcd0281526004018080602001828103825260268152602001806106566026913960400191505060405180910390fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a039290921691909117905556fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a265627a7a723158200bdc0996379cad8ab16b1fc1e9748d0bf8a3f62ca756ab88a966894c4e264ee564736f6c63430005100032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100ec576000357c010000000000000000000000000000000000000000000000000000000090048063813b5d4b116100a95780639ab91a35116100835780639ab91a3514610215578063aec6280614610238578063bc9abed214610259578063f2fde38b14610261576100ec565b8063813b5d4b146101cc5780638da5cb5b146101e95780638f32d59b1461020d576100ec565b8063095ea7b3146100f15780633daba0d71461011f5780635bf5d8971461015f5780636c64edee146101825780636ec6eff3146101a1578063715018a6146101c4575b600080fd5b61011d6004803603604081101561010757600080fd5b50600160a060020a038135169060200135610287565b005b61014b6004803603604081101561013557600080fd5b50600160a060020a0381351690602001356102ed565b604080519115158252519081900360200190f35b61011d6004803603604081101561017557600080fd5b5080359060200135610321565b61011d6004803603602081101561019857600080fd5b50351515610376565b61014b600480360360408110156101b757600080fd5b50803590602001356103d3565b61011d610409565b61014b600480360360208110156101e257600080fd5b50356104aa565b6101f16104c6565b60408051600160a060020a039092168252519081900360200190f35b61014b6104d5565b61011d6004803603604081101561022b57600080fd5b50803590602001356104e6565b61024061053b565b6040805192835260208301919091528051918290030190f35b610240610545565b61011d6004803603602081101561027757600080fd5b5035600160a060020a031661054f565b61028f6104d5565b6102d1576040805160e560020a62461bcd028152602060048201819052602482015260008051602061067c833981519152604482015290519081900360640190fd5b600160a060020a03909116600090815260036020526040902055565b60045460009060ff16158061031a5750600160a060020a0383166000908152600360205260409020548211155b9392505050565b6103296104d5565b61036b576040805160e560020a62461bcd028152602060048201819052602482015260008051602061067c833981519152604482015290519081900360640190fd5b600691909155600555565b61037e6104d5565b6103c0576040805160e560020a62461bcd028152602060048201819052602482015260008051602061067c833981519152604482015290519081900360640190fd5b6004805460ff1916911515919091179055565b6000826103e86005548402816103e557fe5b041015801561031a5750826103e86006548402816103ff57fe5b0411159392505050565b6104116104d5565b610453576040805160e560020a62461bcd028152602060048201819052602482015260008051602061067c833981519152604482015290519081900360640190fd5b60008054604051600160a060020a03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b600081600154101580156104c057508160025411155b92915050565b600054600160a060020a031690565b600054600160a060020a0316331490565b6104ee6104d5565b610530576040805160e560020a62461bcd028152602060048201819052602482015260008051602061067c833981519152604482015290519081900360640190fd5b600291909155600155565b6006546005549091565b6002546001549091565b6105576104d5565b610599576040805160e560020a62461bcd028152602060048201819052602482015260008051602061067c833981519152604482015290519081900360640190fd5b6105a2816105a5565b50565b600160a060020a0381166105ed5760405160e560020a62461bcd0281526004018080602001828103825260268152602001806106566026913960400191505060405180910390fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a039290921691909117905556fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a265627a7a723158200bdc0996379cad8ab16b1fc1e9748d0bf8a3f62ca756ab88a966894c4e264ee564736f6c63430005100032",
  "sourceMap": "220:914:5:-;;;;;164:4:50;136:32;;;;242:3;214:31;;311:27:47;;;-1:-1:-1;;311:27:47;;;;;;707:4:7;675:36;;750:3;718:35;;-1:-1:-1;679:19:53;;-1:-1:-1;;;;;;679:19:53;688:10;679:19;;;;-1:-1:-1;;;;;747:6:53;;714:40;;-1:-1:-1;;714:40:53;220:914:5;;;;;;",
  "deployedSourceMap": "220:914:5:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;220:914:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;449:113:47;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;449:113:47;;;;;;;;:::i;:::-;;659:150;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;659:150:47;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;557:174:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;557:174:5;;;;;;;:::i;570:83:47:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;570:83:47;;;;:::i;914:217:5:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;914:217:5;;;;;;;:::i;1652:140:53:-;;;:::i;564:136:50:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;564:136:50;;:::i;843:79:53:-;;;:::i;:::-;;;;-1:-1:-1;;;;;843:79:53;;;;;;;;;;;;;;1209:92;;;:::i;1600:158:50:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1600:158:50;;;;;;;:::i;355:119:5:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1298:115:50;;;:::i;1947:109:53:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1947:109:53;-1:-1:-1;;;;;1947:109:53;;:::i;449:113:47:-;1055:9:53;:7;:9::i;:::-;1047:54;;;;;-1:-1:-1;;;;;1047:54:53;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1047:54:53;;;;;;;;;;;;;;;-1:-1:-1;;;;;526:19:47;;;;;;;:10;:19;;;;;:28;449:113::o;659:150::-;761:6;;736:4;;761:6;;760:7;;759:42;;-1:-1:-1;;;;;;772:19:47;;;;;;:10;:19;;;;;;:29;-1:-1:-1;772:29:47;759:42;752:49;659:150;-1:-1:-1;;;659:150:47:o;557:174:5:-;1055:9:53;:7;:9::i;:::-;1047:54;;;;;-1:-1:-1;;;;;1047:54:53;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1047:54:53;;;;;;;;;;;;;;;656:12:5;:28;;;;695:12;:28;557:174::o;570:83:47:-;1055:9:53;:7;:9::i;:::-;1047:54;;;;;-1:-1:-1;;;;;1047:54:53;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1047:54:53;;;;;;;;;;;;;;;629:6:47;:16;;-1:-1:-1;;629:16:47;;;;;;;;;;570:83::o;914:217:5:-;1004:4;1062:11;1056:4;1043:12;;1027:15;:28;:33;;;;;;:46;;:96;;;;;1112:11;1106:4;1093:12;;1077:15;:28;:33;;;;;;:46;;;914:217;-1:-1:-1;;;914:217:5:o;1652:140:53:-;1055:9;:7;:9::i;:::-;1047:54;;;;;-1:-1:-1;;;;;1047:54:53;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1047:54:53;;;;;;;;;;;;;;;1751:1;1735:6;;1714:40;;-1:-1:-1;;;;;1735:6:53;;;;1714:40;;1751:1;;1714:40;1782:1;1765:19;;-1:-1:-1;;1765:19:53;;;1652:140::o;564:136:50:-;630:4;664:6;653:9;;:17;;:38;;;;;685:6;674:9;;:17;;653:38;646:46;564:136;-1:-1:-1;;564:136:50:o;843:79:53:-;881:7;908:6;-1:-1:-1;;;;;908:6:53;843:79;:::o;1209:92::-;1249:4;1287:6;-1:-1:-1;;;;;1287:6:53;1273:10;:20;;1209:92::o;1600:158:50:-;1055:9:53;:7;:9::i;:::-;1047:54;;;;;-1:-1:-1;;;;;1047:54:53;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1047:54:53;;;;;;;;;;;;;;;1695:9:50;:22;;;;1728:9;:22;1600:158::o;355:119:5:-;440:12;;453;;355:119;;:::o;1298:115:50:-;1385:9;;1395;;1298:115;;:::o;1947:109:53:-;1055:9;:7;:9::i;:::-;1047:54;;;;;-1:-1:-1;;;;;1047:54:53;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1047:54:53;;;;;;;;;;;;;;;2020:28;2039:8;2020:18;:28::i;:::-;1947:109;:::o;2162:229::-;-1:-1:-1;;;;;2236:22:53;;2228:73;;;;-1:-1:-1;;;;;2228:73:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2338:6;;;2317:38;;-1:-1:-1;;;;;2317:38:53;;;;2338:6;;;2317:38;;;2366:6;:17;;-1:-1:-1;;2366:17:53;-1:-1:-1;;;;;2366:17:53;;;;;;;;;;2162:229::o",
  "source": "pragma solidity =0.5.16;\r\nimport \"./PermissionData.sol\";\r\n/**\r\n * @title collateral calculate module\r\n * @dev A smart-contract which has operations of collateral and methods of calculate collateral occupation.\r\n *\r\n */\r\ncontract ContractPermission is PermissionData {\r\n    /**\r\n    * @dev retrieve input price valid range rate, thousandths.\r\n    */ \r\n    function getPriceRateRange() public view returns(uint256,uint256) {\r\n        return (minPriceRate,maxPriceRate);\r\n    }\r\n    /**\r\n    * @dev set input price valid range rate, thousandths.\r\n    */ \r\n    function setPriceRateRange(uint256 _minPriceRate,uint256 _maxPriceRate) public onlyOwner{\r\n        minPriceRate = _minPriceRate;\r\n        maxPriceRate = _maxPriceRate;\r\n    }\r\n    /**\r\n    * @dev check user input price is in valid range.\r\n    * @param strikePrice user input strikePrice\r\n    * @param underlyingPrice current underlying price.\r\n    */ \r\n    function checkStrikePrice(uint256 strikePrice,uint256 underlyingPrice)public view returns(bool){\r\n        return underlyingPrice*maxPriceRate/1000>=strikePrice && underlyingPrice*minPriceRate/1000<=strikePrice;\r\n    }\r\n}\r\n",
  "sourcePath": "C:\\work\\solidity\\FinnexusOptions_V2\\contracts\\ContractPermission\\ContractPermission.sol",
  "ast": {
    "absolutePath": "/C/work/solidity/FinnexusOptions_V2/contracts/ContractPermission/ContractPermission.sol",
    "exportedSymbols": {
      "ContractPermission": [
        2510
      ]
    },
    "id": 2511,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2450,
        "literals": [
          "solidity",
          "=",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:5"
      },
      {
        "absolutePath": "/C/work/solidity/FinnexusOptions_V2/contracts/ContractPermission/PermissionData.sol",
        "file": "./PermissionData.sol",
        "id": 2451,
        "nodeType": "ImportDirective",
        "scope": 2511,
        "sourceUnit": 2629,
        "src": "26:30:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2452,
              "name": "PermissionData",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2628,
              "src": "251:14:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PermissionData_$2628",
                "typeString": "contract PermissionData"
              }
            },
            "id": 2453,
            "nodeType": "InheritanceSpecifier",
            "src": "251:14:5"
          }
        ],
        "contractDependencies": [
          2628,
          15724,
          17407,
          17673
        ],
        "contractKind": "contract",
        "documentation": "@title collateral calculate module\n@dev A smart-contract which has operations of collateral and methods of calculate collateral occupation.\n\n ",
        "fullyImplemented": true,
        "id": 2510,
        "linearizedBaseContracts": [
          2510,
          2628,
          15724,
          17407,
          17673
        ],
        "name": "ContractPermission",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2464,
              "nodeType": "Block",
              "src": "421:53:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "id": 2460,
                        "name": "minPriceRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2627,
                        "src": "440:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2461,
                        "name": "maxPriceRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2624,
                        "src": "453:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 2462,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "439:27:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 2459,
                  "id": 2463,
                  "nodeType": "Return",
                  "src": "432:34:5"
                }
              ]
            },
            "documentation": "@dev retrieve input price valid range rate, thousandths.",
            "id": 2465,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPriceRateRange",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2454,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "381:2:5"
            },
            "returnParameters": {
              "id": 2459,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2456,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2465,
                  "src": "404:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2455,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "404:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2458,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2465,
                  "src": "412:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2457,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "412:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "403:17:5"
            },
            "scope": 2510,
            "src": "355:119:5",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2482,
              "nodeType": "Block",
              "src": "645:86:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2474,
                      "name": "minPriceRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2627,
                      "src": "656:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2475,
                      "name": "_minPriceRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2467,
                      "src": "671:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "656:28:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2477,
                  "nodeType": "ExpressionStatement",
                  "src": "656:28:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2480,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2478,
                      "name": "maxPriceRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2624,
                      "src": "695:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2479,
                      "name": "_maxPriceRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2469,
                      "src": "710:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "695:28:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2481,
                  "nodeType": "ExpressionStatement",
                  "src": "695:28:5"
                }
              ]
            },
            "documentation": "@dev set input price valid range rate, thousandths.",
            "id": 2483,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2472,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2471,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 17606,
                  "src": "636:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "636:9:5"
              }
            ],
            "name": "setPriceRateRange",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2470,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2467,
                  "name": "_minPriceRate",
                  "nodeType": "VariableDeclaration",
                  "scope": 2483,
                  "src": "584:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2466,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "584:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2469,
                  "name": "_maxPriceRate",
                  "nodeType": "VariableDeclaration",
                  "scope": 2483,
                  "src": "606:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2468,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "606:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "583:45:5"
            },
            "returnParameters": {
              "id": 2473,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "645:0:5"
            },
            "scope": 2510,
            "src": "557:174:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2508,
              "nodeType": "Block",
              "src": "1009:122:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2498,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2496,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2494,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 2492,
                            "name": "underlyingPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2487,
                            "src": "1027:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 2493,
                            "name": "maxPriceRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2624,
                            "src": "1043:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1027:28:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31303030",
                          "id": 2495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1056:4:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        },
                        "src": "1027:33:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 2497,
                        "name": "strikePrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2485,
                        "src": "1062:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1027:46:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2505,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2501,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 2499,
                            "name": "underlyingPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2487,
                            "src": "1077:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 2500,
                            "name": "minPriceRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2627,
                            "src": "1093:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1077:28:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31303030",
                          "id": 2502,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1106:4:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        },
                        "src": "1077:33:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 2504,
                        "name": "strikePrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2485,
                        "src": "1112:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1077:46:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1027:96:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2491,
                  "id": 2507,
                  "nodeType": "Return",
                  "src": "1020:103:5"
                }
              ]
            },
            "documentation": "@dev check user input price is in valid range.\n@param strikePrice user input strikePrice\n@param underlyingPrice current underlying price.",
            "id": 2509,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkStrikePrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2488,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2485,
                  "name": "strikePrice",
                  "nodeType": "VariableDeclaration",
                  "scope": 2509,
                  "src": "940:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2484,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "940:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2487,
                  "name": "underlyingPrice",
                  "nodeType": "VariableDeclaration",
                  "scope": 2509,
                  "src": "960:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2486,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "960:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "939:45:5"
            },
            "returnParameters": {
              "id": 2491,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2490,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2509,
                  "src": "1004:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2489,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1004:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1003:6:5"
            },
            "scope": 2510,
            "src": "914:217:5",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 2511,
        "src": "220:914:5"
      }
    ],
    "src": "0:1136:5"
  },
  "legacyAST": {
    "absolutePath": "/C/work/solidity/FinnexusOptions_V2/contracts/ContractPermission/ContractPermission.sol",
    "exportedSymbols": {
      "ContractPermission": [
        2510
      ]
    },
    "id": 2511,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2450,
        "literals": [
          "solidity",
          "=",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:5"
      },
      {
        "absolutePath": "/C/work/solidity/FinnexusOptions_V2/contracts/ContractPermission/PermissionData.sol",
        "file": "./PermissionData.sol",
        "id": 2451,
        "nodeType": "ImportDirective",
        "scope": 2511,
        "sourceUnit": 2629,
        "src": "26:30:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2452,
              "name": "PermissionData",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2628,
              "src": "251:14:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PermissionData_$2628",
                "typeString": "contract PermissionData"
              }
            },
            "id": 2453,
            "nodeType": "InheritanceSpecifier",
            "src": "251:14:5"
          }
        ],
        "contractDependencies": [
          2628,
          15724,
          17407,
          17673
        ],
        "contractKind": "contract",
        "documentation": "@title collateral calculate module\n@dev A smart-contract which has operations of collateral and methods of calculate collateral occupation.\n\n ",
        "fullyImplemented": true,
        "id": 2510,
        "linearizedBaseContracts": [
          2510,
          2628,
          15724,
          17407,
          17673
        ],
        "name": "ContractPermission",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2464,
              "nodeType": "Block",
              "src": "421:53:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "id": 2460,
                        "name": "minPriceRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2627,
                        "src": "440:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2461,
                        "name": "maxPriceRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2624,
                        "src": "453:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 2462,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "439:27:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 2459,
                  "id": 2463,
                  "nodeType": "Return",
                  "src": "432:34:5"
                }
              ]
            },
            "documentation": "@dev retrieve input price valid range rate, thousandths.",
            "id": 2465,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPriceRateRange",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2454,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "381:2:5"
            },
            "returnParameters": {
              "id": 2459,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2456,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2465,
                  "src": "404:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2455,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "404:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2458,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2465,
                  "src": "412:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2457,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "412:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "403:17:5"
            },
            "scope": 2510,
            "src": "355:119:5",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2482,
              "nodeType": "Block",
              "src": "645:86:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2474,
                      "name": "minPriceRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2627,
                      "src": "656:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2475,
                      "name": "_minPriceRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2467,
                      "src": "671:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "656:28:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2477,
                  "nodeType": "ExpressionStatement",
                  "src": "656:28:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2480,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2478,
                      "name": "maxPriceRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2624,
                      "src": "695:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2479,
                      "name": "_maxPriceRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2469,
                      "src": "710:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "695:28:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2481,
                  "nodeType": "ExpressionStatement",
                  "src": "695:28:5"
                }
              ]
            },
            "documentation": "@dev set input price valid range rate, thousandths.",
            "id": 2483,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2472,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2471,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 17606,
                  "src": "636:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "636:9:5"
              }
            ],
            "name": "setPriceRateRange",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2470,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2467,
                  "name": "_minPriceRate",
                  "nodeType": "VariableDeclaration",
                  "scope": 2483,
                  "src": "584:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2466,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "584:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2469,
                  "name": "_maxPriceRate",
                  "nodeType": "VariableDeclaration",
                  "scope": 2483,
                  "src": "606:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2468,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "606:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "583:45:5"
            },
            "returnParameters": {
              "id": 2473,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "645:0:5"
            },
            "scope": 2510,
            "src": "557:174:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2508,
              "nodeType": "Block",
              "src": "1009:122:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2498,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2496,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2494,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 2492,
                            "name": "underlyingPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2487,
                            "src": "1027:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 2493,
                            "name": "maxPriceRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2624,
                            "src": "1043:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1027:28:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31303030",
                          "id": 2495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1056:4:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        },
                        "src": "1027:33:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 2497,
                        "name": "strikePrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2485,
                        "src": "1062:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1027:46:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2505,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2501,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 2499,
                            "name": "underlyingPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2487,
                            "src": "1077:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 2500,
                            "name": "minPriceRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2627,
                            "src": "1093:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1077:28:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31303030",
                          "id": 2502,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1106:4:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        },
                        "src": "1077:33:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 2504,
                        "name": "strikePrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2485,
                        "src": "1112:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1077:46:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1027:96:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2491,
                  "id": 2507,
                  "nodeType": "Return",
                  "src": "1020:103:5"
                }
              ]
            },
            "documentation": "@dev check user input price is in valid range.\n@param strikePrice user input strikePrice\n@param underlyingPrice current underlying price.",
            "id": 2509,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkStrikePrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2488,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2485,
                  "name": "strikePrice",
                  "nodeType": "VariableDeclaration",
                  "scope": 2509,
                  "src": "940:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2484,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "940:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2487,
                  "name": "underlyingPrice",
                  "nodeType": "VariableDeclaration",
                  "scope": 2509,
                  "src": "960:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2486,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "960:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "939:45:5"
            },
            "returnParameters": {
              "id": 2491,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2490,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2509,
                  "src": "1004:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2489,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1004:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1003:6:5"
            },
            "scope": 2510,
            "src": "914:217:5",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 2511,
        "src": "220:914:5"
      }
    ],
    "src": "0:1136:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.1.0",
  "updatedAt": "2020-09-18T07:12:27.699Z",
  "devdoc": {
    "details": "A smart-contract which has operations of collateral and methods of calculate collateral occupation.  ",
    "methods": {
      "checkStrikePrice(uint256,uint256)": {
        "details": "check user input price is in valid range.",
        "params": {
          "strikePrice": "user input strikePrice",
          "underlyingPrice": "current underlying price."
        }
      },
      "getInputAmountRange()": {
        "details": "get the valid range of input amount"
      },
      "getPriceRateRange()": {
        "details": "retrieve input price valid range rate, thousandths."
      },
      "isInputAmountInRange(uint256)": {
        "details": "Determine whether the input amount is within the valid range",
        "params": {
          "Amount": "Test value which is user input"
        }
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.      * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setInputAmountRange(uint256,uint256)": {
        "details": "set the valid range of input amount",
        "params": {
          "_maxAmount": "the maximum input amount limit",
          "_minAmount": "the minimum input amount limit"
        }
      },
      "setPriceRateRange(uint256,uint256)": {
        "details": "set input price valid range rate, thousandths."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "collateral calculate module"
  },
  "userdoc": {
    "methods": {
      "approve(address,uint256)": {
        "notice": "     * Requirements:      * - `spender` cannot be the zero address."
      }
    }
  }
}
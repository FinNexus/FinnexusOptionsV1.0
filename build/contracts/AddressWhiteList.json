{
  "contractName": "AddressWhiteList",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "whiteList",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "halted",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "halt",
          "type": "bool"
        }
      ],
      "name": "setHalt",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "addAddress",
          "type": "address"
        }
      ],
      "name": "addWhiteList",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "removeAddress",
          "type": "address"
        }
      ],
      "name": "removeWhiteList",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getWhiteList",
      "outputs": [
        {
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tmpAddress",
          "type": "address"
        }
      ],
      "name": "isEligibleAddress",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tmpAddress",
          "type": "address"
        }
      ],
      "name": "checkEligibleAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.4.26+commit.4563c3fc\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"getWhiteList\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"removeAddress\",\"type\":\"address\"}],\"name\":\"removeWhiteList\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"whiteList\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tmpAddress\",\"type\":\"address\"}],\"name\":\"isEligibleAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"halted\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addAddress\",\"type\":\"address\"}],\"name\":\"addWhiteList\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"halt\",\"type\":\"bool\"}],\"name\":\"setHalt\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tmpAddress\",\"type\":\"address\"}],\"name\":\"checkEligibleAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"addWhiteList(address)\":{\"details\":\"Implementation of add an eligible address into the whitelist.\\r\",\"params\":{\"addAddress\":\"new eligible address.\\r\"}},\"getWhiteList()\":{\"details\":\"Implementation of getting the eligible whitelist.\\r\"},\"isEligibleAddress(address)\":{\"details\":\"Implementation of testing whether the input address is eligible.\\r\",\"params\":{\"tmpAddress\":\"input address for testing.\\r\"}},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"removeWhiteList(address)\":{\"details\":\"Implementation of revoke an invalid address from the whitelist.\\r\",\"params\":{\"removeAddress\":\"revoked address.\\r\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{\"setHalt(bool)\":{\"notice\":\"function Emergency situation that requires contribution period to stop or not.\"}}}},\"settings\":{\"compilationTarget\":{\"/C/work/solidity/FinnexusOptions_V2/contracts/AddressWhiteList.sol\":\"AddressWhiteList\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/work/solidity/FinnexusOptions_V2/contracts/AddressWhiteList.sol\":{\"keccak256\":\"0x4c90d83283012a02e884ba91455d8b7274b2293373c81f05076d2a861cb4ae81\",\"urls\":[\"bzzr://8645da975d8c8a18c820d4aaa5ccb50015103bced9cccdfbc37188d5b7d9ce17\"]},\"/C/work/solidity/FinnexusOptions_V2/contracts/Halt.sol\":{\"keccak256\":\"0xc764d490ff3bd6b5e18ecb22492a9df086308f3f2389dbfbcbdb2f3f7b63a806\",\"urls\":[\"bzzr://3976b91a24357d5b6ee697d63d81bca867f4cfa1103833da4cca7138b0549c39\"]},\"/C/work/solidity/FinnexusOptions_V2/contracts/Ownable.sol\":{\"keccak256\":\"0x32e86cf1f96e3e879768e0d0440f35011232004420d3c4f84492f23664cba015\",\"urls\":[\"bzzr://5725cb4758935a4e7ebc5f963b0a46da11e6c81ac5dcedd214e425546e8b83a7\"]},\"/C/work/solidity/FinnexusOptions_V2/contracts/whiteList.sol\":{\"keccak256\":\"0xb8f3adfbce2a44bdf57066028475480e5670cf758d40a589185dc566283c1a8e\",\"urls\":[\"bzzr://fc05f568ef8d86e1096de328826e52c6db6f5e9314f88152925e57b08b2b7894\"]}},\"version\":1}",
  "bytecode": "0x6080604081905260008054600160a860020a0319163317808255600160a060020a0316917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3610911806100576000396000f3006080604052600436106100b95763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166309a9d76c81146100be5780632042e5c2146101235780635c475d4214610158578063715018a61461018c578063817bf86d146101a35780638da5cb5b146101c45780638f32d59b146101d9578063b9b8af0b146101ee578063e7cd4a0414610203578063f2fde38b14610224578063f495438714610245578063f939fdca1461025f575b600080fd5b3480156100ca57600080fd5b506100d3610280565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561010f5781810151838201526020016100f7565b505050509050019250505060405180910390f35b34801561012f57600080fd5b50610144600160a060020a03600435166102e3565b604080519115158252519081900360200190f35b34801561016457600080fd5b50610170600435610342565b60408051600160a060020a039092168252519081900360200190f35b34801561019857600080fd5b506101a161036a565b005b3480156101af57600080fd5b50610144600160a060020a036004351661040d565b3480156101d057600080fd5b5061017061041a565b3480156101e557600080fd5b50610144610429565b3480156101fa57600080fd5b5061014461043a565b34801561020f57600080fd5b506101a1600160a060020a036004351661045b565b34801561023057600080fd5b506101a1600160a060020a03600435166104b5565b34801561025157600080fd5b506101a1600435151561050a565b34801561026b57600080fd5b506101a1600160a060020a0360043516610596565b606060018054806020026020016040519081016040528092919081815260200182805480156102d857602002820191906000526020600020905b8154600160a060020a031681526001909101906020018083116102ba575b505050505090505b90565b60006102ed610429565b1515610331576040805160e560020a62461bcd02815260206004820181905260248201526000805160206108c6833981519152604482015290519081900360640190fd5b61033c6001836105a1565b92915050565b600180548290811061035057fe5b600091825260209091200154600160a060020a0316905081565b610372610429565b15156103b6576040805160e560020a62461bcd02815260206004820181905260248201526000805160206108c6833981519152604482015290519081900360640190fd5b60008054604051600160a060020a03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b600061033c600183610690565b600054600160a060020a031690565b600054600160a060020a0316331490565b60005474010000000000000000000000000000000000000000900460ff1681565b610463610429565b15156104a7576040805160e560020a62461bcd02815260206004820181905260248201526000805160206108c6833981519152604482015290519081900360640190fd5b6104b26001826106e3565b50565b6104bd610429565b1515610501576040805160e560020a62461bcd02815260206004820181905260248201526000805160206108c6833981519152604482015290519081900360640190fd5b6104b281610730565b610512610429565b1515610556576040805160e560020a62461bcd02815260206004820181905260248201526000805160206108c6833981519152604482015290519081900360640190fd5b60008054911515740100000000000000000000000000000000000000000274ff000000000000000000000000000000000000000019909216919091179055565b6104b260018261081e565b8154600090815b818110156105f05783600160a060020a031685828154811015156105c857fe5b600091825260209091200154600160a060020a031614156105e8576105f0565b6001016105a8565b81811015610683576000198201811461066957846001830381548110151561061457fe5b6000918252602090912001548554600160a060020a039091169086908390811061063a57fe5b9060005260206000200160006101000a815481600160a060020a030219169083600160a060020a031602179055505b845461067986600019830161087e565b5060019250610688565b600092505b505092915050565b8154600090815b818110156106835783600160a060020a031685828154811015156106b757fe5b600091825260209091200154600160a060020a031614156106db5760019250610688565b600101610697565b6106ed8282610690565b151561072c57815460018101835560008381526020902001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790555b5050565b600160a060020a03811615156107b6576040805160e560020a62461bcd02815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b6108288282610690565b151561072c576040805160e560020a62461bcd02815260206004820181905260248201527f77686974654c6973743a207573696e6720696e76616c69642061646472657373604482015290519081900360640190fd5b8154818355818111156108a2576000838152602090206108a29181019083016108a7565b505050565b6102e091905b808211156108c157600081556001016108ad565b509056004f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a165627a7a72305820bf275cc70863dab08ac73a225d71d031fb41382b60505b2557d0522bc962cb210029",
  "deployedBytecode": "0x6080604052600436106100b95763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166309a9d76c81146100be5780632042e5c2146101235780635c475d4214610158578063715018a61461018c578063817bf86d146101a35780638da5cb5b146101c45780638f32d59b146101d9578063b9b8af0b146101ee578063e7cd4a0414610203578063f2fde38b14610224578063f495438714610245578063f939fdca1461025f575b600080fd5b3480156100ca57600080fd5b506100d3610280565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561010f5781810151838201526020016100f7565b505050509050019250505060405180910390f35b34801561012f57600080fd5b50610144600160a060020a03600435166102e3565b604080519115158252519081900360200190f35b34801561016457600080fd5b50610170600435610342565b60408051600160a060020a039092168252519081900360200190f35b34801561019857600080fd5b506101a161036a565b005b3480156101af57600080fd5b50610144600160a060020a036004351661040d565b3480156101d057600080fd5b5061017061041a565b3480156101e557600080fd5b50610144610429565b3480156101fa57600080fd5b5061014461043a565b34801561020f57600080fd5b506101a1600160a060020a036004351661045b565b34801561023057600080fd5b506101a1600160a060020a03600435166104b5565b34801561025157600080fd5b506101a1600435151561050a565b34801561026b57600080fd5b506101a1600160a060020a0360043516610596565b606060018054806020026020016040519081016040528092919081815260200182805480156102d857602002820191906000526020600020905b8154600160a060020a031681526001909101906020018083116102ba575b505050505090505b90565b60006102ed610429565b1515610331576040805160e560020a62461bcd02815260206004820181905260248201526000805160206108c6833981519152604482015290519081900360640190fd5b61033c6001836105a1565b92915050565b600180548290811061035057fe5b600091825260209091200154600160a060020a0316905081565b610372610429565b15156103b6576040805160e560020a62461bcd02815260206004820181905260248201526000805160206108c6833981519152604482015290519081900360640190fd5b60008054604051600160a060020a03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b600061033c600183610690565b600054600160a060020a031690565b600054600160a060020a0316331490565b60005474010000000000000000000000000000000000000000900460ff1681565b610463610429565b15156104a7576040805160e560020a62461bcd02815260206004820181905260248201526000805160206108c6833981519152604482015290519081900360640190fd5b6104b26001826106e3565b50565b6104bd610429565b1515610501576040805160e560020a62461bcd02815260206004820181905260248201526000805160206108c6833981519152604482015290519081900360640190fd5b6104b281610730565b610512610429565b1515610556576040805160e560020a62461bcd02815260206004820181905260248201526000805160206108c6833981519152604482015290519081900360640190fd5b60008054911515740100000000000000000000000000000000000000000274ff000000000000000000000000000000000000000019909216919091179055565b6104b260018261081e565b8154600090815b818110156105f05783600160a060020a031685828154811015156105c857fe5b600091825260209091200154600160a060020a031614156105e8576105f0565b6001016105a8565b81811015610683576000198201811461066957846001830381548110151561061457fe5b6000918252602090912001548554600160a060020a039091169086908390811061063a57fe5b9060005260206000200160006101000a815481600160a060020a030219169083600160a060020a031602179055505b845461067986600019830161087e565b5060019250610688565b600092505b505092915050565b8154600090815b818110156106835783600160a060020a031685828154811015156106b757fe5b600091825260209091200154600160a060020a031614156106db5760019250610688565b600101610697565b6106ed8282610690565b151561072c57815460018101835560008381526020902001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790555b5050565b600160a060020a03811615156107b6576040805160e560020a62461bcd02815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b6108288282610690565b151561072c576040805160e560020a62461bcd02815260206004820181905260248201527f77686974654c6973743a207573696e6720696e76616c69642061646472657373604482015290519081900360640190fd5b8154818355818111156108a2576000838152602090206108a29181019083016108a7565b505050565b6102e091905b808211156108c157600081556001016108ad565b509056004f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a165627a7a72305820bf275cc70863dab08ac73a225d71d031fb41382b60505b2557d0522bc962cb210029",
  "sourceMap": "164:1337:0:-;;;;;107:5:6;86:26;;-1:-1:-1;;;;;;659:19:12;668:10;659:19;;;;-1:-1:-1;;;;;726:6:12;;693:40;;107:5:6;;693:40:12;164:1337:0;;;;;;",
  "deployedSourceMap": "164:1337:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;950:89;;8:9:-1;5:2;;;30:1;27;20:12;5:2;950:89:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;950:89:0;;;;;;;;;;;;;;;;;695:168;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;695:168:0;-1:-1:-1;;;;;695:168:0;;;;;;;;;;;;;;;;;;;;;;;240:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;240:26:0;;;;;;;;;-1:-1:-1;;;;;240:26:0;;;;;;;;;;;;;;1599:137:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1599:137:12;;;;;;1198:155:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1198:155:0;-1:-1:-1;;;;;1198:155:0;;;;;816:77:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;816:77:12;;;;1167:90;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1167:90:12;;;;86:26:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;86:26:6;;;;414:134:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;414:134:0;-1:-1:-1;;;;;414:134:0;;;;;1885:107:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1885:107:12;-1:-1:-1;;;;;1885:107:12;;;;;436:97:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;436:97:6;;;;;;;1359:139:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1359:139:0;-1:-1:-1;;;;;1359:139:0;;;;;950:89;994:9;1022;1015:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1015:16:0;;;;;;;;;;;;;;;;;;;;;;;950:89;;:::o;695:168::-;768:4;1020:9:12;:7;:9::i;:::-;1012:54;;;;;;;-1:-1:-1;;;;;1012:54:12;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1012:54:12;;;;;;;;;;;;;;;791:64:0;831:9;841:13;791:39;:64::i;:::-;784:71;695:168;-1:-1:-1;;695:168:0:o;240:26::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;240:26:0;;-1:-1:-1;240:26:0;:::o;1599:137:12:-;1020:9;:7;:9::i;:::-;1012:54;;;;;;;-1:-1:-1;;;;;1012:54:12;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1012:54:12;;;;;;;;;;;;;;;1697:1;1681:6;;1660:40;;-1:-1:-1;;;;;1681:6:12;;;;1660:40;;1697:1;;1660:40;1727:1;1710:19;;-1:-1:-1;;1710:19:12;;;1599:137::o;1198:155:0:-;1266:4;1289:56;1324:9;1334:10;1289:34;:56::i;816:77:12:-;854:7;880:6;-1:-1:-1;;;;;880:6:12;816:77;:::o;1167:90::-;1207:4;1244:6;-1:-1:-1;;;;;1244:6:12;1230:10;:20;;1167:90::o;86:26:6:-;;;;;;;;;:::o;414:134:0:-;1020:9:12;:7;:9::i;:::-;1012:54;;;;;;;-1:-1:-1;;;;;1012:54:12;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1012:54:12;;;;;;;;;;;;;;;482:58:0;519:9;529:10;482:36;:58::i;:::-;414:134;:::o;1885:107:12:-;1020:9;:7;:9::i;:::-;1012:54;;;;;;;-1:-1:-1;;;;;1012:54:12;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1012:54:12;;;;;;;;;;;;;;;1957:28;1976:8;1957:18;:28::i;436:97:6:-;1020:9:12;:7;:9::i;:::-;1012:54;;;;;;;-1:-1:-1;;;;;1012:54:12;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1012:54:12;;;;;;;;;;;;;;;513:6:6;:13;;;;;;;-1:-1:-1;;513:13:6;;;;;;;;;436:97::o;1359:139:0:-;1431:59;1469:9;1479:10;1431:37;:59::i;3224:466:21:-;3346:16;;3315:4;;;3373:102;3392:3;3390:1;:5;3373:102;;;3435:4;-1:-1:-1;;;;;3419:20:21;:9;3429:1;3419:12;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3419:12:21;:20;3415:48;;;3458:5;;3415:48;3396:3;;3373:102;;;3491:3;3489:1;:5;3485:175;;;-1:-1:-1;;3517:5:21;;3514:8;;3510:80;;3558:9;3572:1;3568:3;:5;3558:16;;;;;;;;;;;;;;;;;;;;3543:12;;-1:-1:-1;;;;;3558:16:21;;;;3543:9;;3553:1;;3543:12;;;;;;;;;;;;;;:31;;;;;-1:-1:-1;;;;;3543:31:21;;;;;-1:-1:-1;;;;;3543:31:21;;;;;;3510:80;3604:18;;;:9;-1:-1:-1;;3604:18:21;;;:::i;:::-;;3644:4;3637:11;;;;3485:175;3677:5;3670:12;;3224:466;;;;;;;:::o;3883:287::-;4005:16;;3975:4;;;4032:108;4051:3;4049:1;:5;4032:108;;;4094:4;-1:-1:-1;;;;;4078:20:21;:9;4088:1;4078:12;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4078:12:21;:20;4074:54;;;4124:4;4117:11;;;;4074:54;4055:3;;4032:108;;3035:183;3130:33;3148:9;3158:4;3130:17;:33::i;:::-;3129:34;3125:86;;;27:10:-1;;39:1;23:18;;45:23;;-1:-1;3179:20:21;;;;;;;;;-1:-1:-1;;3179:20:21;-1:-1:-1;;;;;3179:20:21;;;;;3125:86;3035:183;;:::o;2093:225:12:-;-1:-1:-1;;;;;2166:22:12;;;;2158:73;;;;;-1:-1:-1;;;;;2158:73:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2267:6;;;2246:38;;-1:-1:-1;;;;;2246:38:12;;;;2267:6;;;2246:38;;;2294:6;:17;;-1:-1:-1;;2294:17:12;-1:-1:-1;;;;;2294:17:12;;;;;;;;;;2093:225::o;3696:181:21:-;3800:33;3818:9;3828:4;3800:17;:33::i;:::-;3792:77;;;;;;;-1:-1:-1;;;;;3792:77:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;164:1337:0;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;",
  "source": "pragma solidity ^0.4.26;\r\nimport \"./Halt.sol\";\r\nimport \"./whiteList.sol\";\r\n    /**\r\n     * @dev Implementation of a whitelist filters a eligible address.\r\n     */\r\ncontract AddressWhiteList is Halt {\r\n\r\n    // The eligible adress list\r\n    address[] public whiteList;\r\n    /**\r\n     * @dev Implementation of add an eligible address into the whitelist.\r\n     * @param addAddress new eligible address.\r\n     */\r\n    function addWhiteList(address addAddress)public onlyOwner{\r\n        whiteListAddress.addWhiteListAddress(whiteList,addAddress);\r\n    }\r\n    /**\r\n     * @dev Implementation of revoke an invalid address from the whitelist.\r\n     * @param removeAddress revoked address.\r\n     */\r\n    function removeWhiteList(address removeAddress)public onlyOwner returns (bool){\r\n        return whiteListAddress.removeWhiteListAddress(whiteList,removeAddress);\r\n    }\r\n    /**\r\n     * @dev Implementation of getting the eligible whitelist.\r\n     */\r\n    function getWhiteList()public view returns (address[]){\r\n        return whiteList;\r\n    }\r\n    /**\r\n     * @dev Implementation of testing whether the input address is eligible.\r\n     * @param tmpAddress input address for testing.\r\n     */    \r\n    function isEligibleAddress(address tmpAddress) public view returns (bool){\r\n        return whiteListAddress.isEligibleAddress(whiteList,tmpAddress);\r\n    }\r\n    function checkEligibleAddress(address tmpAddress) public view{\r\n        whiteListAddress.checkEligibleAddress(whiteList,tmpAddress);\r\n    }\r\n}",
  "sourcePath": "C:\\work\\solidity\\FinnexusOptions_V2\\contracts\\AddressWhiteList.sol",
  "ast": {
    "absolutePath": "/C/work/solidity/FinnexusOptions_V2/contracts/AddressWhiteList.sol",
    "exportedSymbols": {
      "AddressWhiteList": [
        76
      ]
    },
    "id": 77,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".26"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "/C/work/solidity/FinnexusOptions_V2/contracts/Halt.sol",
        "file": "./Halt.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 77,
        "sourceUnit": 3407,
        "src": "26:20:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/work/solidity/FinnexusOptions_V2/contracts/whiteList.sol",
        "file": "./whiteList.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 77,
        "sourceUnit": 7600,
        "src": "48:25:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4,
              "name": "Halt",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3406,
              "src": "193:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Halt_$3406",
                "typeString": "contract Halt"
              }
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "193:4:0"
          }
        ],
        "contractDependencies": [
          3406,
          4981
        ],
        "contractKind": "contract",
        "documentation": "@dev Implementation of a whitelist filters a eligible address.\r",
        "fullyImplemented": true,
        "id": 76,
        "linearizedBaseContracts": [
          76,
          3406,
          4981
        ],
        "name": "AddressWhiteList",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 8,
            "name": "whiteList",
            "nodeType": "VariableDeclaration",
            "scope": 76,
            "src": "240:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 6,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "240:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 7,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "240:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 22,
              "nodeType": "Block",
              "src": "471:77:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 18,
                        "name": "whiteList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "519:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 19,
                        "name": "addAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "529:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 15,
                        "name": "whiteListAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7599,
                        "src": "482:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_whiteListAddress_$7599_$",
                          "typeString": "type(library whiteListAddress)"
                        }
                      },
                      "id": 17,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addWhiteListAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7440,
                      "src": "482:36:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 20,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "482:58:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21,
                  "nodeType": "ExpressionStatement",
                  "src": "482:58:0"
                }
              ]
            },
            "documentation": "@dev Implementation of add an eligible address into the whitelist.\r\n@param addAddress new eligible address.\r",
            "id": 23,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 13,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 12,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4914,
                  "src": "462:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "462:9:0"
              }
            ],
            "name": "addWhiteList",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10,
                  "name": "addAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 23,
                  "src": "436:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "436:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "435:20:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 14,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "471:0:0"
            },
            "scope": 76,
            "src": "414:134:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 38,
              "nodeType": "Block",
              "src": "773:90:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 34,
                        "name": "whiteList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "831:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 35,
                        "name": "removeAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "841:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 32,
                        "name": "whiteListAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7599,
                        "src": "791:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_whiteListAddress_$7599_$",
                          "typeString": "type(library whiteListAddress)"
                        }
                      },
                      "id": 33,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "removeWhiteListAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7506,
                      "src": "791:39:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address[] storage pointer,address) returns (bool)"
                      }
                    },
                    "id": 36,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "791:64:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 31,
                  "id": 37,
                  "nodeType": "Return",
                  "src": "784:71:0"
                }
              ]
            },
            "documentation": "@dev Implementation of revoke an invalid address from the whitelist.\r\n@param removeAddress revoked address.\r",
            "id": 39,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 28,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 27,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4914,
                  "src": "749:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "749:9:0"
              }
            ],
            "name": "removeWhiteList",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25,
                  "name": "removeAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 39,
                  "src": "720:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "720:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "719:23:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 39,
                  "src": "768:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 29,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "768:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "767:6:0"
            },
            "scope": 76,
            "src": "695:168:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 47,
              "nodeType": "Block",
              "src": "1004:35:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 45,
                    "name": "whiteList",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8,
                    "src": "1022:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 44,
                  "id": 46,
                  "nodeType": "Return",
                  "src": "1015:16:0"
                }
              ]
            },
            "documentation": "@dev Implementation of getting the eligible whitelist.\r",
            "id": 48,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getWhiteList",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 40,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "971:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 44,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 48,
                  "src": "994:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 41,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "994:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 42,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "994:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "993:11:0"
            },
            "scope": 76,
            "src": "950:89:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 61,
              "nodeType": "Block",
              "src": "1271:82:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 57,
                        "name": "whiteList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "1324:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 58,
                        "name": "tmpAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50,
                        "src": "1334:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 55,
                        "name": "whiteListAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7599,
                        "src": "1289:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_whiteListAddress_$7599_$",
                          "typeString": "type(library whiteListAddress)"
                        }
                      },
                      "id": 56,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isEligibleAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7561,
                      "src": "1289:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address[] storage pointer,address) view returns (bool)"
                      }
                    },
                    "id": 59,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1289:56:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 54,
                  "id": 60,
                  "nodeType": "Return",
                  "src": "1282:63:0"
                }
              ]
            },
            "documentation": "@dev Implementation of testing whether the input address is eligible.\r\n@param tmpAddress input address for testing.\r",
            "id": 62,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "isEligibleAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 51,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50,
                  "name": "tmpAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 62,
                  "src": "1225:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 49,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1225:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1224:20:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 54,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 62,
                  "src": "1266:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 52,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1266:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1265:6:0"
            },
            "scope": 76,
            "src": "1198:155:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 74,
              "nodeType": "Block",
              "src": "1420:78:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 70,
                        "name": "whiteList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "1469:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 71,
                        "name": "tmpAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64,
                        "src": "1479:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 67,
                        "name": "whiteListAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7599,
                        "src": "1431:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_whiteListAddress_$7599_$",
                          "typeString": "type(library whiteListAddress)"
                        }
                      },
                      "id": 69,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "checkEligibleAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7523,
                      "src": "1431:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$",
                        "typeString": "function (address[] storage pointer,address) view"
                      }
                    },
                    "id": 72,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1431:59:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73,
                  "nodeType": "ExpressionStatement",
                  "src": "1431:59:0"
                }
              ]
            },
            "documentation": null,
            "id": 75,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "checkEligibleAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 65,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64,
                  "name": "tmpAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 75,
                  "src": "1389:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 63,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1389:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1388:20:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 66,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1420:0:0"
            },
            "scope": 76,
            "src": "1359:139:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 77,
        "src": "164:1337:0"
      }
    ],
    "src": "0:1501:0"
  },
  "legacyAST": {
    "absolutePath": "/C/work/solidity/FinnexusOptions_V2/contracts/AddressWhiteList.sol",
    "exportedSymbols": {
      "AddressWhiteList": [
        76
      ]
    },
    "id": 77,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".26"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "/C/work/solidity/FinnexusOptions_V2/contracts/Halt.sol",
        "file": "./Halt.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 77,
        "sourceUnit": 3407,
        "src": "26:20:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/work/solidity/FinnexusOptions_V2/contracts/whiteList.sol",
        "file": "./whiteList.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 77,
        "sourceUnit": 7600,
        "src": "48:25:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4,
              "name": "Halt",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3406,
              "src": "193:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Halt_$3406",
                "typeString": "contract Halt"
              }
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "193:4:0"
          }
        ],
        "contractDependencies": [
          3406,
          4981
        ],
        "contractKind": "contract",
        "documentation": "@dev Implementation of a whitelist filters a eligible address.\r",
        "fullyImplemented": true,
        "id": 76,
        "linearizedBaseContracts": [
          76,
          3406,
          4981
        ],
        "name": "AddressWhiteList",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 8,
            "name": "whiteList",
            "nodeType": "VariableDeclaration",
            "scope": 76,
            "src": "240:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 6,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "240:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 7,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "240:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 22,
              "nodeType": "Block",
              "src": "471:77:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 18,
                        "name": "whiteList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "519:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 19,
                        "name": "addAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "529:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 15,
                        "name": "whiteListAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7599,
                        "src": "482:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_whiteListAddress_$7599_$",
                          "typeString": "type(library whiteListAddress)"
                        }
                      },
                      "id": 17,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addWhiteListAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7440,
                      "src": "482:36:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 20,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "482:58:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21,
                  "nodeType": "ExpressionStatement",
                  "src": "482:58:0"
                }
              ]
            },
            "documentation": "@dev Implementation of add an eligible address into the whitelist.\r\n@param addAddress new eligible address.\r",
            "id": 23,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 13,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 12,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4914,
                  "src": "462:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "462:9:0"
              }
            ],
            "name": "addWhiteList",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10,
                  "name": "addAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 23,
                  "src": "436:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "436:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "435:20:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 14,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "471:0:0"
            },
            "scope": 76,
            "src": "414:134:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 38,
              "nodeType": "Block",
              "src": "773:90:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 34,
                        "name": "whiteList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "831:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 35,
                        "name": "removeAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "841:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 32,
                        "name": "whiteListAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7599,
                        "src": "791:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_whiteListAddress_$7599_$",
                          "typeString": "type(library whiteListAddress)"
                        }
                      },
                      "id": 33,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "removeWhiteListAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7506,
                      "src": "791:39:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address[] storage pointer,address) returns (bool)"
                      }
                    },
                    "id": 36,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "791:64:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 31,
                  "id": 37,
                  "nodeType": "Return",
                  "src": "784:71:0"
                }
              ]
            },
            "documentation": "@dev Implementation of revoke an invalid address from the whitelist.\r\n@param removeAddress revoked address.\r",
            "id": 39,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 28,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 27,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4914,
                  "src": "749:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "749:9:0"
              }
            ],
            "name": "removeWhiteList",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25,
                  "name": "removeAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 39,
                  "src": "720:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "720:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "719:23:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 39,
                  "src": "768:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 29,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "768:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "767:6:0"
            },
            "scope": 76,
            "src": "695:168:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 47,
              "nodeType": "Block",
              "src": "1004:35:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 45,
                    "name": "whiteList",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8,
                    "src": "1022:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 44,
                  "id": 46,
                  "nodeType": "Return",
                  "src": "1015:16:0"
                }
              ]
            },
            "documentation": "@dev Implementation of getting the eligible whitelist.\r",
            "id": 48,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getWhiteList",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 40,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "971:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 44,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 48,
                  "src": "994:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 41,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "994:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 42,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "994:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "993:11:0"
            },
            "scope": 76,
            "src": "950:89:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 61,
              "nodeType": "Block",
              "src": "1271:82:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 57,
                        "name": "whiteList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "1324:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 58,
                        "name": "tmpAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50,
                        "src": "1334:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 55,
                        "name": "whiteListAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7599,
                        "src": "1289:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_whiteListAddress_$7599_$",
                          "typeString": "type(library whiteListAddress)"
                        }
                      },
                      "id": 56,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isEligibleAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7561,
                      "src": "1289:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address[] storage pointer,address) view returns (bool)"
                      }
                    },
                    "id": 59,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1289:56:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 54,
                  "id": 60,
                  "nodeType": "Return",
                  "src": "1282:63:0"
                }
              ]
            },
            "documentation": "@dev Implementation of testing whether the input address is eligible.\r\n@param tmpAddress input address for testing.\r",
            "id": 62,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "isEligibleAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 51,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50,
                  "name": "tmpAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 62,
                  "src": "1225:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 49,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1225:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1224:20:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 54,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 62,
                  "src": "1266:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 52,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1266:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1265:6:0"
            },
            "scope": 76,
            "src": "1198:155:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 74,
              "nodeType": "Block",
              "src": "1420:78:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 70,
                        "name": "whiteList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "1469:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 71,
                        "name": "tmpAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64,
                        "src": "1479:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 67,
                        "name": "whiteListAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7599,
                        "src": "1431:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_whiteListAddress_$7599_$",
                          "typeString": "type(library whiteListAddress)"
                        }
                      },
                      "id": 69,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "checkEligibleAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7523,
                      "src": "1431:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$",
                        "typeString": "function (address[] storage pointer,address) view"
                      }
                    },
                    "id": 72,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1431:59:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73,
                  "nodeType": "ExpressionStatement",
                  "src": "1431:59:0"
                }
              ]
            },
            "documentation": null,
            "id": 75,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "checkEligibleAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 65,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64,
                  "name": "tmpAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 75,
                  "src": "1389:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 63,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1389:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1388:20:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 66,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1420:0:0"
            },
            "scope": 76,
            "src": "1359:139:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 77,
        "src": "164:1337:0"
      }
    ],
    "src": "0:1501:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.26+commit.4563c3fc.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.1.0",
  "updatedAt": "2020-07-18T02:19:54.321Z",
  "devdoc": {
    "methods": {
      "addWhiteList(address)": {
        "details": "Implementation of add an eligible address into the whitelist.\r",
        "params": {
          "addAddress": "new eligible address.\r"
        }
      },
      "getWhiteList()": {
        "details": "Implementation of getting the eligible whitelist.\r"
      },
      "isEligibleAddress(address)": {
        "details": "Implementation of testing whether the input address is eligible.\r",
        "params": {
          "tmpAddress": "input address for testing.\r"
        }
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "removeWhiteList(address)": {
        "details": "Implementation of revoke an invalid address from the whitelist.\r",
        "params": {
          "removeAddress": "revoked address.\r"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    }
  },
  "userdoc": {
    "methods": {
      "setHalt(bool)": {
        "notice": "function Emergency situation that requires contribution period to stop or not."
      }
    }
  }
}
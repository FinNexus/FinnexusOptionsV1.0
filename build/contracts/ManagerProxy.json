{
  "contractName": "ManagerProxy",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "implementation_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "oracleAddr",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "optionsPriceAddr",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "optionsPoolAddr",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "collateralPoolAddr",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "FPTCoinAddr",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "collateral",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        }
      ],
      "name": "AddCollateral",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "settlement",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "optionId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "optionPrice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "settlementAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "optionAmount",
          "type": "uint256"
        }
      ],
      "name": "BuyOption",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "optionId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "sellValue",
          "type": "uint256"
        }
      ],
      "name": "ExerciseOption",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "collateral",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "allRedeem",
          "type": "uint256"
        }
      ],
      "name": "RedeemCollateral",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "optionId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "sellValue",
          "type": "uint256"
        }
      ],
      "name": "SellOption",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "addAddress",
          "type": "address"
        }
      ],
      "name": "addOperator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "addAddress",
          "type": "address"
        }
      ],
      "name": "addWhiteList",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "tmpAddress",
          "type": "address"
        }
      ],
      "name": "checkAddressPayIn",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "tmpAddress",
          "type": "address"
        }
      ],
      "name": "checkAddressRedeemOut",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "delegateToImplementation",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "delegateToViewImplementation",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCollateralPoolAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getFPTCoinAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getOperator",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getOptionsPoolAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getOptionsPriceAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getOracleAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getWhiteList",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "implementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "tmpAddress",
          "type": "address"
        }
      ],
      "name": "isEligibleAddress",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "addAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "permission",
          "type": "uint256"
        }
      ],
      "name": "modifyPermission",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "removeAddress",
          "type": "address"
        }
      ],
      "name": "removeOperator",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "removeAddress",
          "type": "address"
        }
      ],
      "name": "removeWhiteList",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "collateralPool",
          "type": "address"
        }
      ],
      "name": "setCollateralPoolAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "FPTCoinAddr",
          "type": "address"
        }
      ],
      "name": "setFPTCoinAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bool",
          "name": "halt",
          "type": "bool"
        }
      ],
      "name": "setHalt",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address[]",
          "name": "operators",
          "type": "address[]"
        }
      ],
      "name": "setOperator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "addAddress",
          "type": "address"
        }
      ],
      "name": "setOperator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "optionsPool",
          "type": "address"
        }
      ],
      "name": "setOptionsPoolAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "optionsPrice",
          "type": "address"
        }
      ],
      "name": "setOptionsPriceAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "oracle",
          "type": "address"
        }
      ],
      "name": "setOracleAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getInputAmountRange",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "setInputAmountRange",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "addNetBalance",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "setCollateralRate",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "getCollateralRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "getUserPayingUsd",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userInputCollateral",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "calSharedPayment",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "int256[]",
          "name": "",
          "type": "int256[]"
        },
        {
          "internalType": "int256[]",
          "name": "",
          "type": "int256[]"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "setSharedPayment",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "getUserTotalWorth",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getTokenNetworth",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "addCollateral",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "redeemCollateral",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "calCollateralWorth",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getOccupiedCollateral",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getAvailableCollateral",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getLeftCollateral",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getUnlockedCollateral",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "name": "calOptionsOccupied",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getTotalCollateral",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "getRealBalance",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "getNetWorthBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "calculateCollateralRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getPriceRateRange",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "setPriceRateRange",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "name": "buyOption",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "sellOption",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "exerciseOption",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"oracleAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"optionsPriceAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"optionsPoolAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collateralPoolAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"FPTCoinAddr\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collateral\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"AddCollateral\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"settlement\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"optionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"optionPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"settlementAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"optionAmount\",\"type\":\"uint256\"}],\"name\":\"BuyOption\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"optionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sellValue\",\"type\":\"uint256\"}],\"name\":\"ExerciseOption\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"collateral\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"allRedeem\",\"type\":\"uint256\"}],\"name\":\"RedeemCollateral\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"optionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sellValue\",\"type\":\"uint256\"}],\"name\":\"SellOption\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"addCollateral\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"addNetBalance\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"addAddress\",\"type\":\"address\"}],\"name\":\"addOperator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"addAddress\",\"type\":\"address\"}],\"name\":\"addWhiteList\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"buyOption\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"calCollateralWorth\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"calOptionsOccupied\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"calSharedPayment\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"calculateCollateralRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tmpAddress\",\"type\":\"address\"}],\"name\":\"checkAddressPayIn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tmpAddress\",\"type\":\"address\"}],\"name\":\"checkAddressRedeemOut\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"delegateToImplementation\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"delegateToViewImplementation\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"exerciseOption\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAvailableCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCollateralPoolAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getCollateralRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getFPTCoinAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getInputAmountRange\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getLeftCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getNetWorthBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOccupiedCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOperator\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOptionsPoolAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOptionsPriceAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOracleAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getPriceRateRange\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getRealBalance\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTokenNetworth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTotalCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getUnlockedCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getUserPayingUsd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getUserTotalWorth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getWhiteList\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tmpAddress\",\"type\":\"address\"}],\"name\":\"isEligibleAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"addAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"permission\",\"type\":\"uint256\"}],\"name\":\"modifyPermission\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"redeemCollateral\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"removeAddress\",\"type\":\"address\"}],\"name\":\"removeOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"removeAddress\",\"type\":\"address\"}],\"name\":\"removeWhiteList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"sellOption\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"collateralPool\",\"type\":\"address\"}],\"name\":\"setCollateralPoolAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"setCollateralRate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"FPTCoinAddr\",\"type\":\"address\"}],\"name\":\"setFPTCoinAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bool\",\"name\":\"halt\",\"type\":\"bool\"}],\"name\":\"setHalt\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"setInputAmountRange\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"operators\",\"type\":\"address[]\"}],\"name\":\"setOperator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"addAddress\",\"type\":\"address\"}],\"name\":\"setOperator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"optionsPool\",\"type\":\"address\"}],\"name\":\"setOptionsPoolAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"optionsPrice\",\"type\":\"address\"}],\"name\":\"setOptionsPriceAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"name\":\"setOracleAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"setPriceRateRange\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"\",\"type\":\"int256[]\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"setSharedPayment\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInputCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"addCollateral(address,uint256)\":{\"details\":\"Deposit collateral in this pool from user. collateral The collateral coin address which is in whitelist. amount the amount of collateral to deposit.\"},\"addNetBalance(address,uint256)\":{\"details\":\"The foundation operator want to add some coin to netbalance, which can increase the FPTCoin net worth. settlement the settlement coin address which the foundation operator want to transfer in this contract address. amount the amount of the settlement coin which the foundation operator want to transfer in this contract address.\"},\"addOperator(address)\":{\"details\":\"add a new operator by owner.       \"},\"addWhiteList(address)\":{\"details\":\"Implementation of add an eligible address into the whitelist.\",\"params\":{\"addAddress\":\"new eligible address.\"}},\"buyOption(address,uint256,uint256,uint32,uint256,uint256,uint8)\":{\"details\":\"user buy option and create new option. settlement user's settement coin address settlementAmount amount of settlement user want fo pay. strikePrice user input option's strike price underlying user input option's underlying id, 1 for BTC,2 for ETH expiration user input expiration,time limit from now amount user input amount of new option user want to buy. optType user input option type\"},\"calCollateralWorth(address)\":{\"details\":\"Retrieve user's collateral worth in all collateral coin.  If user want to redeem all his collateral,and the vacant collateral is sufficient, He can redeem each collateral amount in return list. account the retrieve user's account;\"},\"calOptionsOccupied(uint256,uint256,uint256,uint8)\":{\"details\":\"The auxiliary function for calculate option occupied.  strikePrice option's strike price underlyingPrice option's underlying price amount option's amount optType option's type, 0 for call, 1 for put.\"},\"calSharedPayment()\":{\"details\":\"Calculate the collateral pool shared worth. The foundation operator will invoke this function frequently\"},\"calculateCollateralRate()\":{\"details\":\"collateral occupation rate calculation     collateral occupation rate = sum(collateral Rate * collateral balance) / sum(collateral balance)\"},\"constructor\":{\"details\":\"Options manager constructor. set other contract address oracleAddr fnx oracle contract address. optionsPriceAddr options price contract address optionsPoolAddr optoins pool contract address FPTCoinAddr FPTCoin contract address\"},\"delegateToImplementation(bytes)\":{\"details\":\"It returns to the external caller whatever the implementation returns or forwards reverts\",\"params\":{\"data\":\"The raw data to delegatecall\"},\"return\":\"The returned bytes from the delegatecall\"},\"delegateToViewImplementation(bytes)\":{\"details\":\"It returns to the external caller whatever the implementation returns or forwards reverts There are an additional 2 prefix uints from the wrapper returndata, which we ignore since we make an extra hop.\",\"params\":{\"data\":\"The raw data to delegatecall\"},\"return\":\"The returned bytes from the delegatecall\"},\"exerciseOption(uint256,uint256)\":{\"details\":\"User exercise option. optionsId option's ID which was wanted to exercise, must owned by user amount user input amount of option user want to exercise.\"},\"getAvailableCollateral()\":{\"details\":\"Retrieve the available collateral worth, the worth of collateral which can used for buy options, priced in USD. \"},\"getCollateralRate(address)\":{\"details\":\"Get the minimum collateral occupation rate.\"},\"getInputAmountRange()\":{\"details\":\"get the valid range of input amount\"},\"getLeftCollateral()\":{\"details\":\"Retrieve the left collateral worth, the worth of collateral which can used for redeem collateral, priced in USD. \"},\"getOccupiedCollateral()\":{\"details\":\"Retrieve the occupied collateral worth, multiplied by minimum collateral rate, priced in USD. \"},\"getOperator()\":{\"details\":\"get all operators.       \"},\"getPriceRateRange()\":{\"details\":\"retrieve input price valid range rate, thousandths.\"},\"getRealBalance(address)\":{\"details\":\"Retrieve the balance of collateral, the auxiliary function for the total collateral calculation. \"},\"getTokenNetworth()\":{\"details\":\"Retrieve FPTCoin's net worth, priced in USD.\"},\"getTotalCollateral()\":{\"details\":\"Retrieve the total collateral worth, priced in USD. \"},\"getUnlockedCollateral()\":{\"details\":\"Retrieve the unlocked collateral worth, the worth of collateral which currently used for options, priced in USD. \"},\"getUserPayingUsd(address)\":{\"details\":\"Retrieve user's cost of collateral, priced in USD. user input retrieved account \"},\"getUserTotalWorth(address)\":{\"details\":\"Retrieve user's current total worth, priced in USD. account input retrieve account\"},\"getWhiteList()\":{\"details\":\"Implementation of getting the eligible whitelist.\"},\"isEligibleAddress(address)\":{\"details\":\"Implementation of testing whether the input address is eligible.\",\"params\":{\"tmpAddress\":\"input address for testing.\"}},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"redeemCollateral(uint256,address)\":{\"details\":\"redeem collateral from this pool, user can input the prioritized collateral,he will get this coin, if this coin is unsufficient, he will get others collateral which in whitelist. tokenAmount the amount of FPTCoin want to redeem. collateral The prioritized collateral coin address.\"},\"removeOperator(address)\":{\"details\":\"remove operator by owner.       \"},\"removeWhiteList(address)\":{\"details\":\"Implementation of revoke an invalid address from the whitelist.\",\"params\":{\"removeAddress\":\"revoked address.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.      * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"sellOption(uint256,uint256)\":{\"details\":\"User sell option. optionsId option's ID which was wanted to sell, must owned by user amount user input amount of option user want to sell.\"},\"setCollateralRate(address,uint256)\":{\"details\":\"The foundation owner want to set the minimum collateral occupation rate. collateral collateral coin address colRate The thousandths of the minimum collateral occupation rate.\"},\"setInputAmountRange(uint256,uint256)\":{\"details\":\"set the valid range of input amount _minAmount the minimum input amount limit _maxAmount the maximum input amount limit\"},\"setOperator(address[])\":{\"details\":\"set all operators by owner.       \"},\"setOperator(uint256,address)\":{\"details\":\"modify indexed operator by owner.       \"},\"setPriceRateRange(uint256,uint256)\":{\"details\":\"set input price valid range rate, thousandths.\"},\"setSharedPayment(int256[],int256[],uint256)\":{\"details\":\"Set the calculation results of the collateral pool shared worth. The foundation operator will invoke this function frequently newNetworth Current expired options' net worth  sharedBalances All unexpired options' shared balance distributed by time. firstOption The new first unexpired option's index.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"userInputCollateral(address,address)\":{\"details\":\"Retrieve user's amount of the specified collateral. user input retrieved account  collateral input retrieved collateral coin address \"}},\"title\":\"Erc20Delegator Contract\"},\"userdoc\":{\"methods\":{\"delegateToImplementation(bytes)\":{\"notice\":\"Delegates execution to the implementation contract\"},\"delegateToViewImplementation(bytes)\":{\"notice\":\"Delegates execution to an implementation contract\"},\"setHalt(bool)\":{\"notice\":\"function Emergency situation that requires contribution period to stop or not.\"}}}},\"settings\":{\"compilationTarget\":{\"/C/work/solidity/FinnexusOptions_V2/contracts/OptionsManager/ManagerProxy.sol\":\"ManagerProxy\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/work/solidity/FinnexusOptions_V2/contracts/CollateralPool/ICollateralPool.sol\":{\"keccak256\":\"0xcf764bee44e49ee6ace12db98bb08c4739f8a4fcb78f76e8348850b48bf1a940\",\"urls\":[\"bzz-raw://5e265e972df99cc66d23091b9736f461bab4035a1ec2dc5914aa10b54962be36\",\"dweb:/ipfs/QmdxxJeWMMjyjWhicXajMAWf45gzAUVSV7cShGpN51TeuZ\"]},\"/C/work/solidity/FinnexusOptions_V2/contracts/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6546de7f0e54c07a45e042b9c8a64b4e7b46d686db45088e87576b3f0236c5b\",\"urls\":[\"bzz-raw://631cd766d4cac84258ea4110daaea5a0f5cebeceb35eca8eb52d067940667b63\",\"dweb:/ipfs/Qmd1171o1Evek9Kb7HUezsVvgQ1fpJJ9RyZBAaLBAKC6yR\"]},\"/C/work/solidity/FinnexusOptions_V2/contracts/FPTCoin/IFPTCoin.sol\":{\"keccak256\":\"0x0bf8f86d5040cd6ca58fcd81a6515e9f1990de7bcba429f004ddaef10340ecbb\",\"urls\":[\"bzz-raw://674cd2db7286e224eb831a53d082de9dc621e2d8acf0e6fa8e07067c08c4558d\",\"dweb:/ipfs/QmdZcpZCaC3UvaTkMx6PzaM1ZvJPHCNvZCJibyt9Pw9mCK\"]},\"/C/work/solidity/FinnexusOptions_V2/contracts/OptionsManager/ManagerData.sol\":{\"keccak256\":\"0x42f7f64fb15cab7fa197a23773ae50326aa7ed9005bae77d07a9f91807315c4d\",\"urls\":[\"bzz-raw://c6f91a3cf4eab5a565a6d6e0d20d8abe262ccf4e47170c43504afe3076e1b4b0\",\"dweb:/ipfs/QmNQTqu8FWpjuKzbWeYHgXyoAJdHpbGN5WkE4XCUczN7ac\"]},\"/C/work/solidity/FinnexusOptions_V2/contracts/OptionsManager/ManagerProxy.sol\":{\"keccak256\":\"0xb7de90aecfe67ce8c722fb1c09443258626ee48834915c9ac170d1ccfb48d3a7\",\"urls\":[\"bzz-raw://9fb3749685357b9e45c32b7902787dbbef9e1ca3e6a079a0141c12fb2814163b\",\"dweb:/ipfs/QmedbfJvbr57VKqwtRB843NWCTpXneCyXnvnA8xX9DDXDq\"]},\"/C/work/solidity/FinnexusOptions_V2/contracts/OptionsPool/IOptionsPool.sol\":{\"keccak256\":\"0x612f27f19c75e81d88558b48179a7750b3fc4ebc1fc959ac1c6f19a572ad93d2\",\"urls\":[\"bzz-raw://3c0fe6d4e8666d70278c56b948615a19863e7110ff97f5f5c9a1fc1a36deb6aa\",\"dweb:/ipfs/QmSWw24vsrHbxxB5S5ti31t8G7o12xPhbHnffwDbdBfWkP\"]},\"/C/work/solidity/FinnexusOptions_V2/contracts/Proxy/baseProxy.sol\":{\"keccak256\":\"0xd26232665ef3df0876a683aecf2d0785e9c1dc6be3f1e7c8d2f57ea7f34fb913\",\"urls\":[\"bzz-raw://393c6ab21b5dba1dbfd036ee27b4bf393ebcc84273ff131d91193e665e2d74d9\",\"dweb:/ipfs/QmbN3TkrG78e4tt2DxHGoLmQVCyYXpNfa49YxY4rmgouJY\"]},\"/C/work/solidity/FinnexusOptions_V2/contracts/interfaces/IFNXOracle.sol\":{\"keccak256\":\"0x1efddebde02f165ecbf6471f50133ba0e96cffdca863fd4e00dbd310a90e0b76\",\"urls\":[\"bzz-raw://33fdfdedca349be4f99aa68d93f8caf4f871a7a48569a5ac9457a5efd301038e\",\"dweb:/ipfs/QmUDTMzAPzL6oyQ19Nh7tkLJHSVidUNS5iNXPC5iFZyuTN\"]},\"/C/work/solidity/FinnexusOptions_V2/contracts/interfaces/IOptionsPrice.sol\":{\"keccak256\":\"0xeb617d9512f2a7b49fb335067a2657caba42193767c47190ce9e6810dd26c09d\",\"urls\":[\"bzz-raw://e3167ebb4c5a4dffe77b0bdadba99ac352f6348c7bbdb0eff72316164047ed2c\",\"dweb:/ipfs/QmYUBXAbkNiz2hsM286WuwJfpp2rUJyqw9TrWQEawfCKuD\"]},\"/C/work/solidity/FinnexusOptions_V2/contracts/modules/AddressWhiteList.sol\":{\"keccak256\":\"0x81def677cf1dde78745f2b83c6f74f435eb660c2a241e5c70199e456124e30c0\",\"urls\":[\"bzz-raw://a5f82513342799ed552fcadfb754ad21d54dc810042cbc36f121ca0504068b76\",\"dweb:/ipfs/Qmf8N8c9mjJLfuGq4dqFgM1LvUZVpKpYCkMPMHGbuz53f7\"]},\"/C/work/solidity/FinnexusOptions_V2/contracts/modules/Halt.sol\":{\"keccak256\":\"0x26a6b75a53e116ea88948bfeaa6e28bc3eadfa9b096b5ff5b9d2496fc215d6e1\",\"urls\":[\"bzz-raw://2a404fbd9cce74500e19ff83bb107021036f7c80c84e6085b0b748f5f0fe30fe\",\"dweb:/ipfs/QmQeMMcFnvu5fXFofmq5FxQj6pChZSeFmMV9cB1HfnEk61\"]},\"/C/work/solidity/FinnexusOptions_V2/contracts/modules/Operator.sol\":{\"keccak256\":\"0xe2ff19a071b39aa12236706ba87cc01d98840e86ec754883c248daad6e0c333e\",\"urls\":[\"bzz-raw://b52c4ede1a79b4a203c0040378d3b3eee57fbe26f65c1854f3c03c20d3d9bb29\",\"dweb:/ipfs/QmWzpGK3q4j6guUJ7Q2QETXEHD5jtHaZJXxE7eUYjXFeE9\"]},\"/C/work/solidity/FinnexusOptions_V2/contracts/modules/Ownable.sol\":{\"keccak256\":\"0xbe1710912b2b0c2df59e64935f9e4d3d69af51a543edae2dbf53619fb2ffa6a6\",\"urls\":[\"bzz-raw://5563a6aa807414bfb16e43e9b6c59b9c63bb9f95778ffe8636a0f8a9bf97d944\",\"dweb:/ipfs/QmeMrswj4ab8Jp83RxC7rPo8y4XWGqVSGjbtKbc8xuFaT1\"]},\"/C/work/solidity/FinnexusOptions_V2/contracts/modules/ReentrancyGuard.sol\":{\"keccak256\":\"0x851d0c421f2861776181a318612bf83d8b9ccc6e3f205206400b3bd92cdd1e52\",\"urls\":[\"bzz-raw://8252e53d9a9b4dac568d12939ae40459c302e3496b9010182d8fd948cd2f310b\",\"dweb:/ipfs/QmcH9hcLvaS7ZtmNP3MAcQKawpyBUEUNdhdBg75PwUbUEY\"]},\"/C/work/solidity/FinnexusOptions_V2/contracts/modules/whiteList.sol\":{\"keccak256\":\"0xddfae6fb1dc4f08c912111ec619ae7003d85efafc020838dd7477f7a174b3888\",\"urls\":[\"bzz-raw://539d0a3a3db55d71babea0260d03935a3f918ff2b0ffc25d3380927ab4045e59\",\"dweb:/ipfs/QmR259fpZcL8VQiQBa82ydmkp5a9J7HABFq3mQCuPvw3Xa\"]}},\"version\":1}",
  "bytecode": "0x60806040526000805460ff60a860020a60ff0201191690556c0c9f2c9cd04674edea40000000600a55633b9aca00600b556105dc600c556101f4600d553480156200004957600080fd5b506040516200226d3803806200226d833981810160405260c08110156200006f57600080fd5b5080516020808301516040808501516060860151608087015160a090970151600e8054600160a060020a038916600160a060020a031990911681179091558451600481526024810186529687018051600160e060020a03167f8129fc1c000000000000000000000000000000000000000000000000000000001781529451875198999698949793969592948a946000949092918291908083835b602083106200012a5780518252601f19909201916020918201910162000109565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855af49150503d80600081146200018c576040519150601f19603f3d011682016040523d82523d6000602084013e62000191565b606091505b5050905080620001a057600080fd5b505060048054600160a060020a0319908116600160a060020a039788161790915560088054821695871695909517909455600580548516938616939093179092556006805484169185169190911790556003805490921692169190911790555061205d80620002106000396000f3fe60806040526004361061039e576000357c0100000000000000000000000000000000000000000000000000000000900480639ab91a35116101ee578063c5e5a3ed1161011f578063e7122ffd116100bd578063f2fde38b1161008c578063f2fde38b14610dd5578063f495438714610e08578063f4fdc0c214610e34578063fb1052bf146105775761039e565b8063e7122ffd14610d21578063e7a1c1c014610d54578063e7cd4a0414610d8d578063e7f43c6814610dc05761039e565b8063d6eb5910116100f9578063d6eb591014610577578063d7e5799214610d0c578063dab5512914610577578063e28a327d146105775761039e565b8063c5e5a3ed14610577578063cd40581914610577578063d1892904146108725761039e565b8063b18b78dd1161018c578063bc9abed211610166578063bc9abed214610bf8578063bdac4bf614610c8b578063c040725a14610cbe578063c219043b14610cd35761039e565b8063b18b78dd14610c26578063b4d5a9c714610c3b578063bc2c300214610c765761039e565b8063a37c4fcf116101c8578063a37c4fcf14610a5c578063a56ea40314610b92578063ac8a584a14610bc5578063aec6280614610bf85761039e565b80639ab91a3514610872578063a093e2d0146109f0578063a20a804514610a235761039e565b80634c69c00f116102d357806377e071ad116102715780638da5cb5b116102405780638da5cb5b146109405780638f32d59b14610955578063925c482c1461096a5780639870d7fe146109bd5761039e565b806377e071ad1461059e5780637c9c671214610872578063817bf86d1461090d5780638691a8c5146108cc5761039e565b80635ca4b73b116102ad5780635ca4b73b146108b75780636b6ecea81461059e5780636d75b9ee146108cc578063715018a6146108f85761039e565b80634c69c00f1461083f5780635bf5d897146108725780635c60da1b146108a25761039e565b80632042e5c21161034057806342049a721161031a57806342049a721461059e57806342082c1e146106dc578063447dbeac1461059e5780634487152f1461078c5761039e565b80632042e5c214610639578063251e2fe31461066c57806332c82a5f1461069d5761039e565b80630aaf38321161037c5780630aaf3832146105775780630c80d6911461059e5780631730b3cb146105d15780631a5a3fce146106065761039e565b8063059621d7146103a35780630933c1ed146103ea57806309a9d76c14610512575b600080fd5b3480156103af57600080fd5b506103d6600480360360208110156103c657600080fd5b5035600160a060020a0316610e57565b604080519115158252519081900360200190f35b3480156103f657600080fd5b5061049d6004803603602081101561040d57600080fd5b81019060208101813564010000000081111561042857600080fd5b82018360208201111561043a57600080fd5b8035906020019184600183028401116401000000008311171561045c57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610e8f945050505050565b6040805160208082528351818301528351919283929083019185019080838360005b838110156104d75781810151838201526020016104bf565b50505050905090810190601f1680156105045780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561051e57600080fd5b50610527610ea8565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561056357818101518382015260200161054b565b505050509050019250505060405180910390f35b34801561058357600080fd5b5061058c610f0b565b60408051918252519081900360200190f35b3480156105aa57600080fd5b5061058c600480360360208110156105c157600080fd5b5035600160a060020a0316610f19565b3480156105dd57600080fd5b50610604600480360360208110156105f457600080fd5b5035600160a060020a0316610f29565b005b34801561061257600080fd5b506106046004803603602081101561062957600080fd5b5035600160a060020a0316610f95565b34801561064557600080fd5b506103d66004803603602081101561065c57600080fd5b5035600160a060020a0316611001565b34801561067857600080fd5b5061068161105e565b60408051600160a060020a039092168252519081900360200190f35b3480156106a957600080fd5b5061058c600480360360808110156106c057600080fd5b508035906020810135906040810135906060013560ff1661106d565b3480156106e857600080fd5b50610604600480360360208110156106ff57600080fd5b81019060208101813564010000000081111561071a57600080fd5b82018360208201111561072c57600080fd5b8035906020019184602083028401116401000000008311171561074e57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550611080945050505050565b34801561079857600080fd5b5061049d600480360360208110156107af57600080fd5b8101906020810181356401000000008111156107ca57600080fd5b8201836020820111156107dc57600080fd5b803590602001918460018302840111640100000000831117156107fe57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506110e1945050505050565b34801561084b57600080fd5b506106046004803603602081101561086257600080fd5b5035600160a060020a0316611330565b34801561087e57600080fd5b506106046004803603604081101561089557600080fd5b508035906020013561139c565b3480156108ae57600080fd5b506106816113a9565b3480156108c357600080fd5b506106816113b8565b610604600480360360408110156108e257600080fd5b50600160a060020a03813516906020013561139c565b34801561090457600080fd5b506106046113c7565b34801561091957600080fd5b506103d66004803603602081101561093057600080fd5b5035600160a060020a031661146d565b34801561094c57600080fd5b506106816114dc565b34801561096157600080fd5b506103d66114f0565b610604600480360360e081101561098057600080fd5b508035600160a060020a031690602081013590604081013590606081013563ffffffff169060808101359060a08101359060c0013560ff16611506565b3480156109c957600080fd5b50610604600480360360208110156109e057600080fd5b5035600160a060020a0316611518565b3480156109fc57600080fd5b5061060460048036036020811015610a1357600080fd5b5035600160a060020a0316611576565b348015610a2f57600080fd5b5061060460048036036040811015610a4657600080fd5b5080359060200135600160a060020a031661139c565b348015610a6857600080fd5b5061060460048036036060811015610a7f57600080fd5b810190602081018135640100000000811115610a9a57600080fd5b820183602082011115610aac57600080fd5b80359060200191846020830284011164010000000083111715610ace57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050640100000000811115610b1e57600080fd5b820183602082011115610b3057600080fd5b80359060200191846020830284011164010000000083111715610b5257600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092955050913592506115e2915050565b348015610b9e57600080fd5b5061052760048036036020811015610bb557600080fd5b5035600160a060020a03166115f0565b348015610bd157600080fd5b506103d660048036036020811015610be857600080fd5b5035600160a060020a03166115fa565b348015610c0457600080fd5b50610c0d611657565b6040805192835260208301919091528051918290030190f35b348015610c3257600080fd5b50610681611667565b348015610c4757600080fd5b5061058c60048036036040811015610c5e57600080fd5b50600160a060020a0381358116916020013516611676565b348015610c8257600080fd5b50610604611687565b348015610c9757600080fd5b506103d660048036036020811015610cae57600080fd5b5035600160a060020a031661168f565b348015610cca57600080fd5b506106816116c3565b348015610cdf57600080fd5b5061060460048036036040811015610cf657600080fd5b50600160a060020a0381351690602001356116d2565b348015610d1857600080fd5b50610681611738565b348015610d2d57600080fd5b5061060460048036036020811015610d4457600080fd5b5035600160a060020a0316611747565b348015610d6057600080fd5b5061060460048036036040811015610d7757600080fd5b5080359060200135600160a060020a03166117b3565b348015610d9957600080fd5b5061060460048036036020811015610db057600080fd5b5035600160a060020a031661183d565b348015610dcc57600080fd5b506105276118b8565b348015610de157600080fd5b5061060460048036036020811015610df857600080fd5b5035600160a060020a0316611918565b348015610e1457600080fd5b5061060460048036036020811015610e2b57600080fd5b5035151561196b565b348015610e4057600080fd5b50610604600480360360408110156108e257600080fd5b6000610e628261146d565b8015610e895750600160a060020a0382166000908152600260208190526040909120548116145b92915050565b600e54606090610e8990600160a060020a0316836119f7565b60606001805480602002602001604051908101604052809291908181526020018280548015610f0057602002820191906000526020600020905b8154600160a060020a03168152600190910190602001808311610ee2575b505050505090505b90565b6000610f15611ab9565b5090565b6000610f23611ab9565b50919050565b610f316114f0565b610f73576040805160e560020a62461bcd0281526020600482018190526024820152600080516020612009833981519152604482015290519081900360640190fd5b60068054600160a060020a031916600160a060020a0392909216919091179055565b610f9d6114f0565b610fdf576040805160e560020a62461bcd0281526020600482018190526024820152600080516020612009833981519152604482015290519081900360640190fd5b60058054600160a060020a031916600160a060020a0392909216919091179055565b600061100b6114f0565b61104d576040805160e560020a62461bcd0281526020600482018190526024820152600080516020612009833981519152604482015290519081900360640190fd5b610e8960018363ffffffff611c0b16565b600654600160a060020a031690565b6000611077611ab9565b50949350505050565b6110886114f0565b6110ca576040805160e560020a62461bcd0281526020600482018190526024820152600080516020612009833981519152604482015290519081900360640190fd5b80516110dd906007906020840190611f1f565b5050565b60606000606030600160a060020a0316846040516024018080602001828103825283818151815260200191508051906020019080838360005b8381101561113257818101518382015260200161111a565b50505050905090810190601f16801561115f5780820380516001836020036101000a031916815260200191505b5060408051601f198184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f0933c1ed00000000000000000000000000000000000000000000000000000000178152905182519295509350839250908083835b602083106111e85780518252601f1990920191602091820191016111c9565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114611248576040519150601f19603f3d011682016040523d82523d6000602084013e61124d565b606091505b50915091506000821415611262573d60208201fd5b80806020019051602081101561127757600080fd5b810190808051604051939291908464010000000082111561129757600080fd5b9083019060208201858111156112ac57600080fd5b82516401000000008111828201881017156112c657600080fd5b82525081516020918201929091019080838360005b838110156112f35781810151838201526020016112db565b50505050905090810190601f1680156113205780820380516001836020036101000a031916815260200191505b5060405250505092505050919050565b6113386114f0565b61137a576040805160e560020a62461bcd0281526020600482018190526024820152600080516020612009833981519152604482015290519081900360640190fd5b60048054600160a060020a031916600160a060020a0392909216919091179055565b6113a4611cf9565b505050565b600e54600160a060020a031681565b600854600160a060020a031690565b6113cf6114f0565b611411576040805160e560020a62461bcd0281526020600482018190526024820152600080516020612009833981519152604482015290519081900360640190fd5b60008054604051610100909104600160a060020a0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805474ffffffffffffffffffffffffffffffffffffffff0019169055565b6000610e898260018054806020026020016040519081016040528092919081815260200182805480156114c957602002820191906000526020600020905b8154600160a060020a031681526001909101906020018083116114ab575b5050505050611d7d90919063ffffffff16565b6000546101009004600160a060020a031690565b6000546101009004600160a060020a0316331490565b61150e611cf9565b5050505050505050565b6115206114f0565b611562576040805160e560020a62461bcd0281526020600482018190526024820152600080516020612009833981519152604482015290519081900360640190fd5b61157360078263ffffffff611dcc16565b50565b61157e6114f0565b6115c0576040805160e560020a62461bcd0281526020600482018190526024820152600080516020612009833981519152604482015290519081900360640190fd5b60088054600160a060020a031916600160a060020a0392909216919091179055565b6115ea611cf9565b50505050565b6060610f23611ab9565b60006116046114f0565b611646576040805160e560020a62461bcd0281526020600482018190526024820152600080516020612009833981519152604482015290519081900360640190fd5b610e8960078363ffffffff611c0b16565b600080611662611ab9565b509091565b600454600160a060020a031690565b6000611680611ab9565b5092915050565b611573611cf9565b600061169a8261146d565b8015610e89575050600160a060020a031660009081526002602052604090205460019081161490565b600554600160a060020a031690565b6116da6114f0565b61171c576040805160e560020a62461bcd0281526020600482018190526024820152600080516020612009833981519152604482015290519081900360640190fd5b600160a060020a03909116600090815260026020526040902055565b600354600160a060020a031690565b61174f6114f0565b611791576040805160e560020a62461bcd0281526020600482018190526024820152600080516020612009833981519152604482015290519081900360640190fd5b60038054600160a060020a031916600160a060020a0392909216919091179055565b6117bb6114f0565b6117fd576040805160e560020a62461bcd0281526020600482018190526024820152600080516020612009833981519152604482015290519081900360640190fd5b806007838154811061180b57fe5b9060005260206000200160006101000a815481600160a060020a030219169083600160a060020a031602179055505050565b6118456114f0565b611887576040805160e560020a62461bcd0281526020600482018190526024820152600080516020612009833981519152604482015290519081900360640190fd5b61189860018263ffffffff611dcc16565b600160a060020a0316600090815260026020526040902063ffffffff9055565b60606007805480602002602001604051908101604052809291908181526020018280548015610f0057602002820191906000526020600020908154600160a060020a03168152600190910190602001808311610ee2575050505050905090565b6119206114f0565b611962576040805160e560020a62461bcd0281526020600482018190526024820152600080516020612009833981519152604482015290519081900360640190fd5b61157381611e64565b6119736114f0565b6119b5576040805160e560020a62461bcd0281526020600482018190526024820152600080516020612009833981519152604482015290519081900360640190fd5b6000805491151575010000000000000000000000000000000000000000000275ff00000000000000000000000000000000000000000019909216919091179055565b60606000606084600160a060020a0316846040518082805190602001908083835b60208310611a375780518252601f199092019160209182019101611a18565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855af49150503d8060008114611a97576040519150601f19603f3d011682016040523d82523d6000602084013e611a9c565b606091505b50915091506000821415611ab1573d60208201fd5b949350505050565b6060600030600160a060020a03166000366040516024018080602001828103825284848281815260200192508082843760008382015260408051601f909201601f1990811690940182810390940182529283526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f0933c1ed0000000000000000000000000000000000000000000000000000000017815292518151919750955085945091925081905083835b60208310611b885780518252601f199092019160209182019101611b69565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114611be8576040519150601f19603f3d011682016040523d82523d6000602084013e611bed565b606091505b505090506040513d6000823e818015611c07573d60408301f35b3d82fd5b8154600090815b81811015611c585783600160a060020a0316858281548110611c3057fe5b600091825260209091200154600160a060020a03161415611c5057611c58565b600101611c12565b81811015611cee57600182038114611cd257846001830381548110611c7957fe5b9060005260206000200160009054906101000a9004600160a060020a0316858281548110611ca357fe5b9060005260206000200160006101000a815481600160a060020a030219169083600160a060020a031602179055505b8454611ce2866000198301611f80565b50600192505050610e89565b506000949350505050565b600e54604051606091600091600160a060020a0390911690829036908083838082843760405192019450600093509091505080830381855af49150503d8060008114611d61576040519150601f19603f3d011682016040523d82523d6000602084013e611d66565b606091505b505090506040513d6000823e818015611c07573d82f35b8151600090815b81811015611cee5783600160a060020a0316858281518110611da257fe5b6020026020010151600160a060020a03161415611dc457600192505050610e89565b600101611d84565b611e2f82805480602002602001604051908101604052809291908181526020018280548015611e2457602002820191906000526020600020905b8154600160a060020a03168152600190910190602001808311611e06575b505050505082611d7d565b6110dd578154600181018355600083815260209020018054600160a060020a038316600160a060020a03199091161790555050565b600160a060020a038116611eac5760405160e560020a62461bcd028152600401808060200182810382526026815260200180611fe36026913960400191505060405180910390fd5b60008054604051600160a060020a038085169361010090930416917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a360008054600160a060020a039092166101000274ffffffffffffffffffffffffffffffffffffffff0019909216919091179055565b828054828255906000526020600020908101928215611f74579160200282015b82811115611f745782518254600160a060020a031916600160a060020a03909116178255602090920191600190910190611f3f565b50610f15929150611fa4565b8154818355818111156113a4576000838152602090206113a4918101908301611fc8565b610f0891905b80821115610f15578054600160a060020a0319168155600101611faa565b610f0891905b80821115610f155760008155600101611fce56fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a265627a7a7231582098941b5f251f0921457ca7cd221da240d7476b76053d15033767feeddfabeb2c64736f6c63430005100032",
  "deployedBytecode": "",
  "sourceMap": "136:9408:23:-;;;159:5:50;129:35;;-1:-1:-1;;;;;;;;85:27:46;;;903:4:22;874:33;;982:3;953:32;;1826:4;1794:36;;1869:3;1837:35;;477:482:23;5:2:-1;;;;30:1;27;20:12;5:2;477:482:23;;;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;477:482:23;;;;;;;;;;;;;;;;;;;;;;;;;258:14:33;:32;;-1:-1:-1;;;;;258:32:33;;-1:-1:-1;;;;;;258:32:33;;;;;;;;349:39;;22:32:-1;6:49;;349:39:33;;;;;25:18:-1;;;61:17;;-1:-1;;;;;182:15;349:39:33;179:29:-1;160:49;;320:69:33;;;;477:482:23;;;;;;;;;;;;;258:14:33;;349:39;;320:69;;;25:18:-1;320:69:33;;25:18:-1;36:153;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;320:69:33;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;302:87:33;;;408:7;400:16;;;;;;-1:-1:-1;;699:7:23;:32;;-1:-1:-1;;;;;;699:32:23;;;-1:-1:-1;;;;;699:32:23;;;;;;;742:13;:47;;;;;;;;;;;;;;800:12;:44;;;;;;;;;;;;;;855:15;:53;;;;;;;;;;;;;-1:-1:-1;919:32:23;;;;;;;;;;;;;-1:-1:-1;136:9408:23;;;-1:-1:-1;136:9408:23;;",
  "deployedSourceMap": "136:9408:23:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2040:202:44;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2040:202:44;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2040:202:44;-1:-1:-1;;;;;2040:202:44;;:::i;:::-;;;;;;;;;;;;;;;;;;1427:141:33;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1427:141:33;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1427:141:33;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;1427:141:33;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1427:141:33;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1427:141:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;1427:141:33;;-1:-1:-1;1427:141:33;;-1:-1:-1;;;;;1427:141:33:i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1427:141:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1445:96:44;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1445:96:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1445:96:44;;;;;;;;;;;;;;;;;6114:100:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6114:100:23;;;:::i;:::-;;;;;;;;;;;;;;;;7257:118;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7257:118:23;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7257:118:23;-1:-1:-1;;;;;7257:118:23;;:::i;2534:141:3:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2534:141:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2534:141:3;-1:-1:-1;;;;;2534:141:3;;:::i;:::-;;1838:126:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1838:126:25;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1838:126:25;-1:-1:-1;;;;;1838:126:25;;:::i;1207:151:44:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1207:151:44;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1207:151:44;-1:-1:-1;;;;;1207:151:44;;:::i;2414:114:3:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2414:114:3;;;:::i;:::-;;;;-1:-1:-1;;;;;2414:114:3;;;;;;;;;;;;;;6742:189:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6742:189:23;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;6742:189:23;;;;;;;;;;;;;;;;;;;:::i;1822:109:48:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1822:109:48;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1822:109:48;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;1822:109:48;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1822:109:48;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;1822:109:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;1822:109:48;;-1:-1:-1;1822:109:48;;-1:-1:-1;;;;;1822:109:48:i;1990:434:33:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1990:434:33;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1990:434:33;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;1990:434:33;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1990:434:33;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1990:434:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;1990:434:33;;-1:-1:-1;1990:434:33;;-1:-1:-1;;;;;1990:434:33:i;808:102:40:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;808:102:40;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;808:102:40;-1:-1:-1;;;;;808:102:40;;:::i;8078:124:23:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8078:124:23;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;8078:124:23;;;;;;;:::i;100:29:33:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;100:29:33;;;:::i;536:110:42:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;536:110:42;;;:::i;4467:119:23:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4467:119:23;;;;;;;;:::i;1666:140:49:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1666:140:49;;;:::i;1700:138:44:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1700:138:44;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1700:138:44;-1:-1:-1;;;;;1700:138:44;;:::i;857:79:49:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;857:79:49;;;:::i;1223:92::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1223:92:49;;;:::i;8682:249:23:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;8682:249:23;;-1:-1:-1;;;;;8682:249:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1035:120:48:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1035:120:48;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1035:120:48;-1:-1:-1;;;;;1035:120:48;;:::i;652:131:42:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;652:131:42;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;652:131:42;-1:-1:-1;;;;;652:131:42;;:::i;4930:119:23:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4930:119:23;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4930:119:23;;;;;;-1:-1:-1;;;;;4930:119:23;;:::i;3669:162::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3669:162:23;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3669:162:23;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;3669:162:23;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3669:162:23;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;3669:162:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;3669:162:23;;;;;;;;-1:-1:-1;3669:162:23;;-1:-1:-1;;21:11;5:28;;2:2;;;46:1;43;36:12;2:2;3669:162:23;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3669:162:23;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;3669:162:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;3669:162:23;;-1:-1:-1;;3669:162:23;;;-1:-1:-1;3669:162:23;;-1:-1:-1;;3669:162:23:i;5342:129::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5342:129:23;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5342:129:23;-1:-1:-1;;;;;5342:129:23;;:::i;1429:154:48:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1429:154:48;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1429:154:48;-1:-1:-1;;;;;1429:154:48;;:::i;7885:110:23:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7885:110:23;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;707:96:40;;8:9:-1;5:2;;;30:1;27;20:12;5:2;707:96:40;;;:::i;2932:142:23:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2932:142:23;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2932:142:23;;;;;;;;;;:::i;3224:73::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3224:73:23;;;:::i;1844:190:44:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1844:190:44;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1844:190:44;-1:-1:-1;;;;;1844:190:44;;:::i;1724:108:25:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1724:108:25;;;:::i;919:141:44:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;919:141:44;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;919:141:44;;;;;;;;:::i;1029:100:18:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1029:100:18;;;:::i;1135:114::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1135:114:18;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1135:114:18;-1:-1:-1;;;;;1135:114:18;;:::i;1235:122:48:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1235:122:48;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1235:122:48;;;;;;-1:-1:-1;;;;;1235:122:48;;:::i;740:173:44:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;740:173:44;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;740:173:44;-1:-1:-1;;;;;740:173:44;;:::i;1648:100:48:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1648:100:48;;;:::i;1961:109:49:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1961:109:49;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1961:109:49;-1:-1:-1;;;;;1961:109:49;;:::i;436:97:46:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;436:97:46;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;436:97:46;;;;:::i;2177:118:23:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2177:118:23;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2040:202:44;2112:4;2135:29;2153:10;2135:17;:29::i;:::-;:99;;;;-1:-1:-1;;;;;;2170:29:44;;;;;;403:6;2170:29;;;;;;;;;:44;;2169:64;2135:99;2128:106;2040:202;-1:-1:-1;;2040:202:44:o;1427:141:33:-;1539:14;;1496:12;;1528:32;;-1:-1:-1;;;;;1539:14:33;1555:4;1528:10;:32::i;1445:96:44:-;1489:16;1524:9;1517:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1517:16:44;;;;;;;;;;;;;;;;;;;;;;;1445:96;;:::o;6114:100:23:-;6162:7;6181:25;:23;:25::i;:::-;;6114:100;:::o;7257:118::-;7324:6;7342:25;:23;:25::i;:::-;;7257:118;;;:::o;2534:141:3:-;1069:9:49;:7;:9::i;:::-;1061:54;;;;;-1:-1:-1;;;;;1061:54:49;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1061:54:49;;;;;;;;;;;;;;;2618:15:3;:49;;-1:-1:-1;;;;;;2618:49:3;-1:-1:-1;;;;;2618:49:3;;;;;;;;;;2534:141::o;1838:126:25:-;1069:9:49;:7;:9::i;:::-;1061:54;;;;;-1:-1:-1;;;;;1061:54:49;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1061:54:49;;;;;;;;;;;;;;;1916:12:25;:40;;-1:-1:-1;;;;;;1916:40:25;-1:-1:-1;;;;;1916:40:25;;;;;;;;;;1838:126::o;1207:151:44:-;1280:4;1069:9:49;:7;:9::i;:::-;1061:54;;;;;-1:-1:-1;;;;;1061:54:49;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1061:54:49;;;;;;;;;;;;;;;1303:47:44;:9;1336:13;1303:47;:32;:47;:::i;2414:114:3:-;2504:15;;-1:-1:-1;;;;;2504:15:3;2414:114;:::o;6742:189:23:-;6879:7;6898:25;:23;:25::i;:::-;;6742:189;;;;;;:::o;1822:109:48:-;1069:9:49;:7;:9::i;:::-;1061:54;;;;;-1:-1:-1;;;;;1061:54:49;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1061:54:49;;;;;;;;;;;;;;;1898:25:48;;;;:13;;:25;;;;;:::i;:::-;;1822:109;:::o;1990:434:33:-;2068:12;2094;2108:23;2143:4;-1:-1:-1;;;;;2135:24:33;2219:4;2160:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2160:64:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2160:64:33;;;-1:-1:-1;;26:21;;;22:32;6:49;;2160:64:33;;;49:4:-1;25:18;;61:17;;2160:64:33;182:15:-1;2160:64:33;179:29:-1;160:49;;2135:90:33;;;;2160:64;;-1:-1:-1;2135:90:33;-1:-1:-1;2135:90:33;;-1:-1:-1;25:18;2135:90:33;;25:18:-1;36:153;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2135:90:33;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;2093:132:33;;;;2275:1;2266:7;2263:14;2260:2;;;2327:14;2320:4;2308:10;2304:21;2297:45;2260:2;2396:10;2385:31;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2385:31:33;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;2385:31:33;;420:4:-1;411:14;;;;2385:31:33;;;;;411:14:-1;2385:31:33;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2385:31:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2378:38;;;;1990:434;;;:::o;808:102:40:-;1069:9:49;:7;:9::i;:::-;1061:54;;;;;-1:-1:-1;;;;;1061:54:49;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1061:54:49;;;;;;;;;;;;;;;875:7:40;:28;;-1:-1:-1;;;;;;875:28:40;-1:-1:-1;;;;;875:28:40;;;;;;;;;;808:102::o;8078:124:23:-;8175:19;:17;:19::i;:::-;;8078:124;;:::o;100:29:33:-;;;-1:-1:-1;;;;;100:29:33;;:::o;536:110:42:-;624:13;;-1:-1:-1;;;;;624:13:42;536:110;:::o;1666:140:49:-;1069:9;:7;:9::i;:::-;1061:54;;;;;-1:-1:-1;;;;;1061:54:49;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1061:54:49;;;;;;;;;;;;;;;1765:1;1749:6;;1728:40;;1749:6;;;;-1:-1:-1;;;;;1749:6:49;;1728:40;;1765:1;;1728:40;1796:1;1779:19;;-1:-1:-1;;1779:19:49;;;1666:140::o;1700:138:44:-;1768:4;1791:39;1819:10;1791:9;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1791:27:44;;;;;;;;;;;;;;;;;;;;;;;:39;;;;:::i;857:79:49:-;895:7;922:6;;;;-1:-1:-1;;;;;922:6:49;;857:79::o;1223:92::-;1263:4;1301:6;;;;-1:-1:-1;;;;;1301:6:49;1287:10;:20;;1223:92::o;8682:249:23:-;8904:19;:17;:19::i;:::-;;8682:249;;;;;;;:::o;1035:120:48:-;1069:9:49;:7;:9::i;:::-;1061:54;;;;;-1:-1:-1;;;;;1061:54:49;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1061:54:49;;;;;;;;;;;;;;;1102:45:48;:13;1136:10;1102:45;:33;:45;:::i;:::-;1035:120;:::o;652:131:42:-;1069:9:49;:7;:9::i;:::-;1061:54;;;;;-1:-1:-1;;;;;1061:54:49;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1061:54:49;;;;;;;;;;;;;;;732:13:42;:43;;-1:-1:-1;;;;;;732:43:42;-1:-1:-1;;;;;732:43:42;;;;;;;;;;652:131::o;3669:162:23:-;3804:19;:17;:19::i;:::-;;3669:162;;;:::o;5342:129::-;5410:16;5438:25;:23;:25::i;1429:154:48:-;1501:4;1069:9:49;:7;:9::i;:::-;1061:54;;;;;-1:-1:-1;;;;;1061:54:49;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1061:54:49;;;;;;;;;;;;;;;1524:51:48;:13;1561;1524:51;:36;:51;:::i;7885:110:23:-;7934:7;7942;7962:25;:23;:25::i;:::-;;7885:110;;:::o;707:96:40:-;788:7;;-1:-1:-1;;;;;788:7:40;707:96;:::o;2932:142:23:-;3022:7;3041:25;:23;:25::i;:::-;;2932:142;;;;:::o;3224:73::-;3270:19;:17;:19::i;1844:190:44:-;1912:4;1935:29;1953:10;1935:17;:29::i;:::-;:91;;;;-1:-1:-1;;;;;;;1970:29:44;;;;;:17;:29;;;;;;347:6;1970:40;;;1969:56;;1844:190::o;1724:108:25:-;1811:12;;-1:-1:-1;;;;;1811:12:25;1724:108;:::o;919:141:44:-;1069:9:49;:7;:9::i;:::-;1061:54;;;;;-1:-1:-1;;;;;1061:54:49;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1061:54:49;;;;;;;;;;;;;;;-1:-1:-1;;;;;1010:29:44;;;;;;;:17;:29;;;;;:42;919:141::o;1029:100:18:-;1112:8;;-1:-1:-1;;;;;1112:8:18;1029:100;:::o;1135:114::-;1069:9:49;:7;:9::i;:::-;1061:54;;;;;-1:-1:-1;;;;;1061:54:49;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1061:54:49;;;;;;;;;;;;;;;1209:8:18;:32;;-1:-1:-1;;;;;;1209:32:18;-1:-1:-1;;;;;1209:32:18;;;;;;;;;;1135:114::o;1235:122:48:-;1069:9:49;:7;:9::i;:::-;1061:54;;;;;-1:-1:-1;;;;;1061:54:49;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1061:54:49;;;;;;;;;;;;;;;1339:10:48;1316:13;1330:5;1316:20;;;;;;;;;;;;;;;;:33;;;;;-1:-1:-1;;;;;1316:33:48;;;;;-1:-1:-1;;;;;1316:33:48;;;;;;1235:122;;:::o;740:173:44:-;1069:9:49;:7;:9::i;:::-;1061:54;;;;;-1:-1:-1;;;;;1061:54:49;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1061:54:49;;;;;;;;;;;;;;;808:41:44;:9;838:10;808:41;:29;:41;:::i;:::-;-1:-1:-1;;;;;860:29:44;;;;;:17;:29;;;;;291:10;860:45;;740:173::o;1648:100:48:-;1691:16;1727:13;1720:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1720:20:48;;;;;;;;;;;;;;;;;;;;;;1648:100;:::o;1961:109:49:-;1069:9;:7;:9::i;:::-;1061:54;;;;;-1:-1:-1;;;;;1061:54:49;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1061:54:49;;;;;;;;;;;;;;;2034:28;2053:8;2034:18;:28::i;436:97:46:-;1069:9:49;:7;:9::i;:::-;1061:54;;;;;-1:-1:-1;;;;;1061:54:49;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1061:54:49;;;;;;;;;;;;;;;513:6:46;:13;;;;;;;-1:-1:-1;;513:13:46;;;;;;;;;436:97::o;782:343:33:-;855:12;881;895:23;922:6;-1:-1:-1;;;;;922:19:33;942:4;922:25;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;922:25:33;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;880:67:33;;;;997:1;988:7;985:14;982:2;;;1049:14;1042:4;1030:10;1026:21;1019:45;982:2;1107:10;782:343;-1:-1:-1;;;;782:343:33:o;2432:507::-;2490:12;2516;2542:4;-1:-1:-1;;;;;2534:24:33;2618:8;;2559:68;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;;74:27;2559:68:33;;;137:4:-1;117:14;;;-1:-1;;113:30;;;157:16;;;26:21;;;22:32;;;6:49;;2559:68:33;;;49:4:-1;25:18;;61:17;;2559:68:33;182:15:-1;2559:68:33;179:29:-1;160:49;;2534:94:33;;;;2559:68;;-1:-1:-1;2534:94:33;-1:-1:-1;2534:94:33;;-1:-1:-1;25:18;;-1:-1;2534:94:33;;-1:-1:-1;2534:94:33;25:18:-1;36:153;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2534:94:33;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;2515:113:33;;;2691:4;2685:11;2742:14;2739:1;2725:12;2710:47;2780:7;2801:47;;;;2904:14;2897:4;2883:12;2879:23;2872:47;2801;2831:14;2817:12;2810:36;3358:477:55;3480:16;;3449:4;;;3529:91;3537:3;3535:1;:5;3529:91;;;3580:4;-1:-1:-1;;;;;3564:20:55;:9;3574:1;3564:12;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3564:12:55;:20;3560:48;;;3603:5;;3560:48;3541:3;;3529:91;;;3636:3;3634:1;:5;3630:175;;;3666:1;3662:3;:5;3659:1;:8;3655:80;;3703:9;3717:1;3713:3;:5;3703:16;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3703:16:55;3688:9;3698:1;3688:12;;;;;;;;;;;;;;;;:31;;;;;-1:-1:-1;;;;;3688:31:55;;;;;-1:-1:-1;;;;;3688:31:55;;;;;;3655:80;3749:18;;;:9;-1:-1:-1;;3749:18:55;;;:::i;:::-;;3789:4;3782:11;;;;;;3630:175;-1:-1:-1;3822:5:55;;3358:477;-1:-1:-1;;;;3358:477:55:o;2947:428:33:-;3038:14;;:37;;2994:12;;3020;;-1:-1:-1;;;;;3038:14:33;;;;3020:12;;3066:8;;3038:37;3020:12;3066:8;;3020:12;3038:37;1:33:-1;3038:37:33;;45:16:-1;;;-1:-1;3038:37:33;;-1:-1:-1;3038:37:33;;-1:-1:-1;;3038:37:33;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;3019:56:33;;;3138:4;3132:11;3189:14;3186:1;3172:12;3157:47;3227:7;3248:47;;;;3340:14;3326:12;3319:36;3841:286:55;3962:16;;3932:4;;;3989:108;4008:3;4006:1;:5;3989:108;;;4051:4;-1:-1:-1;;;;;4035:20:55;:9;4045:1;4035:12;;;;;;;;;;;;;;-1:-1:-1;;;;;4035:20:55;;4031:54;;;4081:4;4074:11;;;;;;4031:54;4012:3;;3989:108;;3169:183;3264:33;3282:9;3264:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3264:33:55;;;;;;;;;;;;;;;;;;;;;3292:4;3264:17;:33::i;:::-;3259:86;;27:10:-1;;39:1;23:18;;45:23;;-1:-1;3313:20:55;;;;;;;;;-1:-1:-1;;;;;3313:20:55;;-1:-1:-1;;;;;;3313:20:55;;;;;;3169:183;;:::o;2176:229:49:-;-1:-1:-1;;;;;2250:22:49;;2242:73;;;;-1:-1:-1;;;;;2242:73:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2352:6;;;2331:38;;-1:-1:-1;;;;;2331:38:49;;;;2352:6;;;;;;2331:38;;;2380:6;:17;;-1:-1:-1;;;;;2380:17:49;;;;;-1:-1:-1;;2380:17:49;;;;;;;;;2176:229::o;136:9408:23:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;136:9408:23;-1:-1:-1;;;;;136:9408:23;;;;;;;;;;;-1:-1:-1;136:9408:23;;;;;;;-1:-1:-1;136:9408:23;;;-1:-1:-1;136:9408:23;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;;136:9408:23;;;;;;;;;;;;;;;;;;;;;;;;",
  "source": "pragma solidity ^0.5.1;\r\nimport \"./ManagerData.sol\";\r\nimport \"../Proxy/baseProxy.sol\";\r\n/**\r\n * @title  Erc20Delegator Contract\r\n\r\n */\r\ncontract ManagerProxy is ManagerData,baseProxy{\r\n    /**\r\n    * @dev Options manager constructor. set other contract address\r\n    *  oracleAddr fnx oracle contract address.\r\n    *  optionsPriceAddr options price contract address\r\n    *  optionsPoolAddr optoins pool contract address\r\n    *  FPTCoinAddr FPTCoin contract address\r\n    */\r\n    constructor(address implementation_,address oracleAddr,address optionsPriceAddr,\r\n            address optionsPoolAddr,address collateralPoolAddr,address FPTCoinAddr)\r\n         baseProxy(implementation_) public  {\r\n        _oracle = IFNXOracle(oracleAddr);\r\n        _optionsPrice = IOptionsPrice(optionsPriceAddr);\r\n        _optionsPool = IOptionsPool(optionsPoolAddr);\r\n        _collateralPool = ICollateralPool(collateralPoolAddr);\r\n        _FPTCoin = IFPTCoin(FPTCoinAddr);\r\n    }\r\n    /**\r\n     * @dev get the valid range of input amount\r\n     */\r\n    function getInputAmountRange() public view returns(uint256,uint256) {\r\n        delegateToViewAndReturn();\r\n    }\r\n    /**\r\n     * @dev set the valid range of input amount\r\n     *  _minAmount the minimum input amount limit\r\n     *  _maxAmount the maximum input amount limit\r\n     */\r\n    function setInputAmountRange(uint256 /*_minAmount*/,uint256 /*_maxAmount*/) public{\r\n        delegateAndReturn();\r\n    }\r\n\r\n    /**\r\n     * @dev  The foundation operator want to add some coin to netbalance, which can increase the FPTCoin net worth.\r\n     *  settlement the settlement coin address which the foundation operator want to transfer in this contract address.\r\n     *  amount the amount of the settlement coin which the foundation operator want to transfer in this contract address.\r\n     */\r\n    function addNetBalance(address /*settlement*/,uint256 /*amount*/) public payable  {\r\n        delegateAndReturn();\r\n    }\r\n    /**\r\n     * @dev  The foundation owner want to set the minimum collateral occupation rate.\r\n     *  collateral collateral coin address\r\n     *  colRate The thousandths of the minimum collateral occupation rate.\r\n     */\r\n    function setCollateralRate(address /*collateral*/,uint256 /*colRate*/) public {\r\n        delegateAndReturn();\r\n\r\n    }\r\n    /**\r\n     * @dev Get the minimum collateral occupation rate.\r\n     */\r\n    function getCollateralRate(address /*collateral*/)public view returns (uint256) {\r\n        delegateToViewAndReturn();\r\n    }\r\n    /**\r\n     * @dev Retrieve user's cost of collateral, priced in USD.\r\n     *  user input retrieved account \r\n     */\r\n    function getUserPayingUsd(address /*user*/)public view returns (uint256){\r\n        delegateToViewAndReturn();\r\n    }\r\n    /**\r\n     * @dev Retrieve user's amount of the specified collateral.\r\n     *  user input retrieved account \r\n     *  collateral input retrieved collateral coin address \r\n     */\r\n    function userInputCollateral(address /*user*/,address /*collateral*/)public view returns (uint256){\r\n        delegateToViewAndReturn();\r\n    }\r\n    /**\r\n     * @dev Calculate the collateral pool shared worth.\r\n     * The foundation operator will invoke this function frequently\r\n     */\r\n    function calSharedPayment() public {\r\n        delegateAndReturn();\r\n    }\r\n    /**\r\n     * @dev Set the calculation results of the collateral pool shared worth.\r\n     * The foundation operator will invoke this function frequently\r\n     *  newNetworth Current expired options' net worth \r\n     *  sharedBalances All unexpired options' shared balance distributed by time.\r\n     *  firstOption The new first unexpired option's index.\r\n     */\r\n    function setSharedPayment(int256[] memory /*newNetworth*/,int256[] memory /*sharedBalances*/,uint256 /*firstOption*/) public{\r\n        delegateAndReturn();\r\n    }\r\n    /**\r\n     * @dev Retrieve user's current total worth, priced in USD.\r\n     *  account input retrieve account\r\n     */\r\n    function getUserTotalWorth(address /*account*/)public view returns (uint256){\r\n        delegateToViewAndReturn();\r\n    }\r\n    /**\r\n     * @dev Retrieve FPTCoin's net worth, priced in USD.\r\n     */\r\n    function getTokenNetworth() public view returns (uint256){\r\n        delegateToViewAndReturn();\r\n    }\r\n    /**\r\n     * @dev Deposit collateral in this pool from user.\r\n     *  collateral The collateral coin address which is in whitelist.\r\n     *  amount the amount of collateral to deposit.\r\n     */\r\n    function addCollateral(address /*collateral*/,uint256 /*amount*/) public payable {\r\n        delegateAndReturn();\r\n    }\r\n    /**\r\n     * @dev redeem collateral from this pool, user can input the prioritized collateral,he will get this coin,\r\n     * if this coin is unsufficient, he will get others collateral which in whitelist.\r\n     *  tokenAmount the amount of FPTCoin want to redeem.\r\n     *  collateral The prioritized collateral coin address.\r\n     */\r\n    function redeemCollateral(uint256 /*tokenAmount*/,address /*collateral*/) public {\r\n        delegateAndReturn();\r\n    }\r\n    /**\r\n     * @dev Retrieve user's collateral worth in all collateral coin. \r\n     * If user want to redeem all his collateral,and the vacant collateral is sufficient,\r\n     * He can redeem each collateral amount in return list.\r\n     *  account the retrieve user's account;\r\n     */\r\n    function calCollateralWorth(address /*account*/)public view returns(uint256[] memory){\r\n        delegateToViewAndReturn();\r\n    }\r\n    /**\r\n     * @dev Retrieve the occupied collateral worth, multiplied by minimum collateral rate, priced in USD. \r\n     */\r\n    function getOccupiedCollateral() public view returns(uint256){\r\n        delegateToViewAndReturn();\r\n    }\r\n    /**\r\n     * @dev Retrieve the available collateral worth, the worth of collateral which can used for buy options, priced in USD. \r\n     */\r\n    function getAvailableCollateral()public view returns(uint256){\r\n        delegateToViewAndReturn();\r\n    }\r\n    /**\r\n     * @dev Retrieve the left collateral worth, the worth of collateral which can used for redeem collateral, priced in USD. \r\n     */\r\n    function getLeftCollateral()public view returns(uint256){\r\n        delegateToViewAndReturn();\r\n    }\r\n    /**\r\n     * @dev Retrieve the unlocked collateral worth, the worth of collateral which currently used for options, priced in USD. \r\n     */\r\n    function getUnlockedCollateral()public view returns(uint256){\r\n        delegateToViewAndReturn();\r\n    }\r\n    /**\r\n     * @dev The auxiliary function for calculate option occupied. \r\n     *  strikePrice option's strike price\r\n     *  underlyingPrice option's underlying price\r\n     *  amount option's amount\r\n     *  optType option's type, 0 for call, 1 for put.\r\n     */\r\n    function calOptionsOccupied(uint256 /*strikePrice*/,uint256 /*underlyingPrice*/,uint256 /*amount*/,uint8 /*optType*/)public view returns(uint256){\r\n        delegateToViewAndReturn();\r\n    }\r\n    /**\r\n     * @dev Retrieve the total collateral worth, priced in USD. \r\n     */\r\n    function getTotalCollateral()public view returns(uint256){\r\n        delegateToViewAndReturn();\r\n    }\r\n    /**\r\n     * @dev Retrieve the balance of collateral, the auxiliary function for the total collateral calculation. \r\n     */\r\n    function getRealBalance(address /*settlement*/)public view returns(int256){\r\n        delegateToViewAndReturn();\r\n    }\r\n    function getNetWorthBalance(address /*settlement*/)public view returns(uint256){\r\n        delegateToViewAndReturn();\r\n    }\r\n    /**\r\n     * @dev collateral occupation rate calculation\r\n     *      collateral occupation rate = sum(collateral Rate * collateral balance) / sum(collateral balance)\r\n     */\r\n    function calculateCollateralRate()public view returns (uint256){\r\n        delegateToViewAndReturn();\r\n    }\r\n    /**\r\n    * @dev retrieve input price valid range rate, thousandths.\r\n    */ \r\n    function getPriceRateRange() public view returns(uint256,uint256) {\r\n        delegateToViewAndReturn();\r\n    }\r\n    /**\r\n    * @dev set input price valid range rate, thousandths.\r\n    */ \r\n    function setPriceRateRange(uint256 /*_minPriceRate*/,uint256 /*_maxPriceRate*/) public{\r\n        delegateAndReturn();\r\n    }\r\n    /**\r\n    * @dev user buy option and create new option.\r\n    *  settlement user's settement coin address\r\n    *  settlementAmount amount of settlement user want fo pay.\r\n    *  strikePrice user input option's strike price\r\n    *  underlying user input option's underlying id, 1 for BTC,2 for ETH\r\n    *  expiration user input expiration,time limit from now\r\n    *  amount user input amount of new option user want to buy.\r\n    *  optType user input option type\r\n    */ \r\n    function buyOption(address /*settlement*/,uint256 /*settlementAmount*/, uint256 /*strikePrice*/,uint32 /*underlying*/,\r\n                uint256 /*expiration*/,uint256 /*amount*/,uint8 /*optType*/) public payable{\r\n        delegateAndReturn();\r\n    }\r\n    /**\r\n    * @dev User sell option.\r\n    *  optionsId option's ID which was wanted to sell, must owned by user\r\n    *  amount user input amount of option user want to sell.\r\n    */ \r\n    function sellOption(uint256 /*optionsId*/,uint256 /*amount*/) public{\r\n        delegateAndReturn();\r\n    }\r\n    /**\r\n    * @dev User exercise option.\r\n    *  optionsId option's ID which was wanted to exercise, must owned by user\r\n    *  amount user input amount of option user want to exercise.\r\n    */ \r\n    function exerciseOption(uint256 /*optionsId*/,uint256 /*amount*/) public{\r\n        delegateAndReturn();\r\n    }\r\n}\r\n",
  "sourcePath": "C:\\work\\solidity\\FinnexusOptions_V2\\contracts\\OptionsManager\\ManagerProxy.sol",
  "ast": {
    "absolutePath": "/C/work/solidity/FinnexusOptions_V2/contracts/OptionsManager/ManagerProxy.sol",
    "exportedSymbols": {
      "ManagerProxy": [
        8043
      ]
    },
    "id": 8044,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7674,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".1"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:23"
      },
      {
        "absolutePath": "/C/work/solidity/FinnexusOptions_V2/contracts/OptionsManager/ManagerData.sol",
        "file": "./ManagerData.sol",
        "id": 7675,
        "nodeType": "ImportDirective",
        "scope": 8044,
        "sourceUnit": 7673,
        "src": "25:27:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/work/solidity/FinnexusOptions_V2/contracts/Proxy/baseProxy.sol",
        "file": "../Proxy/baseProxy.sol",
        "id": 7676,
        "nodeType": "ImportDirective",
        "scope": 8044,
        "sourceUnit": 13422,
        "src": "54:32:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7677,
              "name": "ManagerData",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7672,
              "src": "161:11:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ManagerData_$7672",
                "typeString": "contract ManagerData"
              }
            },
            "id": 7678,
            "nodeType": "InheritanceSpecifier",
            "src": "161:11:23"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7679,
              "name": "baseProxy",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 13421,
              "src": "173:9:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_baseProxy_$13421",
                "typeString": "contract baseProxy"
              }
            },
            "id": 7680,
            "nodeType": "InheritanceSpecifier",
            "src": "173:9:23"
          }
        ],
        "contractDependencies": [
          1614,
          5636,
          7672,
          8760,
          13421,
          16297,
          16402,
          16618,
          18176,
          18331,
          18442,
          18465
        ],
        "contractKind": "contract",
        "documentation": "@title  Erc20Delegator Contract",
        "fullyImplemented": true,
        "id": 8043,
        "linearizedBaseContracts": [
          8043,
          13421,
          7672,
          16402,
          18331,
          1614,
          8760,
          16297,
          5636,
          16618,
          18176,
          18442,
          18465
        ],
        "name": "ManagerProxy",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 7728,
              "nodeType": "Block",
              "src": "688:271:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7698,
                      "name": "_oracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16272,
                      "src": "699:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IFNXOracle_$16268",
                        "typeString": "contract IFNXOracle"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 7700,
                          "name": "oracleAddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7684,
                          "src": "720:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 7699,
                        "name": "IFNXOracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16268,
                        "src": "709:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IFNXOracle_$16268_$",
                          "typeString": "type(contract IFNXOracle)"
                        }
                      },
                      "id": 7701,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "709:22:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IFNXOracle_$16268",
                        "typeString": "contract IFNXOracle"
                      }
                    },
                    "src": "699:32:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IFNXOracle_$16268",
                      "typeString": "contract IFNXOracle"
                    }
                  },
                  "id": 7703,
                  "nodeType": "ExpressionStatement",
                  "src": "699:32:23"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7704,
                      "name": "_optionsPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16377,
                      "src": "742:13:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IOptionsPrice_$16373",
                        "typeString": "contract IOptionsPrice"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 7706,
                          "name": "optionsPriceAddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7686,
                          "src": "772:16:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 7705,
                        "name": "IOptionsPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16373,
                        "src": "758:13:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IOptionsPrice_$16373_$",
                          "typeString": "type(contract IOptionsPrice)"
                        }
                      },
                      "id": 7707,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "758:31:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IOptionsPrice_$16373",
                        "typeString": "contract IOptionsPrice"
                      }
                    },
                    "src": "742:47:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IOptionsPrice_$16373",
                      "typeString": "contract IOptionsPrice"
                    }
                  },
                  "id": 7709,
                  "nodeType": "ExpressionStatement",
                  "src": "742:47:23"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7714,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7710,
                      "name": "_optionsPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8735,
                      "src": "800:12:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IOptionsPool_$8731",
                        "typeString": "contract IOptionsPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 7712,
                          "name": "optionsPoolAddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7688,
                          "src": "828:15:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 7711,
                        "name": "IOptionsPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8731,
                        "src": "815:12:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IOptionsPool_$8731_$",
                          "typeString": "type(contract IOptionsPool)"
                        }
                      },
                      "id": 7713,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "815:29:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IOptionsPool_$8731",
                        "typeString": "contract IOptionsPool"
                      }
                    },
                    "src": "800:44:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IOptionsPool_$8731",
                      "typeString": "contract IOptionsPool"
                    }
                  },
                  "id": 7715,
                  "nodeType": "ExpressionStatement",
                  "src": "800:44:23"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7716,
                      "name": "_collateralPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1589,
                      "src": "855:15:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICollateralPool_$1585",
                        "typeString": "contract ICollateralPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 7718,
                          "name": "collateralPoolAddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7690,
                          "src": "889:18:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 7717,
                        "name": "ICollateralPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1585,
                        "src": "873:15:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ICollateralPool_$1585_$",
                          "typeString": "type(contract ICollateralPool)"
                        }
                      },
                      "id": 7719,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "873:35:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICollateralPool_$1585",
                        "typeString": "contract ICollateralPool"
                      }
                    },
                    "src": "855:53:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICollateralPool_$1585",
                      "typeString": "contract ICollateralPool"
                    }
                  },
                  "id": 7721,
                  "nodeType": "ExpressionStatement",
                  "src": "855:53:23"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7726,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7722,
                      "name": "_FPTCoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5611,
                      "src": "919:8:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IFPTCoin_$5607",
                        "typeString": "contract IFPTCoin"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 7724,
                          "name": "FPTCoinAddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7692,
                          "src": "939:11:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 7723,
                        "name": "IFPTCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5607,
                        "src": "930:8:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IFPTCoin_$5607_$",
                          "typeString": "type(contract IFPTCoin)"
                        }
                      },
                      "id": 7725,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "930:21:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IFPTCoin_$5607",
                        "typeString": "contract IFPTCoin"
                      }
                    },
                    "src": "919:32:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IFPTCoin_$5607",
                      "typeString": "contract IFPTCoin"
                    }
                  },
                  "id": 7727,
                  "nodeType": "ExpressionStatement",
                  "src": "919:32:23"
                }
              ]
            },
            "documentation": "@dev Options manager constructor. set other contract address\n oracleAddr fnx oracle contract address.\n optionsPriceAddr options price contract address\n optionsPoolAddr optoins pool contract address\n FPTCoinAddr FPTCoin contract address",
            "id": 7729,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 7695,
                    "name": "implementation_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7682,
                    "src": "663:15:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 7696,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7694,
                  "name": "baseProxy",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 13421,
                  "src": "653:9:23",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_baseProxy_$13421_$",
                    "typeString": "type(contract baseProxy)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "653:26:23"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7693,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7682,
                  "name": "implementation_",
                  "nodeType": "VariableDeclaration",
                  "scope": 7729,
                  "src": "489:23:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7681,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "489:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7684,
                  "name": "oracleAddr",
                  "nodeType": "VariableDeclaration",
                  "scope": 7729,
                  "src": "513:18:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7683,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "513:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7686,
                  "name": "optionsPriceAddr",
                  "nodeType": "VariableDeclaration",
                  "scope": 7729,
                  "src": "532:24:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7685,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "532:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7688,
                  "name": "optionsPoolAddr",
                  "nodeType": "VariableDeclaration",
                  "scope": 7729,
                  "src": "571:23:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7687,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "571:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7690,
                  "name": "collateralPoolAddr",
                  "nodeType": "VariableDeclaration",
                  "scope": 7729,
                  "src": "595:26:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7689,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "595:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7692,
                  "name": "FPTCoinAddr",
                  "nodeType": "VariableDeclaration",
                  "scope": 7729,
                  "src": "622:19:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7691,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "622:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "488:154:23"
            },
            "returnParameters": {
              "id": 7697,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "688:0:23"
            },
            "scope": 8043,
            "src": "477:482:23",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7739,
              "nodeType": "Block",
              "src": "1100:44:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7736,
                      "name": "delegateToViewAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13405,
                      "src": "1111:23:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () view returns (bytes memory)"
                      }
                    },
                    "id": 7737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1111:25:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7738,
                  "nodeType": "ExpressionStatement",
                  "src": "1111:25:23"
                }
              ]
            },
            "documentation": "@dev get the valid range of input amount",
            "id": 7740,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getInputAmountRange",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7730,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1060:2:23"
            },
            "returnParameters": {
              "id": 7735,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7732,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7740,
                  "src": "1083:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7731,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1083:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7734,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7740,
                  "src": "1091:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7733,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1091:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1082:17:23"
            },
            "scope": 8043,
            "src": "1032:112:23",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7750,
              "nodeType": "Block",
              "src": "1401:38:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7747,
                      "name": "delegateAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13420,
                      "src": "1412:17:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () returns (bytes memory)"
                      }
                    },
                    "id": 7748,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1412:19:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7749,
                  "nodeType": "ExpressionStatement",
                  "src": "1412:19:23"
                }
              ]
            },
            "documentation": "@dev set the valid range of input amount\n _minAmount the minimum input amount limit\n _maxAmount the maximum input amount limit",
            "id": 7751,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setInputAmountRange",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7745,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7742,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7751,
                  "src": "1348:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7741,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1348:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7744,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7751,
                  "src": "1371:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7743,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1371:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1347:47:23"
            },
            "returnParameters": {
              "id": 7746,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1401:0:23"
            },
            "scope": 8043,
            "src": "1319:120:23",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7761,
              "nodeType": "Block",
              "src": "1908:38:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7758,
                      "name": "delegateAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13420,
                      "src": "1919:17:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () returns (bytes memory)"
                      }
                    },
                    "id": 7759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1919:19:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7760,
                  "nodeType": "ExpressionStatement",
                  "src": "1919:19:23"
                }
              ]
            },
            "documentation": "@dev  The foundation operator want to add some coin to netbalance, which can increase the FPTCoin net worth.\n settlement the settlement coin address which the foundation operator want to transfer in this contract address.\n amount the amount of the settlement coin which the foundation operator want to transfer in this contract address.",
            "id": 7762,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addNetBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7756,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7753,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7762,
                  "src": "1849:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7752,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1849:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7755,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7762,
                  "src": "1872:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7754,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1872:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1848:43:23"
            },
            "returnParameters": {
              "id": 7757,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1908:0:23"
            },
            "scope": 8043,
            "src": "1826:120:23",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7772,
              "nodeType": "Block",
              "src": "2255:40:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7769,
                      "name": "delegateAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13420,
                      "src": "2266:17:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () returns (bytes memory)"
                      }
                    },
                    "id": 7770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2266:19:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7771,
                  "nodeType": "ExpressionStatement",
                  "src": "2266:19:23"
                }
              ]
            },
            "documentation": "@dev  The foundation owner want to set the minimum collateral occupation rate.\n collateral collateral coin address\n colRate The thousandths of the minimum collateral occupation rate.",
            "id": 7773,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setCollateralRate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7767,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7764,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7773,
                  "src": "2204:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7763,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2204:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7766,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7773,
                  "src": "2227:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7765,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2227:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2203:44:23"
            },
            "returnParameters": {
              "id": 7768,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2255:0:23"
            },
            "scope": 8043,
            "src": "2177:118:23",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7783,
              "nodeType": "Block",
              "src": "2456:44:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7780,
                      "name": "delegateToViewAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13405,
                      "src": "2467:23:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () view returns (bytes memory)"
                      }
                    },
                    "id": 7781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2467:25:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7782,
                  "nodeType": "ExpressionStatement",
                  "src": "2467:25:23"
                }
              ]
            },
            "documentation": "@dev Get the minimum collateral occupation rate.",
            "id": 7784,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCollateralRate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7776,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7775,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7784,
                  "src": "2403:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7774,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2403:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2402:24:23"
            },
            "returnParameters": {
              "id": 7779,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7778,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7784,
                  "src": "2447:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7777,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2447:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2446:9:23"
            },
            "scope": 8043,
            "src": "2376:124:23",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7794,
              "nodeType": "Block",
              "src": "2699:44:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7791,
                      "name": "delegateToViewAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13405,
                      "src": "2710:23:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () view returns (bytes memory)"
                      }
                    },
                    "id": 7792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2710:25:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7793,
                  "nodeType": "ExpressionStatement",
                  "src": "2710:25:23"
                }
              ]
            },
            "documentation": "@dev Retrieve user's cost of collateral, priced in USD.\n user input retrieved account ",
            "id": 7795,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserPayingUsd",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7787,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7786,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7795,
                  "src": "2653:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7785,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2653:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2652:18:23"
            },
            "returnParameters": {
              "id": 7790,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7789,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7795,
                  "src": "2691:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7788,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2691:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2690:9:23"
            },
            "scope": 8043,
            "src": "2627:116:23",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7807,
              "nodeType": "Block",
              "src": "3030:44:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7804,
                      "name": "delegateToViewAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13405,
                      "src": "3041:23:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () view returns (bytes memory)"
                      }
                    },
                    "id": 7805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3041:25:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7806,
                  "nodeType": "ExpressionStatement",
                  "src": "3041:25:23"
                }
              ]
            },
            "documentation": "@dev Retrieve user's amount of the specified collateral.\n user input retrieved account \n collateral input retrieved collateral coin address ",
            "id": 7808,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "userInputCollateral",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7800,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7797,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7808,
                  "src": "2961:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7796,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2961:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7799,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7808,
                  "src": "2978:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7798,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2978:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2960:41:23"
            },
            "returnParameters": {
              "id": 7803,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7802,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7808,
                  "src": "3022:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7801,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3022:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3021:9:23"
            },
            "scope": 8043,
            "src": "2932:142:23",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7814,
              "nodeType": "Block",
              "src": "3259:38:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7811,
                      "name": "delegateAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13420,
                      "src": "3270:17:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () returns (bytes memory)"
                      }
                    },
                    "id": 7812,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3270:19:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7813,
                  "nodeType": "ExpressionStatement",
                  "src": "3270:19:23"
                }
              ]
            },
            "documentation": "@dev Calculate the collateral pool shared worth.\nThe foundation operator will invoke this function frequently",
            "id": 7815,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calSharedPayment",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7809,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3249:2:23"
            },
            "returnParameters": {
              "id": 7810,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3259:0:23"
            },
            "scope": 8043,
            "src": "3224:73:23",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7829,
              "nodeType": "Block",
              "src": "3793:38:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7826,
                      "name": "delegateAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13420,
                      "src": "3804:17:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () returns (bytes memory)"
                      }
                    },
                    "id": 7827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3804:19:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7828,
                  "nodeType": "ExpressionStatement",
                  "src": "3804:19:23"
                }
              ]
            },
            "documentation": "@dev Set the calculation results of the collateral pool shared worth.\nThe foundation operator will invoke this function frequently\n newNetworth Current expired options' net worth \n sharedBalances All unexpired options' shared balance distributed by time.\n firstOption The new first unexpired option's index.",
            "id": 7830,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setSharedPayment",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7824,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7818,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7830,
                  "src": "3695:15:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                    "typeString": "int256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7816,
                      "name": "int256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3695:6:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "id": 7817,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3695:8:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_int256_$dyn_storage_ptr",
                      "typeString": "int256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7821,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7830,
                  "src": "3727:15:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                    "typeString": "int256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7819,
                      "name": "int256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3727:6:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "id": 7820,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3727:8:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_int256_$dyn_storage_ptr",
                      "typeString": "int256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7823,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7830,
                  "src": "3762:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7822,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3762:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3694:92:23"
            },
            "returnParameters": {
              "id": 7825,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3793:0:23"
            },
            "scope": 8043,
            "src": "3669:162:23",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7840,
              "nodeType": "Block",
              "src": "4036:44:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7837,
                      "name": "delegateToViewAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13405,
                      "src": "4047:23:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () view returns (bytes memory)"
                      }
                    },
                    "id": 7838,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4047:25:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7839,
                  "nodeType": "ExpressionStatement",
                  "src": "4047:25:23"
                }
              ]
            },
            "documentation": "@dev Retrieve user's current total worth, priced in USD.\n account input retrieve account",
            "id": 7841,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserTotalWorth",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7833,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7832,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7841,
                  "src": "3987:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7831,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3987:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3986:21:23"
            },
            "returnParameters": {
              "id": 7836,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7835,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7841,
                  "src": "4028:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7834,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4028:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4027:9:23"
            },
            "scope": 8043,
            "src": "3960:120:23",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7849,
              "nodeType": "Block",
              "src": "4219:44:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7846,
                      "name": "delegateToViewAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13405,
                      "src": "4230:23:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () view returns (bytes memory)"
                      }
                    },
                    "id": 7847,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4230:25:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7848,
                  "nodeType": "ExpressionStatement",
                  "src": "4230:25:23"
                }
              ]
            },
            "documentation": "@dev Retrieve FPTCoin's net worth, priced in USD.",
            "id": 7850,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenNetworth",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7842,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4187:2:23"
            },
            "returnParameters": {
              "id": 7845,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7844,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7850,
                  "src": "4211:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7843,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4211:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4210:9:23"
            },
            "scope": 8043,
            "src": "4162:101:23",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7860,
              "nodeType": "Block",
              "src": "4548:38:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7857,
                      "name": "delegateAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13420,
                      "src": "4559:17:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () returns (bytes memory)"
                      }
                    },
                    "id": 7858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4559:19:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7859,
                  "nodeType": "ExpressionStatement",
                  "src": "4559:19:23"
                }
              ]
            },
            "documentation": "@dev Deposit collateral in this pool from user.\n collateral The collateral coin address which is in whitelist.\n amount the amount of collateral to deposit.",
            "id": 7861,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addCollateral",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7855,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7852,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7861,
                  "src": "4490:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7851,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4490:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7854,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7861,
                  "src": "4513:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7853,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4513:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4489:43:23"
            },
            "returnParameters": {
              "id": 7856,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4548:0:23"
            },
            "scope": 8043,
            "src": "4467:119:23",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7871,
              "nodeType": "Block",
              "src": "5011:38:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7868,
                      "name": "delegateAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13420,
                      "src": "5022:17:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () returns (bytes memory)"
                      }
                    },
                    "id": 7869,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5022:19:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7870,
                  "nodeType": "ExpressionStatement",
                  "src": "5022:19:23"
                }
              ]
            },
            "documentation": "@dev redeem collateral from this pool, user can input the prioritized collateral,he will get this coin,\nif this coin is unsufficient, he will get others collateral which in whitelist.\n tokenAmount the amount of FPTCoin want to redeem.\n collateral The prioritized collateral coin address.",
            "id": 7872,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redeemCollateral",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7866,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7863,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7872,
                  "src": "4956:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7862,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4956:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7865,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7872,
                  "src": "4980:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7864,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4980:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4955:48:23"
            },
            "returnParameters": {
              "id": 7867,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5011:0:23"
            },
            "scope": 8043,
            "src": "4930:119:23",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7883,
              "nodeType": "Block",
              "src": "5427:44:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7880,
                      "name": "delegateToViewAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13405,
                      "src": "5438:23:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () view returns (bytes memory)"
                      }
                    },
                    "id": 7881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5438:25:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7882,
                  "nodeType": "ExpressionStatement",
                  "src": "5438:25:23"
                }
              ]
            },
            "documentation": "@dev Retrieve user's collateral worth in all collateral coin. \nIf user want to redeem all his collateral,and the vacant collateral is sufficient,\nHe can redeem each collateral amount in return list.\n account the retrieve user's account;",
            "id": 7884,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calCollateralWorth",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7875,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7874,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7884,
                  "src": "5370:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7873,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5370:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5369:21:23"
            },
            "returnParameters": {
              "id": 7879,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7878,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7884,
                  "src": "5410:16:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7876,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "5410:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7877,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "5410:9:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5409:18:23"
            },
            "scope": 8043,
            "src": "5342:129:23",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7892,
              "nodeType": "Block",
              "src": "5664:44:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7889,
                      "name": "delegateToViewAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13405,
                      "src": "5675:23:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () view returns (bytes memory)"
                      }
                    },
                    "id": 7890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5675:25:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7891,
                  "nodeType": "ExpressionStatement",
                  "src": "5675:25:23"
                }
              ]
            },
            "documentation": "@dev Retrieve the occupied collateral worth, multiplied by minimum collateral rate, priced in USD. ",
            "id": 7893,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOccupiedCollateral",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7885,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5633:2:23"
            },
            "returnParameters": {
              "id": 7888,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7887,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7893,
                  "src": "5656:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7886,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5656:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5655:9:23"
            },
            "scope": 8043,
            "src": "5603:105:23",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7901,
              "nodeType": "Block",
              "src": "5919:44:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7898,
                      "name": "delegateToViewAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13405,
                      "src": "5930:23:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () view returns (bytes memory)"
                      }
                    },
                    "id": 7899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5930:25:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7900,
                  "nodeType": "ExpressionStatement",
                  "src": "5930:25:23"
                }
              ]
            },
            "documentation": "@dev Retrieve the available collateral worth, the worth of collateral which can used for buy options, priced in USD. ",
            "id": 7902,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAvailableCollateral",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7894,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5889:2:23"
            },
            "returnParameters": {
              "id": 7897,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7896,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7902,
                  "src": "5911:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7895,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5911:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5910:9:23"
            },
            "scope": 8043,
            "src": "5858:105:23",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7910,
              "nodeType": "Block",
              "src": "6170:44:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7907,
                      "name": "delegateToViewAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13405,
                      "src": "6181:23:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () view returns (bytes memory)"
                      }
                    },
                    "id": 7908,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6181:25:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7909,
                  "nodeType": "ExpressionStatement",
                  "src": "6181:25:23"
                }
              ]
            },
            "documentation": "@dev Retrieve the left collateral worth, the worth of collateral which can used for redeem collateral, priced in USD. ",
            "id": 7911,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLeftCollateral",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7903,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6140:2:23"
            },
            "returnParameters": {
              "id": 7906,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7905,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7911,
                  "src": "6162:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7904,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6162:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6161:9:23"
            },
            "scope": 8043,
            "src": "6114:100:23",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7919,
              "nodeType": "Block",
              "src": "6425:44:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7916,
                      "name": "delegateToViewAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13405,
                      "src": "6436:23:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () view returns (bytes memory)"
                      }
                    },
                    "id": 7917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6436:25:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7918,
                  "nodeType": "ExpressionStatement",
                  "src": "6436:25:23"
                }
              ]
            },
            "documentation": "@dev Retrieve the unlocked collateral worth, the worth of collateral which currently used for options, priced in USD. ",
            "id": 7920,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUnlockedCollateral",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7912,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6395:2:23"
            },
            "returnParameters": {
              "id": 7915,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7914,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7920,
                  "src": "6417:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7913,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6417:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6416:9:23"
            },
            "scope": 8043,
            "src": "6365:104:23",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7936,
              "nodeType": "Block",
              "src": "6887:44:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7933,
                      "name": "delegateToViewAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13405,
                      "src": "6898:23:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () view returns (bytes memory)"
                      }
                    },
                    "id": 7934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6898:25:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7935,
                  "nodeType": "ExpressionStatement",
                  "src": "6898:25:23"
                }
              ]
            },
            "documentation": "@dev The auxiliary function for calculate option occupied. \n strikePrice option's strike price\n underlyingPrice option's underlying price\n amount option's amount\n optType option's type, 0 for call, 1 for put.",
            "id": 7937,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calOptionsOccupied",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7929,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7922,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7937,
                  "src": "6770:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7921,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6770:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7924,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7937,
                  "src": "6794:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7923,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6794:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7926,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7937,
                  "src": "6822:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7925,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6822:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7928,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7937,
                  "src": "6841:5:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 7927,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "6841:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6769:90:23"
            },
            "returnParameters": {
              "id": 7932,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7931,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7937,
                  "src": "6879:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7930,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6879:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6878:9:23"
            },
            "scope": 8043,
            "src": "6742:189:23",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7945,
              "nodeType": "Block",
              "src": "7078:44:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7942,
                      "name": "delegateToViewAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13405,
                      "src": "7089:23:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () view returns (bytes memory)"
                      }
                    },
                    "id": 7943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7089:25:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7944,
                  "nodeType": "ExpressionStatement",
                  "src": "7089:25:23"
                }
              ]
            },
            "documentation": "@dev Retrieve the total collateral worth, priced in USD. ",
            "id": 7946,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTotalCollateral",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7938,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7048:2:23"
            },
            "returnParameters": {
              "id": 7941,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7940,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7946,
                  "src": "7070:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7939,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7070:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7069:9:23"
            },
            "scope": 8043,
            "src": "7021:101:23",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7956,
              "nodeType": "Block",
              "src": "7331:44:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7953,
                      "name": "delegateToViewAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13405,
                      "src": "7342:23:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () view returns (bytes memory)"
                      }
                    },
                    "id": 7954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7342:25:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7955,
                  "nodeType": "ExpressionStatement",
                  "src": "7342:25:23"
                }
              ]
            },
            "documentation": "@dev Retrieve the balance of collateral, the auxiliary function for the total collateral calculation. ",
            "id": 7957,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRealBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7949,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7948,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7957,
                  "src": "7281:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7947,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7281:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7280:24:23"
            },
            "returnParameters": {
              "id": 7952,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7951,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7957,
                  "src": "7324:6:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 7950,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7324:6:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7323:8:23"
            },
            "scope": 8043,
            "src": "7257:118:23",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7967,
              "nodeType": "Block",
              "src": "7460:44:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7964,
                      "name": "delegateToViewAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13405,
                      "src": "7471:23:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () view returns (bytes memory)"
                      }
                    },
                    "id": 7965,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7471:25:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7966,
                  "nodeType": "ExpressionStatement",
                  "src": "7471:25:23"
                }
              ]
            },
            "documentation": null,
            "id": 7968,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNetWorthBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7960,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7959,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7968,
                  "src": "7409:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7958,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7409:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7408:24:23"
            },
            "returnParameters": {
              "id": 7963,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7962,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7968,
                  "src": "7452:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7961,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7452:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7451:9:23"
            },
            "scope": 8043,
            "src": "7381:123:23",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7976,
              "nodeType": "Block",
              "src": "7753:44:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7973,
                      "name": "delegateToViewAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13405,
                      "src": "7764:23:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () view returns (bytes memory)"
                      }
                    },
                    "id": 7974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7764:25:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7975,
                  "nodeType": "ExpressionStatement",
                  "src": "7764:25:23"
                }
              ]
            },
            "documentation": "@dev collateral occupation rate calculation\n     collateral occupation rate = sum(collateral Rate * collateral balance) / sum(collateral balance)",
            "id": 7977,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateCollateralRate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7969,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7722:2:23"
            },
            "returnParameters": {
              "id": 7972,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7971,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7977,
                  "src": "7745:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7970,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7745:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7744:9:23"
            },
            "scope": 8043,
            "src": "7690:107:23",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7987,
              "nodeType": "Block",
              "src": "7951:44:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7984,
                      "name": "delegateToViewAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13405,
                      "src": "7962:23:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () view returns (bytes memory)"
                      }
                    },
                    "id": 7985,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7962:25:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7986,
                  "nodeType": "ExpressionStatement",
                  "src": "7962:25:23"
                }
              ]
            },
            "documentation": "@dev retrieve input price valid range rate, thousandths.",
            "id": 7988,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPriceRateRange",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7978,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7911:2:23"
            },
            "returnParameters": {
              "id": 7983,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7980,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7988,
                  "src": "7934:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7979,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7934:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7982,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7988,
                  "src": "7942:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7981,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7942:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7933:17:23"
            },
            "scope": 8043,
            "src": "7885:110:23",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7998,
              "nodeType": "Block",
              "src": "8164:38:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7995,
                      "name": "delegateAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13420,
                      "src": "8175:17:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () returns (bytes memory)"
                      }
                    },
                    "id": 7996,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8175:19:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7997,
                  "nodeType": "ExpressionStatement",
                  "src": "8175:19:23"
                }
              ]
            },
            "documentation": "@dev set input price valid range rate, thousandths.",
            "id": 7999,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setPriceRateRange",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7993,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7990,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7999,
                  "src": "8105:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7989,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8105:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7992,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7999,
                  "src": "8131:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7991,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8131:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8104:53:23"
            },
            "returnParameters": {
              "id": 7994,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8164:0:23"
            },
            "scope": 8043,
            "src": "8078:124:23",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8019,
              "nodeType": "Block",
              "src": "8893:38:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 8016,
                      "name": "delegateAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13420,
                      "src": "8904:17:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () returns (bytes memory)"
                      }
                    },
                    "id": 8017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8904:19:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 8018,
                  "nodeType": "ExpressionStatement",
                  "src": "8904:19:23"
                }
              ]
            },
            "documentation": "@dev user buy option and create new option.\n settlement user's settement coin address\n settlementAmount amount of settlement user want fo pay.\n strikePrice user input option's strike price\n underlying user input option's underlying id, 1 for BTC,2 for ETH\n expiration user input expiration,time limit from now\n amount user input amount of new option user want to buy.\n optType user input option type",
            "id": 8020,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buyOption",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8014,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8001,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8020,
                  "src": "8701:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8000,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8701:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8003,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8020,
                  "src": "8724:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8002,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8724:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8005,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8020,
                  "src": "8754:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8004,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8754:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8007,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8020,
                  "src": "8778:6:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 8006,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8778:6:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8009,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8020,
                  "src": "8818:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8008,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8818:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8011,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8020,
                  "src": "8841:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8010,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8841:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8013,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8020,
                  "src": "8860:5:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 8012,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "8860:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8700:178:23"
            },
            "returnParameters": {
              "id": 8015,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8893:0:23"
            },
            "scope": 8043,
            "src": "8682:249:23",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8030,
              "nodeType": "Block",
              "src": "9190:38:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 8027,
                      "name": "delegateAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13420,
                      "src": "9201:17:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () returns (bytes memory)"
                      }
                    },
                    "id": 8028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9201:19:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 8029,
                  "nodeType": "ExpressionStatement",
                  "src": "9201:19:23"
                }
              ]
            },
            "documentation": "@dev User sell option.\n optionsId option's ID which was wanted to sell, must owned by user\n amount user input amount of option user want to sell.",
            "id": 8031,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sellOption",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8025,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8022,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8031,
                  "src": "9142:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8021,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9142:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8024,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8031,
                  "src": "9164:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8023,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9164:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9141:42:23"
            },
            "returnParameters": {
              "id": 8026,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9190:0:23"
            },
            "scope": 8043,
            "src": "9122:106:23",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8041,
              "nodeType": "Block",
              "src": "9503:38:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 8038,
                      "name": "delegateAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13420,
                      "src": "9514:17:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () returns (bytes memory)"
                      }
                    },
                    "id": 8039,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9514:19:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 8040,
                  "nodeType": "ExpressionStatement",
                  "src": "9514:19:23"
                }
              ]
            },
            "documentation": "@dev User exercise option.\n optionsId option's ID which was wanted to exercise, must owned by user\n amount user input amount of option user want to exercise.",
            "id": 8042,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exerciseOption",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8036,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8033,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8042,
                  "src": "9455:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8032,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9455:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8035,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8042,
                  "src": "9477:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8034,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9477:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9454:42:23"
            },
            "returnParameters": {
              "id": 8037,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9503:0:23"
            },
            "scope": 8043,
            "src": "9431:110:23",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 8044,
        "src": "136:9408:23"
      }
    ],
    "src": "0:9546:23"
  },
  "legacyAST": {
    "absolutePath": "/C/work/solidity/FinnexusOptions_V2/contracts/OptionsManager/ManagerProxy.sol",
    "exportedSymbols": {
      "ManagerProxy": [
        8043
      ]
    },
    "id": 8044,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7674,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".1"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:23"
      },
      {
        "absolutePath": "/C/work/solidity/FinnexusOptions_V2/contracts/OptionsManager/ManagerData.sol",
        "file": "./ManagerData.sol",
        "id": 7675,
        "nodeType": "ImportDirective",
        "scope": 8044,
        "sourceUnit": 7673,
        "src": "25:27:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/work/solidity/FinnexusOptions_V2/contracts/Proxy/baseProxy.sol",
        "file": "../Proxy/baseProxy.sol",
        "id": 7676,
        "nodeType": "ImportDirective",
        "scope": 8044,
        "sourceUnit": 13422,
        "src": "54:32:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7677,
              "name": "ManagerData",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7672,
              "src": "161:11:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ManagerData_$7672",
                "typeString": "contract ManagerData"
              }
            },
            "id": 7678,
            "nodeType": "InheritanceSpecifier",
            "src": "161:11:23"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7679,
              "name": "baseProxy",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 13421,
              "src": "173:9:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_baseProxy_$13421",
                "typeString": "contract baseProxy"
              }
            },
            "id": 7680,
            "nodeType": "InheritanceSpecifier",
            "src": "173:9:23"
          }
        ],
        "contractDependencies": [
          1614,
          5636,
          7672,
          8760,
          13421,
          16297,
          16402,
          16618,
          18176,
          18331,
          18442,
          18465
        ],
        "contractKind": "contract",
        "documentation": "@title  Erc20Delegator Contract",
        "fullyImplemented": true,
        "id": 8043,
        "linearizedBaseContracts": [
          8043,
          13421,
          7672,
          16402,
          18331,
          1614,
          8760,
          16297,
          5636,
          16618,
          18176,
          18442,
          18465
        ],
        "name": "ManagerProxy",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 7728,
              "nodeType": "Block",
              "src": "688:271:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7698,
                      "name": "_oracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16272,
                      "src": "699:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IFNXOracle_$16268",
                        "typeString": "contract IFNXOracle"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 7700,
                          "name": "oracleAddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7684,
                          "src": "720:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 7699,
                        "name": "IFNXOracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16268,
                        "src": "709:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IFNXOracle_$16268_$",
                          "typeString": "type(contract IFNXOracle)"
                        }
                      },
                      "id": 7701,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "709:22:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IFNXOracle_$16268",
                        "typeString": "contract IFNXOracle"
                      }
                    },
                    "src": "699:32:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IFNXOracle_$16268",
                      "typeString": "contract IFNXOracle"
                    }
                  },
                  "id": 7703,
                  "nodeType": "ExpressionStatement",
                  "src": "699:32:23"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7704,
                      "name": "_optionsPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16377,
                      "src": "742:13:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IOptionsPrice_$16373",
                        "typeString": "contract IOptionsPrice"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 7706,
                          "name": "optionsPriceAddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7686,
                          "src": "772:16:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 7705,
                        "name": "IOptionsPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16373,
                        "src": "758:13:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IOptionsPrice_$16373_$",
                          "typeString": "type(contract IOptionsPrice)"
                        }
                      },
                      "id": 7707,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "758:31:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IOptionsPrice_$16373",
                        "typeString": "contract IOptionsPrice"
                      }
                    },
                    "src": "742:47:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IOptionsPrice_$16373",
                      "typeString": "contract IOptionsPrice"
                    }
                  },
                  "id": 7709,
                  "nodeType": "ExpressionStatement",
                  "src": "742:47:23"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7714,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7710,
                      "name": "_optionsPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8735,
                      "src": "800:12:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IOptionsPool_$8731",
                        "typeString": "contract IOptionsPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 7712,
                          "name": "optionsPoolAddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7688,
                          "src": "828:15:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 7711,
                        "name": "IOptionsPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8731,
                        "src": "815:12:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IOptionsPool_$8731_$",
                          "typeString": "type(contract IOptionsPool)"
                        }
                      },
                      "id": 7713,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "815:29:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IOptionsPool_$8731",
                        "typeString": "contract IOptionsPool"
                      }
                    },
                    "src": "800:44:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IOptionsPool_$8731",
                      "typeString": "contract IOptionsPool"
                    }
                  },
                  "id": 7715,
                  "nodeType": "ExpressionStatement",
                  "src": "800:44:23"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7716,
                      "name": "_collateralPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1589,
                      "src": "855:15:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICollateralPool_$1585",
                        "typeString": "contract ICollateralPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 7718,
                          "name": "collateralPoolAddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7690,
                          "src": "889:18:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 7717,
                        "name": "ICollateralPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1585,
                        "src": "873:15:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ICollateralPool_$1585_$",
                          "typeString": "type(contract ICollateralPool)"
                        }
                      },
                      "id": 7719,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "873:35:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICollateralPool_$1585",
                        "typeString": "contract ICollateralPool"
                      }
                    },
                    "src": "855:53:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICollateralPool_$1585",
                      "typeString": "contract ICollateralPool"
                    }
                  },
                  "id": 7721,
                  "nodeType": "ExpressionStatement",
                  "src": "855:53:23"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7726,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7722,
                      "name": "_FPTCoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5611,
                      "src": "919:8:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IFPTCoin_$5607",
                        "typeString": "contract IFPTCoin"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 7724,
                          "name": "FPTCoinAddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7692,
                          "src": "939:11:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 7723,
                        "name": "IFPTCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5607,
                        "src": "930:8:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IFPTCoin_$5607_$",
                          "typeString": "type(contract IFPTCoin)"
                        }
                      },
                      "id": 7725,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "930:21:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IFPTCoin_$5607",
                        "typeString": "contract IFPTCoin"
                      }
                    },
                    "src": "919:32:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IFPTCoin_$5607",
                      "typeString": "contract IFPTCoin"
                    }
                  },
                  "id": 7727,
                  "nodeType": "ExpressionStatement",
                  "src": "919:32:23"
                }
              ]
            },
            "documentation": "@dev Options manager constructor. set other contract address\n oracleAddr fnx oracle contract address.\n optionsPriceAddr options price contract address\n optionsPoolAddr optoins pool contract address\n FPTCoinAddr FPTCoin contract address",
            "id": 7729,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 7695,
                    "name": "implementation_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7682,
                    "src": "663:15:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 7696,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7694,
                  "name": "baseProxy",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 13421,
                  "src": "653:9:23",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_baseProxy_$13421_$",
                    "typeString": "type(contract baseProxy)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "653:26:23"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7693,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7682,
                  "name": "implementation_",
                  "nodeType": "VariableDeclaration",
                  "scope": 7729,
                  "src": "489:23:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7681,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "489:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7684,
                  "name": "oracleAddr",
                  "nodeType": "VariableDeclaration",
                  "scope": 7729,
                  "src": "513:18:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7683,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "513:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7686,
                  "name": "optionsPriceAddr",
                  "nodeType": "VariableDeclaration",
                  "scope": 7729,
                  "src": "532:24:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7685,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "532:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7688,
                  "name": "optionsPoolAddr",
                  "nodeType": "VariableDeclaration",
                  "scope": 7729,
                  "src": "571:23:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7687,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "571:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7690,
                  "name": "collateralPoolAddr",
                  "nodeType": "VariableDeclaration",
                  "scope": 7729,
                  "src": "595:26:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7689,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "595:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7692,
                  "name": "FPTCoinAddr",
                  "nodeType": "VariableDeclaration",
                  "scope": 7729,
                  "src": "622:19:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7691,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "622:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "488:154:23"
            },
            "returnParameters": {
              "id": 7697,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "688:0:23"
            },
            "scope": 8043,
            "src": "477:482:23",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7739,
              "nodeType": "Block",
              "src": "1100:44:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7736,
                      "name": "delegateToViewAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13405,
                      "src": "1111:23:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () view returns (bytes memory)"
                      }
                    },
                    "id": 7737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1111:25:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7738,
                  "nodeType": "ExpressionStatement",
                  "src": "1111:25:23"
                }
              ]
            },
            "documentation": "@dev get the valid range of input amount",
            "id": 7740,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getInputAmountRange",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7730,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1060:2:23"
            },
            "returnParameters": {
              "id": 7735,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7732,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7740,
                  "src": "1083:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7731,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1083:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7734,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7740,
                  "src": "1091:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7733,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1091:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1082:17:23"
            },
            "scope": 8043,
            "src": "1032:112:23",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7750,
              "nodeType": "Block",
              "src": "1401:38:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7747,
                      "name": "delegateAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13420,
                      "src": "1412:17:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () returns (bytes memory)"
                      }
                    },
                    "id": 7748,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1412:19:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7749,
                  "nodeType": "ExpressionStatement",
                  "src": "1412:19:23"
                }
              ]
            },
            "documentation": "@dev set the valid range of input amount\n _minAmount the minimum input amount limit\n _maxAmount the maximum input amount limit",
            "id": 7751,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setInputAmountRange",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7745,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7742,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7751,
                  "src": "1348:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7741,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1348:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7744,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7751,
                  "src": "1371:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7743,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1371:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1347:47:23"
            },
            "returnParameters": {
              "id": 7746,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1401:0:23"
            },
            "scope": 8043,
            "src": "1319:120:23",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7761,
              "nodeType": "Block",
              "src": "1908:38:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7758,
                      "name": "delegateAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13420,
                      "src": "1919:17:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () returns (bytes memory)"
                      }
                    },
                    "id": 7759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1919:19:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7760,
                  "nodeType": "ExpressionStatement",
                  "src": "1919:19:23"
                }
              ]
            },
            "documentation": "@dev  The foundation operator want to add some coin to netbalance, which can increase the FPTCoin net worth.\n settlement the settlement coin address which the foundation operator want to transfer in this contract address.\n amount the amount of the settlement coin which the foundation operator want to transfer in this contract address.",
            "id": 7762,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addNetBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7756,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7753,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7762,
                  "src": "1849:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7752,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1849:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7755,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7762,
                  "src": "1872:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7754,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1872:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1848:43:23"
            },
            "returnParameters": {
              "id": 7757,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1908:0:23"
            },
            "scope": 8043,
            "src": "1826:120:23",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7772,
              "nodeType": "Block",
              "src": "2255:40:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7769,
                      "name": "delegateAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13420,
                      "src": "2266:17:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () returns (bytes memory)"
                      }
                    },
                    "id": 7770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2266:19:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7771,
                  "nodeType": "ExpressionStatement",
                  "src": "2266:19:23"
                }
              ]
            },
            "documentation": "@dev  The foundation owner want to set the minimum collateral occupation rate.\n collateral collateral coin address\n colRate The thousandths of the minimum collateral occupation rate.",
            "id": 7773,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setCollateralRate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7767,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7764,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7773,
                  "src": "2204:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7763,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2204:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7766,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7773,
                  "src": "2227:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7765,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2227:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2203:44:23"
            },
            "returnParameters": {
              "id": 7768,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2255:0:23"
            },
            "scope": 8043,
            "src": "2177:118:23",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7783,
              "nodeType": "Block",
              "src": "2456:44:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7780,
                      "name": "delegateToViewAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13405,
                      "src": "2467:23:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () view returns (bytes memory)"
                      }
                    },
                    "id": 7781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2467:25:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7782,
                  "nodeType": "ExpressionStatement",
                  "src": "2467:25:23"
                }
              ]
            },
            "documentation": "@dev Get the minimum collateral occupation rate.",
            "id": 7784,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCollateralRate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7776,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7775,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7784,
                  "src": "2403:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7774,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2403:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2402:24:23"
            },
            "returnParameters": {
              "id": 7779,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7778,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7784,
                  "src": "2447:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7777,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2447:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2446:9:23"
            },
            "scope": 8043,
            "src": "2376:124:23",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7794,
              "nodeType": "Block",
              "src": "2699:44:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7791,
                      "name": "delegateToViewAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13405,
                      "src": "2710:23:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () view returns (bytes memory)"
                      }
                    },
                    "id": 7792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2710:25:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7793,
                  "nodeType": "ExpressionStatement",
                  "src": "2710:25:23"
                }
              ]
            },
            "documentation": "@dev Retrieve user's cost of collateral, priced in USD.\n user input retrieved account ",
            "id": 7795,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserPayingUsd",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7787,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7786,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7795,
                  "src": "2653:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7785,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2653:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2652:18:23"
            },
            "returnParameters": {
              "id": 7790,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7789,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7795,
                  "src": "2691:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7788,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2691:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2690:9:23"
            },
            "scope": 8043,
            "src": "2627:116:23",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7807,
              "nodeType": "Block",
              "src": "3030:44:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7804,
                      "name": "delegateToViewAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13405,
                      "src": "3041:23:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () view returns (bytes memory)"
                      }
                    },
                    "id": 7805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3041:25:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7806,
                  "nodeType": "ExpressionStatement",
                  "src": "3041:25:23"
                }
              ]
            },
            "documentation": "@dev Retrieve user's amount of the specified collateral.\n user input retrieved account \n collateral input retrieved collateral coin address ",
            "id": 7808,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "userInputCollateral",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7800,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7797,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7808,
                  "src": "2961:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7796,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2961:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7799,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7808,
                  "src": "2978:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7798,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2978:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2960:41:23"
            },
            "returnParameters": {
              "id": 7803,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7802,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7808,
                  "src": "3022:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7801,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3022:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3021:9:23"
            },
            "scope": 8043,
            "src": "2932:142:23",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7814,
              "nodeType": "Block",
              "src": "3259:38:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7811,
                      "name": "delegateAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13420,
                      "src": "3270:17:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () returns (bytes memory)"
                      }
                    },
                    "id": 7812,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3270:19:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7813,
                  "nodeType": "ExpressionStatement",
                  "src": "3270:19:23"
                }
              ]
            },
            "documentation": "@dev Calculate the collateral pool shared worth.\nThe foundation operator will invoke this function frequently",
            "id": 7815,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calSharedPayment",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7809,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3249:2:23"
            },
            "returnParameters": {
              "id": 7810,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3259:0:23"
            },
            "scope": 8043,
            "src": "3224:73:23",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7829,
              "nodeType": "Block",
              "src": "3793:38:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7826,
                      "name": "delegateAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13420,
                      "src": "3804:17:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () returns (bytes memory)"
                      }
                    },
                    "id": 7827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3804:19:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7828,
                  "nodeType": "ExpressionStatement",
                  "src": "3804:19:23"
                }
              ]
            },
            "documentation": "@dev Set the calculation results of the collateral pool shared worth.\nThe foundation operator will invoke this function frequently\n newNetworth Current expired options' net worth \n sharedBalances All unexpired options' shared balance distributed by time.\n firstOption The new first unexpired option's index.",
            "id": 7830,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setSharedPayment",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7824,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7818,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7830,
                  "src": "3695:15:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                    "typeString": "int256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7816,
                      "name": "int256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3695:6:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "id": 7817,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3695:8:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_int256_$dyn_storage_ptr",
                      "typeString": "int256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7821,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7830,
                  "src": "3727:15:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                    "typeString": "int256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7819,
                      "name": "int256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3727:6:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "id": 7820,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3727:8:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_int256_$dyn_storage_ptr",
                      "typeString": "int256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7823,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7830,
                  "src": "3762:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7822,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3762:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3694:92:23"
            },
            "returnParameters": {
              "id": 7825,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3793:0:23"
            },
            "scope": 8043,
            "src": "3669:162:23",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7840,
              "nodeType": "Block",
              "src": "4036:44:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7837,
                      "name": "delegateToViewAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13405,
                      "src": "4047:23:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () view returns (bytes memory)"
                      }
                    },
                    "id": 7838,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4047:25:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7839,
                  "nodeType": "ExpressionStatement",
                  "src": "4047:25:23"
                }
              ]
            },
            "documentation": "@dev Retrieve user's current total worth, priced in USD.\n account input retrieve account",
            "id": 7841,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserTotalWorth",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7833,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7832,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7841,
                  "src": "3987:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7831,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3987:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3986:21:23"
            },
            "returnParameters": {
              "id": 7836,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7835,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7841,
                  "src": "4028:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7834,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4028:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4027:9:23"
            },
            "scope": 8043,
            "src": "3960:120:23",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7849,
              "nodeType": "Block",
              "src": "4219:44:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7846,
                      "name": "delegateToViewAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13405,
                      "src": "4230:23:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () view returns (bytes memory)"
                      }
                    },
                    "id": 7847,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4230:25:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7848,
                  "nodeType": "ExpressionStatement",
                  "src": "4230:25:23"
                }
              ]
            },
            "documentation": "@dev Retrieve FPTCoin's net worth, priced in USD.",
            "id": 7850,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenNetworth",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7842,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4187:2:23"
            },
            "returnParameters": {
              "id": 7845,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7844,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7850,
                  "src": "4211:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7843,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4211:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4210:9:23"
            },
            "scope": 8043,
            "src": "4162:101:23",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7860,
              "nodeType": "Block",
              "src": "4548:38:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7857,
                      "name": "delegateAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13420,
                      "src": "4559:17:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () returns (bytes memory)"
                      }
                    },
                    "id": 7858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4559:19:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7859,
                  "nodeType": "ExpressionStatement",
                  "src": "4559:19:23"
                }
              ]
            },
            "documentation": "@dev Deposit collateral in this pool from user.\n collateral The collateral coin address which is in whitelist.\n amount the amount of collateral to deposit.",
            "id": 7861,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addCollateral",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7855,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7852,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7861,
                  "src": "4490:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7851,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4490:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7854,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7861,
                  "src": "4513:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7853,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4513:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4489:43:23"
            },
            "returnParameters": {
              "id": 7856,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4548:0:23"
            },
            "scope": 8043,
            "src": "4467:119:23",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7871,
              "nodeType": "Block",
              "src": "5011:38:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7868,
                      "name": "delegateAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13420,
                      "src": "5022:17:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () returns (bytes memory)"
                      }
                    },
                    "id": 7869,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5022:19:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7870,
                  "nodeType": "ExpressionStatement",
                  "src": "5022:19:23"
                }
              ]
            },
            "documentation": "@dev redeem collateral from this pool, user can input the prioritized collateral,he will get this coin,\nif this coin is unsufficient, he will get others collateral which in whitelist.\n tokenAmount the amount of FPTCoin want to redeem.\n collateral The prioritized collateral coin address.",
            "id": 7872,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redeemCollateral",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7866,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7863,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7872,
                  "src": "4956:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7862,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4956:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7865,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7872,
                  "src": "4980:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7864,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4980:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4955:48:23"
            },
            "returnParameters": {
              "id": 7867,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5011:0:23"
            },
            "scope": 8043,
            "src": "4930:119:23",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7883,
              "nodeType": "Block",
              "src": "5427:44:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7880,
                      "name": "delegateToViewAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13405,
                      "src": "5438:23:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () view returns (bytes memory)"
                      }
                    },
                    "id": 7881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5438:25:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7882,
                  "nodeType": "ExpressionStatement",
                  "src": "5438:25:23"
                }
              ]
            },
            "documentation": "@dev Retrieve user's collateral worth in all collateral coin. \nIf user want to redeem all his collateral,and the vacant collateral is sufficient,\nHe can redeem each collateral amount in return list.\n account the retrieve user's account;",
            "id": 7884,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calCollateralWorth",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7875,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7874,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7884,
                  "src": "5370:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7873,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5370:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5369:21:23"
            },
            "returnParameters": {
              "id": 7879,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7878,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7884,
                  "src": "5410:16:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7876,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "5410:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7877,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "5410:9:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5409:18:23"
            },
            "scope": 8043,
            "src": "5342:129:23",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7892,
              "nodeType": "Block",
              "src": "5664:44:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7889,
                      "name": "delegateToViewAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13405,
                      "src": "5675:23:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () view returns (bytes memory)"
                      }
                    },
                    "id": 7890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5675:25:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7891,
                  "nodeType": "ExpressionStatement",
                  "src": "5675:25:23"
                }
              ]
            },
            "documentation": "@dev Retrieve the occupied collateral worth, multiplied by minimum collateral rate, priced in USD. ",
            "id": 7893,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOccupiedCollateral",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7885,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5633:2:23"
            },
            "returnParameters": {
              "id": 7888,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7887,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7893,
                  "src": "5656:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7886,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5656:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5655:9:23"
            },
            "scope": 8043,
            "src": "5603:105:23",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7901,
              "nodeType": "Block",
              "src": "5919:44:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7898,
                      "name": "delegateToViewAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13405,
                      "src": "5930:23:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () view returns (bytes memory)"
                      }
                    },
                    "id": 7899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5930:25:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7900,
                  "nodeType": "ExpressionStatement",
                  "src": "5930:25:23"
                }
              ]
            },
            "documentation": "@dev Retrieve the available collateral worth, the worth of collateral which can used for buy options, priced in USD. ",
            "id": 7902,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAvailableCollateral",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7894,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5889:2:23"
            },
            "returnParameters": {
              "id": 7897,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7896,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7902,
                  "src": "5911:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7895,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5911:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5910:9:23"
            },
            "scope": 8043,
            "src": "5858:105:23",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7910,
              "nodeType": "Block",
              "src": "6170:44:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7907,
                      "name": "delegateToViewAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13405,
                      "src": "6181:23:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () view returns (bytes memory)"
                      }
                    },
                    "id": 7908,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6181:25:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7909,
                  "nodeType": "ExpressionStatement",
                  "src": "6181:25:23"
                }
              ]
            },
            "documentation": "@dev Retrieve the left collateral worth, the worth of collateral which can used for redeem collateral, priced in USD. ",
            "id": 7911,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLeftCollateral",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7903,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6140:2:23"
            },
            "returnParameters": {
              "id": 7906,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7905,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7911,
                  "src": "6162:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7904,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6162:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6161:9:23"
            },
            "scope": 8043,
            "src": "6114:100:23",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7919,
              "nodeType": "Block",
              "src": "6425:44:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7916,
                      "name": "delegateToViewAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13405,
                      "src": "6436:23:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () view returns (bytes memory)"
                      }
                    },
                    "id": 7917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6436:25:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7918,
                  "nodeType": "ExpressionStatement",
                  "src": "6436:25:23"
                }
              ]
            },
            "documentation": "@dev Retrieve the unlocked collateral worth, the worth of collateral which currently used for options, priced in USD. ",
            "id": 7920,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUnlockedCollateral",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7912,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6395:2:23"
            },
            "returnParameters": {
              "id": 7915,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7914,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7920,
                  "src": "6417:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7913,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6417:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6416:9:23"
            },
            "scope": 8043,
            "src": "6365:104:23",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7936,
              "nodeType": "Block",
              "src": "6887:44:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7933,
                      "name": "delegateToViewAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13405,
                      "src": "6898:23:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () view returns (bytes memory)"
                      }
                    },
                    "id": 7934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6898:25:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7935,
                  "nodeType": "ExpressionStatement",
                  "src": "6898:25:23"
                }
              ]
            },
            "documentation": "@dev The auxiliary function for calculate option occupied. \n strikePrice option's strike price\n underlyingPrice option's underlying price\n amount option's amount\n optType option's type, 0 for call, 1 for put.",
            "id": 7937,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calOptionsOccupied",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7929,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7922,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7937,
                  "src": "6770:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7921,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6770:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7924,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7937,
                  "src": "6794:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7923,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6794:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7926,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7937,
                  "src": "6822:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7925,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6822:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7928,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7937,
                  "src": "6841:5:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 7927,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "6841:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6769:90:23"
            },
            "returnParameters": {
              "id": 7932,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7931,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7937,
                  "src": "6879:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7930,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6879:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6878:9:23"
            },
            "scope": 8043,
            "src": "6742:189:23",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7945,
              "nodeType": "Block",
              "src": "7078:44:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7942,
                      "name": "delegateToViewAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13405,
                      "src": "7089:23:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () view returns (bytes memory)"
                      }
                    },
                    "id": 7943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7089:25:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7944,
                  "nodeType": "ExpressionStatement",
                  "src": "7089:25:23"
                }
              ]
            },
            "documentation": "@dev Retrieve the total collateral worth, priced in USD. ",
            "id": 7946,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTotalCollateral",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7938,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7048:2:23"
            },
            "returnParameters": {
              "id": 7941,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7940,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7946,
                  "src": "7070:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7939,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7070:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7069:9:23"
            },
            "scope": 8043,
            "src": "7021:101:23",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7956,
              "nodeType": "Block",
              "src": "7331:44:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7953,
                      "name": "delegateToViewAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13405,
                      "src": "7342:23:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () view returns (bytes memory)"
                      }
                    },
                    "id": 7954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7342:25:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7955,
                  "nodeType": "ExpressionStatement",
                  "src": "7342:25:23"
                }
              ]
            },
            "documentation": "@dev Retrieve the balance of collateral, the auxiliary function for the total collateral calculation. ",
            "id": 7957,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRealBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7949,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7948,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7957,
                  "src": "7281:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7947,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7281:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7280:24:23"
            },
            "returnParameters": {
              "id": 7952,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7951,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7957,
                  "src": "7324:6:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 7950,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7324:6:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7323:8:23"
            },
            "scope": 8043,
            "src": "7257:118:23",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7967,
              "nodeType": "Block",
              "src": "7460:44:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7964,
                      "name": "delegateToViewAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13405,
                      "src": "7471:23:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () view returns (bytes memory)"
                      }
                    },
                    "id": 7965,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7471:25:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7966,
                  "nodeType": "ExpressionStatement",
                  "src": "7471:25:23"
                }
              ]
            },
            "documentation": null,
            "id": 7968,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNetWorthBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7960,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7959,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7968,
                  "src": "7409:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7958,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7409:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7408:24:23"
            },
            "returnParameters": {
              "id": 7963,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7962,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7968,
                  "src": "7452:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7961,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7452:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7451:9:23"
            },
            "scope": 8043,
            "src": "7381:123:23",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7976,
              "nodeType": "Block",
              "src": "7753:44:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7973,
                      "name": "delegateToViewAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13405,
                      "src": "7764:23:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () view returns (bytes memory)"
                      }
                    },
                    "id": 7974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7764:25:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7975,
                  "nodeType": "ExpressionStatement",
                  "src": "7764:25:23"
                }
              ]
            },
            "documentation": "@dev collateral occupation rate calculation\n     collateral occupation rate = sum(collateral Rate * collateral balance) / sum(collateral balance)",
            "id": 7977,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateCollateralRate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7969,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7722:2:23"
            },
            "returnParameters": {
              "id": 7972,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7971,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7977,
                  "src": "7745:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7970,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7745:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7744:9:23"
            },
            "scope": 8043,
            "src": "7690:107:23",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7987,
              "nodeType": "Block",
              "src": "7951:44:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7984,
                      "name": "delegateToViewAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13405,
                      "src": "7962:23:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () view returns (bytes memory)"
                      }
                    },
                    "id": 7985,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7962:25:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7986,
                  "nodeType": "ExpressionStatement",
                  "src": "7962:25:23"
                }
              ]
            },
            "documentation": "@dev retrieve input price valid range rate, thousandths.",
            "id": 7988,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPriceRateRange",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7978,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7911:2:23"
            },
            "returnParameters": {
              "id": 7983,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7980,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7988,
                  "src": "7934:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7979,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7934:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7982,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7988,
                  "src": "7942:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7981,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7942:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7933:17:23"
            },
            "scope": 8043,
            "src": "7885:110:23",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7998,
              "nodeType": "Block",
              "src": "8164:38:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7995,
                      "name": "delegateAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13420,
                      "src": "8175:17:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () returns (bytes memory)"
                      }
                    },
                    "id": 7996,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8175:19:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7997,
                  "nodeType": "ExpressionStatement",
                  "src": "8175:19:23"
                }
              ]
            },
            "documentation": "@dev set input price valid range rate, thousandths.",
            "id": 7999,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setPriceRateRange",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7993,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7990,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7999,
                  "src": "8105:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7989,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8105:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7992,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7999,
                  "src": "8131:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7991,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8131:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8104:53:23"
            },
            "returnParameters": {
              "id": 7994,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8164:0:23"
            },
            "scope": 8043,
            "src": "8078:124:23",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8019,
              "nodeType": "Block",
              "src": "8893:38:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 8016,
                      "name": "delegateAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13420,
                      "src": "8904:17:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () returns (bytes memory)"
                      }
                    },
                    "id": 8017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8904:19:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 8018,
                  "nodeType": "ExpressionStatement",
                  "src": "8904:19:23"
                }
              ]
            },
            "documentation": "@dev user buy option and create new option.\n settlement user's settement coin address\n settlementAmount amount of settlement user want fo pay.\n strikePrice user input option's strike price\n underlying user input option's underlying id, 1 for BTC,2 for ETH\n expiration user input expiration,time limit from now\n amount user input amount of new option user want to buy.\n optType user input option type",
            "id": 8020,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buyOption",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8014,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8001,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8020,
                  "src": "8701:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8000,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8701:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8003,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8020,
                  "src": "8724:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8002,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8724:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8005,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8020,
                  "src": "8754:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8004,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8754:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8007,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8020,
                  "src": "8778:6:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 8006,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8778:6:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8009,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8020,
                  "src": "8818:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8008,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8818:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8011,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8020,
                  "src": "8841:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8010,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8841:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8013,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8020,
                  "src": "8860:5:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 8012,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "8860:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8700:178:23"
            },
            "returnParameters": {
              "id": 8015,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8893:0:23"
            },
            "scope": 8043,
            "src": "8682:249:23",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8030,
              "nodeType": "Block",
              "src": "9190:38:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 8027,
                      "name": "delegateAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13420,
                      "src": "9201:17:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () returns (bytes memory)"
                      }
                    },
                    "id": 8028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9201:19:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 8029,
                  "nodeType": "ExpressionStatement",
                  "src": "9201:19:23"
                }
              ]
            },
            "documentation": "@dev User sell option.\n optionsId option's ID which was wanted to sell, must owned by user\n amount user input amount of option user want to sell.",
            "id": 8031,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sellOption",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8025,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8022,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8031,
                  "src": "9142:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8021,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9142:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8024,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8031,
                  "src": "9164:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8023,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9164:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9141:42:23"
            },
            "returnParameters": {
              "id": 8026,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9190:0:23"
            },
            "scope": 8043,
            "src": "9122:106:23",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8041,
              "nodeType": "Block",
              "src": "9503:38:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 8038,
                      "name": "delegateAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13420,
                      "src": "9514:17:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () returns (bytes memory)"
                      }
                    },
                    "id": 8039,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9514:19:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 8040,
                  "nodeType": "ExpressionStatement",
                  "src": "9514:19:23"
                }
              ]
            },
            "documentation": "@dev User exercise option.\n optionsId option's ID which was wanted to exercise, must owned by user\n amount user input amount of option user want to exercise.",
            "id": 8042,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exerciseOption",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8036,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8033,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8042,
                  "src": "9455:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8032,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9455:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8035,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8042,
                  "src": "9477:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8034,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9477:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9454:42:23"
            },
            "returnParameters": {
              "id": 8037,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9503:0:23"
            },
            "scope": 8043,
            "src": "9431:110:23",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 8044,
        "src": "136:9408:23"
      }
    ],
    "src": "0:9546:23"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.1.0",
  "updatedAt": "2020-09-02T10:11:20.701Z",
  "devdoc": {
    "methods": {
      "addCollateral(address,uint256)": {
        "details": "Deposit collateral in this pool from user. collateral The collateral coin address which is in whitelist. amount the amount of collateral to deposit."
      },
      "addNetBalance(address,uint256)": {
        "details": "The foundation operator want to add some coin to netbalance, which can increase the FPTCoin net worth. settlement the settlement coin address which the foundation operator want to transfer in this contract address. amount the amount of the settlement coin which the foundation operator want to transfer in this contract address."
      },
      "addOperator(address)": {
        "details": "add a new operator by owner.       "
      },
      "addWhiteList(address)": {
        "details": "Implementation of add an eligible address into the whitelist.",
        "params": {
          "addAddress": "new eligible address."
        }
      },
      "buyOption(address,uint256,uint256,uint32,uint256,uint256,uint8)": {
        "details": "user buy option and create new option. settlement user's settement coin address settlementAmount amount of settlement user want fo pay. strikePrice user input option's strike price underlying user input option's underlying id, 1 for BTC,2 for ETH expiration user input expiration,time limit from now amount user input amount of new option user want to buy. optType user input option type"
      },
      "calCollateralWorth(address)": {
        "details": "Retrieve user's collateral worth in all collateral coin.  If user want to redeem all his collateral,and the vacant collateral is sufficient, He can redeem each collateral amount in return list. account the retrieve user's account;"
      },
      "calOptionsOccupied(uint256,uint256,uint256,uint8)": {
        "details": "The auxiliary function for calculate option occupied.  strikePrice option's strike price underlyingPrice option's underlying price amount option's amount optType option's type, 0 for call, 1 for put."
      },
      "calSharedPayment()": {
        "details": "Calculate the collateral pool shared worth. The foundation operator will invoke this function frequently"
      },
      "calculateCollateralRate()": {
        "details": "collateral occupation rate calculation     collateral occupation rate = sum(collateral Rate * collateral balance) / sum(collateral balance)"
      },
      "constructor": {
        "details": "Options manager constructor. set other contract address oracleAddr fnx oracle contract address. optionsPriceAddr options price contract address optionsPoolAddr optoins pool contract address FPTCoinAddr FPTCoin contract address"
      },
      "delegateToImplementation(bytes)": {
        "details": "It returns to the external caller whatever the implementation returns or forwards reverts",
        "params": {
          "data": "The raw data to delegatecall"
        },
        "return": "The returned bytes from the delegatecall"
      },
      "delegateToViewImplementation(bytes)": {
        "details": "It returns to the external caller whatever the implementation returns or forwards reverts There are an additional 2 prefix uints from the wrapper returndata, which we ignore since we make an extra hop.",
        "params": {
          "data": "The raw data to delegatecall"
        },
        "return": "The returned bytes from the delegatecall"
      },
      "exerciseOption(uint256,uint256)": {
        "details": "User exercise option. optionsId option's ID which was wanted to exercise, must owned by user amount user input amount of option user want to exercise."
      },
      "getAvailableCollateral()": {
        "details": "Retrieve the available collateral worth, the worth of collateral which can used for buy options, priced in USD. "
      },
      "getCollateralRate(address)": {
        "details": "Get the minimum collateral occupation rate."
      },
      "getInputAmountRange()": {
        "details": "get the valid range of input amount"
      },
      "getLeftCollateral()": {
        "details": "Retrieve the left collateral worth, the worth of collateral which can used for redeem collateral, priced in USD. "
      },
      "getOccupiedCollateral()": {
        "details": "Retrieve the occupied collateral worth, multiplied by minimum collateral rate, priced in USD. "
      },
      "getOperator()": {
        "details": "get all operators.       "
      },
      "getPriceRateRange()": {
        "details": "retrieve input price valid range rate, thousandths."
      },
      "getRealBalance(address)": {
        "details": "Retrieve the balance of collateral, the auxiliary function for the total collateral calculation. "
      },
      "getTokenNetworth()": {
        "details": "Retrieve FPTCoin's net worth, priced in USD."
      },
      "getTotalCollateral()": {
        "details": "Retrieve the total collateral worth, priced in USD. "
      },
      "getUnlockedCollateral()": {
        "details": "Retrieve the unlocked collateral worth, the worth of collateral which currently used for options, priced in USD. "
      },
      "getUserPayingUsd(address)": {
        "details": "Retrieve user's cost of collateral, priced in USD. user input retrieved account "
      },
      "getUserTotalWorth(address)": {
        "details": "Retrieve user's current total worth, priced in USD. account input retrieve account"
      },
      "getWhiteList()": {
        "details": "Implementation of getting the eligible whitelist."
      },
      "isEligibleAddress(address)": {
        "details": "Implementation of testing whether the input address is eligible.",
        "params": {
          "tmpAddress": "input address for testing."
        }
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "redeemCollateral(uint256,address)": {
        "details": "redeem collateral from this pool, user can input the prioritized collateral,he will get this coin, if this coin is unsufficient, he will get others collateral which in whitelist. tokenAmount the amount of FPTCoin want to redeem. collateral The prioritized collateral coin address."
      },
      "removeOperator(address)": {
        "details": "remove operator by owner.       "
      },
      "removeWhiteList(address)": {
        "details": "Implementation of revoke an invalid address from the whitelist.",
        "params": {
          "removeAddress": "revoked address."
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.      * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "sellOption(uint256,uint256)": {
        "details": "User sell option. optionsId option's ID which was wanted to sell, must owned by user amount user input amount of option user want to sell."
      },
      "setCollateralRate(address,uint256)": {
        "details": "The foundation owner want to set the minimum collateral occupation rate. collateral collateral coin address colRate The thousandths of the minimum collateral occupation rate."
      },
      "setInputAmountRange(uint256,uint256)": {
        "details": "set the valid range of input amount _minAmount the minimum input amount limit _maxAmount the maximum input amount limit"
      },
      "setOperator(address[])": {
        "details": "set all operators by owner.       "
      },
      "setOperator(uint256,address)": {
        "details": "modify indexed operator by owner.       "
      },
      "setPriceRateRange(uint256,uint256)": {
        "details": "set input price valid range rate, thousandths."
      },
      "setSharedPayment(int256[],int256[],uint256)": {
        "details": "Set the calculation results of the collateral pool shared worth. The foundation operator will invoke this function frequently newNetworth Current expired options' net worth  sharedBalances All unexpired options' shared balance distributed by time. firstOption The new first unexpired option's index."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "userInputCollateral(address,address)": {
        "details": "Retrieve user's amount of the specified collateral. user input retrieved account  collateral input retrieved collateral coin address "
      }
    },
    "title": "Erc20Delegator Contract"
  },
  "userdoc": {
    "methods": {
      "delegateToImplementation(bytes)": {
        "notice": "Delegates execution to the implementation contract"
      },
      "delegateToViewImplementation(bytes)": {
        "notice": "Delegates execution to an implementation contract"
      },
      "setHalt(bool)": {
        "notice": "function Emergency situation that requires contribution period to stop or not."
      }
    }
  }
}
{
  "contractName": "ManagerProxy",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "implementation_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "oracleAddr",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "optionsPriceAddr",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "optionsPoolAddr",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "collateralPoolAddr",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "FPTCoinAddr",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "collateral",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        }
      ],
      "name": "AddCollateral",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "settlement",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "optionId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "optionPrice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "settlementAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "optionAmount",
          "type": "uint256"
        }
      ],
      "name": "BuyOption",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "optionId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "sellValue",
          "type": "uint256"
        }
      ],
      "name": "ExerciseOption",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "collateral",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "allRedeem",
          "type": "uint256"
        }
      ],
      "name": "RedeemCollateral",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "optionId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "sellValue",
          "type": "uint256"
        }
      ],
      "name": "SellOption",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "addAddress",
          "type": "address"
        }
      ],
      "name": "addOperator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "addAddress",
          "type": "address"
        }
      ],
      "name": "addWhiteList",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "tmpAddress",
          "type": "address"
        }
      ],
      "name": "checkAddressPayIn",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "tmpAddress",
          "type": "address"
        }
      ],
      "name": "checkAddressRedeemOut",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "delegateToImplementation",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "delegateToViewImplementation",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCollateralPoolAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getFPTCoinAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getImplementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getInputAmountRange",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getOperator",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getOptionsPoolAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getOptionsPriceAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getOracleAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getWhiteList",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "implementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "tmpAddress",
          "type": "address"
        }
      ],
      "name": "isEligibleAddress",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "addAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "permission",
          "type": "uint256"
        }
      ],
      "name": "modifyPermission",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "removeAddress",
          "type": "address"
        }
      ],
      "name": "removeOperator",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "removeAddress",
          "type": "address"
        }
      ],
      "name": "removeWhiteList",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "collateralPool",
          "type": "address"
        }
      ],
      "name": "setCollateralPoolAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "FPTCoinAddr",
          "type": "address"
        }
      ],
      "name": "setFPTCoinAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bool",
          "name": "halt",
          "type": "bool"
        }
      ],
      "name": "setHalt",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "implementation_",
          "type": "address"
        }
      ],
      "name": "setImplementation",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_minAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxAmount",
          "type": "uint256"
        }
      ],
      "name": "setInputAmountRange",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "addAddress",
          "type": "address"
        }
      ],
      "name": "setOperator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address[]",
          "name": "operators",
          "type": "address[]"
        }
      ],
      "name": "setOperators",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "optionsPool",
          "type": "address"
        }
      ],
      "name": "setOptionsPoolAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "optionsPrice",
          "type": "address"
        }
      ],
      "name": "setOptionsPriceAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "oracle",
          "type": "address"
        }
      ],
      "name": "setOracleAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "addNetBalance",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "setCollateralRate",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "getCollateralRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "getUserPayingUsd",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userInputCollateral",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "calSharedPayment",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "int256[]",
          "name": "",
          "type": "int256[]"
        },
        {
          "internalType": "int256[]",
          "name": "",
          "type": "int256[]"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "setSharedPayment",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "getUserTotalWorth",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getTokenNetworth",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "addCollateral",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "redeemCollateral",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "calCollateralWorth",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getOccupiedCollateral",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getAvailableCollateral",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getLeftCollateral",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getUnlockedCollateral",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "name": "calOptionsOccupied",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getTotalCollateral",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "getRealBalance",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "getNetWorthBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "calculateCollateralRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getPriceRateRange",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "setPriceRateRange",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "name": "buyOption",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "sellOption",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "exerciseOption",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"oracleAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"optionsPriceAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"optionsPoolAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collateralPoolAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"FPTCoinAddr\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collateral\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"AddCollateral\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"settlement\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"optionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"optionPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"settlementAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"optionAmount\",\"type\":\"uint256\"}],\"name\":\"BuyOption\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"optionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sellValue\",\"type\":\"uint256\"}],\"name\":\"ExerciseOption\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"collateral\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"allRedeem\",\"type\":\"uint256\"}],\"name\":\"RedeemCollateral\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"optionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sellValue\",\"type\":\"uint256\"}],\"name\":\"SellOption\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"addCollateral\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"addNetBalance\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"addAddress\",\"type\":\"address\"}],\"name\":\"addOperator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"addAddress\",\"type\":\"address\"}],\"name\":\"addWhiteList\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"buyOption\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"calCollateralWorth\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"calOptionsOccupied\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"calSharedPayment\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"calculateCollateralRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tmpAddress\",\"type\":\"address\"}],\"name\":\"checkAddressPayIn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tmpAddress\",\"type\":\"address\"}],\"name\":\"checkAddressRedeemOut\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"delegateToImplementation\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"delegateToViewImplementation\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"exerciseOption\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAvailableCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCollateralPoolAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getCollateralRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getFPTCoinAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getInputAmountRange\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getLeftCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getNetWorthBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOccupiedCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOperator\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOptionsPoolAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOptionsPriceAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOracleAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getPriceRateRange\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getRealBalance\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTokenNetworth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTotalCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getUnlockedCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getUserPayingUsd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getUserTotalWorth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getWhiteList\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tmpAddress\",\"type\":\"address\"}],\"name\":\"isEligibleAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"addAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"permission\",\"type\":\"uint256\"}],\"name\":\"modifyPermission\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"redeemCollateral\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"removeAddress\",\"type\":\"address\"}],\"name\":\"removeOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"removeAddress\",\"type\":\"address\"}],\"name\":\"removeWhiteList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"sellOption\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"collateralPool\",\"type\":\"address\"}],\"name\":\"setCollateralPoolAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"setCollateralRate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"FPTCoinAddr\",\"type\":\"address\"}],\"name\":\"setFPTCoinAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bool\",\"name\":\"halt\",\"type\":\"bool\"}],\"name\":\"setHalt\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation_\",\"type\":\"address\"}],\"name\":\"setImplementation\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxAmount\",\"type\":\"uint256\"}],\"name\":\"setInputAmountRange\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"addAddress\",\"type\":\"address\"}],\"name\":\"setOperator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"operators\",\"type\":\"address[]\"}],\"name\":\"setOperators\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"optionsPool\",\"type\":\"address\"}],\"name\":\"setOptionsPoolAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"optionsPrice\",\"type\":\"address\"}],\"name\":\"setOptionsPriceAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"name\":\"setOracleAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"setPriceRateRange\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"\",\"type\":\"int256[]\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"setSharedPayment\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInputCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"addCollateral(address,uint256)\":{\"details\":\"Deposit collateral in this pool from user. collateral The collateral coin address which is in whitelist. amount the amount of collateral to deposit.\"},\"addNetBalance(address,uint256)\":{\"details\":\"The foundation operator want to add some coin to netbalance, which can increase the FPTCoin net worth. settlement the settlement coin address which the foundation operator want to transfer in this contract address. amount the amount of the settlement coin which the foundation operator want to transfer in this contract address.\"},\"addOperator(address)\":{\"details\":\"add a new operator by owner.      \"},\"addWhiteList(address)\":{\"details\":\"Implementation of add an eligible address into the whitelist.\",\"params\":{\"addAddress\":\"new eligible address.\"}},\"buyOption(address,uint256,uint256,uint32,uint256,uint256,uint8)\":{\"details\":\"user buy option and create new option. settlement user's settement coin address settlementAmount amount of settlement user want fo pay. strikePrice user input option's strike price underlying user input option's underlying id, 1 for BTC,2 for ETH expiration user input expiration,time limit from now amount user input amount of new option user want to buy. optType user input option type\"},\"calCollateralWorth(address)\":{\"details\":\"Retrieve user's collateral worth in all collateral coin.  If user want to redeem all his collateral,and the vacant collateral is sufficient, He can redeem each collateral amount in return list. account the retrieve user's account;\"},\"calOptionsOccupied(uint256,uint256,uint256,uint8)\":{\"details\":\"The auxiliary function for calculate option occupied.  strikePrice option's strike price underlyingPrice option's underlying price amount option's amount optType option's type, 0 for call, 1 for put.\"},\"calSharedPayment()\":{\"details\":\"Calculate the collateral pool shared worth. The foundation operator will invoke this function frequently\"},\"calculateCollateralRate()\":{\"details\":\"collateral occupation rate calculation     collateral occupation rate = sum(collateral Rate * collateral balance) / sum(collateral balance)\"},\"constructor\":{\"details\":\"Options manager constructor. set other contract address oracleAddr fnx oracle contract address. optionsPriceAddr options price contract address optionsPoolAddr optoins pool contract address FPTCoinAddr FPTCoin contract address\"},\"delegateToImplementation(bytes)\":{\"details\":\"It returns to the external caller whatever the implementation returns or forwards reverts\",\"params\":{\"data\":\"The raw data to delegatecall\"},\"return\":\"The returned bytes from the delegatecall\"},\"delegateToViewImplementation(bytes)\":{\"details\":\"It returns to the external caller whatever the implementation returns or forwards reverts There are an additional 2 prefix uints from the wrapper returndata, which we ignore since we make an extra hop.\",\"params\":{\"data\":\"The raw data to delegatecall\"},\"return\":\"The returned bytes from the delegatecall\"},\"exerciseOption(uint256,uint256)\":{\"details\":\"User exercise option. optionsId option's ID which was wanted to exercise, must owned by user amount user input amount of option user want to exercise.\"},\"getAvailableCollateral()\":{\"details\":\"Retrieve the available collateral worth, the worth of collateral which can used for buy options, priced in USD. \"},\"getCollateralRate(address)\":{\"details\":\"Get the minimum collateral occupation rate.\"},\"getInputAmountRange()\":{\"details\":\"get the valid range of input amount\"},\"getLeftCollateral()\":{\"details\":\"Retrieve the left collateral worth, the worth of collateral which can used for redeem collateral, priced in USD. \"},\"getOccupiedCollateral()\":{\"details\":\"Retrieve the occupied collateral worth, multiplied by minimum collateral rate, priced in USD. \"},\"getOperator()\":{\"details\":\"get all operators.      \"},\"getPriceRateRange()\":{\"details\":\"retrieve input price valid range rate, thousandths.\"},\"getRealBalance(address)\":{\"details\":\"Retrieve the balance of collateral, the auxiliary function for the total collateral calculation. \"},\"getTokenNetworth()\":{\"details\":\"Retrieve FPTCoin's net worth, priced in USD.\"},\"getTotalCollateral()\":{\"details\":\"Retrieve the total collateral worth, priced in USD. \"},\"getUnlockedCollateral()\":{\"details\":\"Retrieve the unlocked collateral worth, the worth of collateral which currently used for options, priced in USD. \"},\"getUserPayingUsd(address)\":{\"details\":\"Retrieve user's cost of collateral, priced in USD. user input retrieved account \"},\"getUserTotalWorth(address)\":{\"details\":\"Retrieve user's current total worth, priced in USD. account input retrieve account\"},\"getWhiteList()\":{\"details\":\"Implementation of getting the eligible whitelist.\"},\"isEligibleAddress(address)\":{\"details\":\"Implementation of testing whether the input address is eligible.\",\"params\":{\"tmpAddress\":\"input address for testing.\"}},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"redeemCollateral(uint256,address)\":{\"details\":\"redeem collateral from this pool, user can input the prioritized collateral,he will get this coin, if this coin is unsufficient, he will get others collateral which in whitelist. tokenAmount the amount of FPTCoin want to redeem. collateral The prioritized collateral coin address.\"},\"removeOperator(address)\":{\"details\":\"remove operator by owner.      \"},\"removeWhiteList(address)\":{\"details\":\"Implementation of revoke an invalid address from the whitelist.\",\"params\":{\"removeAddress\":\"revoked address.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"sellOption(uint256,uint256)\":{\"details\":\"User sell option. optionsId option's ID which was wanted to sell, must owned by user amount user input amount of option user want to sell.\"},\"setCollateralRate(address,uint256)\":{\"details\":\"The foundation owner want to set the minimum collateral occupation rate. collateral collateral coin address colRate The thousandths of the minimum collateral occupation rate.\"},\"setInputAmountRange(uint256,uint256)\":{\"details\":\"set the valid range of input amount\",\"params\":{\"_maxAmount\":\"the maximum input amount limit\",\"_minAmount\":\"the minimum input amount limit\"}},\"setOperator(uint256,address)\":{\"details\":\"modify indexed operator by owner.      \"},\"setOperators(address[])\":{\"details\":\"set all operators by owner.      \"},\"setPriceRateRange(uint256,uint256)\":{\"details\":\"set input price valid range rate, thousandths.\"},\"setSharedPayment(int256[],int256[],uint256)\":{\"details\":\"Set the calculation results of the collateral pool shared worth. The foundation operator will invoke this function frequently newNetworth Current expired options' net worth  sharedBalances All unexpired options' shared balance distributed by time. firstOption The new first unexpired option's index.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"userInputCollateral(address,address)\":{\"details\":\"Retrieve user's amount of the specified collateral. user input retrieved account  collateral input retrieved collateral coin address \"}},\"title\":\"Erc20Delegator Contract\"},\"userdoc\":{\"methods\":{\"delegateToImplementation(bytes)\":{\"notice\":\"Delegates execution to the implementation contract\"},\"delegateToViewImplementation(bytes)\":{\"notice\":\"Delegates execution to an implementation contract\"},\"setHalt(bool)\":{\"notice\":\"function Emergency situation that requires contribution period to stop or not.\"}}}},\"settings\":{\"compilationTarget\":{\"/home/jqg/FinnexusOptions_V2/contracts/OptionsManager/ManagerProxy.sol\":\"ManagerProxy\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/jqg/FinnexusOptions_V2/contracts/CollateralPool/ICollateralPool.sol\":{\"keccak256\":\"0x18c8095f81a29c65a624198facd07b4943b1340847a4e3fa5608068cb08f31f6\",\"urls\":[\"bzz-raw://ed7e3ce7788d2733a005357577c21849570771ada52f54634779c80cc3049c16\",\"dweb:/ipfs/QmdMGJCTw1TK6sFHu511GUgaFhfAVNudPM5X2u3t3UNpRK\"]},\"/home/jqg/FinnexusOptions_V2/contracts/ERC20/IERC20.sol\":{\"keccak256\":\"0x67b431608aacbad2477acd84ff274e1dc109078eb71f90fd6302f3f26960fa79\",\"urls\":[\"bzz-raw://232c303f438798e3f9aea2565f52c857e2ea2ca7962d0f30ed8ccaef5d3ef570\",\"dweb:/ipfs/QmaY3CQSo27e2Uz1h3bYHq1uhTNPdFXeMjNcEvoK2PDp5E\"]},\"/home/jqg/FinnexusOptions_V2/contracts/FPTCoin/IFPTCoin.sol\":{\"keccak256\":\"0xd7b6c065cbe8f0c433fccc4ed13c5d236e0d881b2ae47aa1cdee6b775a8e6f07\",\"urls\":[\"bzz-raw://afe93a79d5c15470370490f7566869ff56884dd8afdabdc0f7e6db4f9ca13940\",\"dweb:/ipfs/QmenY5GuHcjiRfw6VjeycucTodFzm7v19skYRNAzVZQYvN\"]},\"/home/jqg/FinnexusOptions_V2/contracts/OptionsManager/ManagerData.sol\":{\"keccak256\":\"0xc60a8341c8037bb2f70afcde041f4ead7d7a29582d9a688fe5eb7cbdba458286\",\"urls\":[\"bzz-raw://e74a31b849d6312de554e72858b340071053bbfe8bb089acaf9226e18ff65e26\",\"dweb:/ipfs/QmddWFREmGNZqZgRdpjThaNKRNBo1m3goxzRhStYFaZZQ1\"]},\"/home/jqg/FinnexusOptions_V2/contracts/OptionsManager/ManagerProxy.sol\":{\"keccak256\":\"0xaf38f1419a4ca5c71a974e622e6e392d7a04d57c927f3e670cbda85d9eb2d005\",\"urls\":[\"bzz-raw://92b271af7283bd514c237dca0c34833c16780154080d539093109a6dfb87a336\",\"dweb:/ipfs/QmeRZLGjH5eEtdhZxxqaT1Sx29rbaZrZKrwZUF2gbWFioy\"]},\"/home/jqg/FinnexusOptions_V2/contracts/OptionsPool/IOptionsPool.sol\":{\"keccak256\":\"0xe27f15f3259ca3075c2c17598c7e38e48d4a9ee1bf3fc85ffa6873be5708a4ff\",\"urls\":[\"bzz-raw://01f0a5cc6ae12eed123945ecba5097a5c3606896209512cf22d6461bfd70f71f\",\"dweb:/ipfs/QmSFm2ziGrVA2sE495htKS6m865QiTVhMDa1217yUkM9Me\"]},\"/home/jqg/FinnexusOptions_V2/contracts/Proxy/baseProxy.sol\":{\"keccak256\":\"0x83388dd761c28582441ddcecc557df5b15cbb67afb2e5c72d1ee8e40514cde73\",\"urls\":[\"bzz-raw://88843d9330833df99f47f53f82b1b307d001058b4e01595217cba2f326f6eb50\",\"dweb:/ipfs/QmXSbxcveZXDzW6tYPYZsE5CMKqeZYQ8r3q7kHBVfqrPQd\"]},\"/home/jqg/FinnexusOptions_V2/contracts/interfaces/IFNXOracle.sol\":{\"keccak256\":\"0xc642e7c02baa129e15578732eaf3f97a0bb0bedbe39a3e26d28aec0e55ca22b9\",\"urls\":[\"bzz-raw://afd542c26a076347383090db93a3e2959cda3394aed6a13f0a3b34420a5a1909\",\"dweb:/ipfs/QmYhHX4Uc5GZ4hHtsuQLzGbiG1CneSHArY1rtfrqEA2kip\"]},\"/home/jqg/FinnexusOptions_V2/contracts/interfaces/IOptionsPrice.sol\":{\"keccak256\":\"0xfb505dd7e7c9879e7f5fe536895ecc7c9917d41848d30d54ef47454df3b50c49\",\"urls\":[\"bzz-raw://760939c1c3bb510505d5f1bbe19a2f4269171bef96c17e5a7ba6a339430d406e\",\"dweb:/ipfs/QmVqGguaVHBxGEzMTd6EUNruAHoNhmXuZBuzLGCtZGn2Y1\"]},\"/home/jqg/FinnexusOptions_V2/contracts/modules/AddressWhiteList.sol\":{\"keccak256\":\"0xa1abb937abe834cb723cdbf9b379544671f5d992797097a0c9c126c226b531ab\",\"urls\":[\"bzz-raw://b0bc9b1e60474055e7823f5c250b58240bd7bff8d5dab06b56a142ac9975b436\",\"dweb:/ipfs/QmRy11erH9VkbvdKA8jdDUz843ofDeYJRskJyvHKVG1r3e\"]},\"/home/jqg/FinnexusOptions_V2/contracts/modules/Halt.sol\":{\"keccak256\":\"0xec7f07eddf2d48f8ca3a0fc08fee6443067179607ce4011ba054883b53b7b179\",\"urls\":[\"bzz-raw://90b38398b4a181fd5e1b70799aec2d24df314ba24ec82ed768fee9693c762592\",\"dweb:/ipfs/QmNttDJiP7ZxUYWFTHiwgbcQ3MWftqS8d9uq8iGX3ZNpRv\"]},\"/home/jqg/FinnexusOptions_V2/contracts/modules/ImputRange.sol\":{\"keccak256\":\"0xd74c2d94f0e416d47b4831c2faab92b0f154658260be5952c6baf096e4f3db77\",\"urls\":[\"bzz-raw://738567e3adb4a6706a71202ae63353679d2970f87664a94f5fbe4e5d48862fb7\",\"dweb:/ipfs/QmPJNidiovbr8VwBxYm8ZjrB8woYN4r3eCgxa75Rk3EGsT\"]},\"/home/jqg/FinnexusOptions_V2/contracts/modules/Operator.sol\":{\"keccak256\":\"0x2d8b11c73d4138c0f6574aaf7f791ac17a8a3a0d4352c7edb6ebd0ee5a87c168\",\"urls\":[\"bzz-raw://efa1c4df222a529fcd715a0f30aa135219a31d37b6213440299727c91a6eb37c\",\"dweb:/ipfs/QmeNU6bnmdwi3sD789C3fK2rFx1Dm9NHzk5U8J1P8YX7qQ\"]},\"/home/jqg/FinnexusOptions_V2/contracts/modules/Ownable.sol\":{\"keccak256\":\"0x283d39388b6a114767746e38a205a4bfaaeb401c4863a7eb17fa107684d7845b\",\"urls\":[\"bzz-raw://716829652ea09ecaf4fca47af0d4edb145db6f25548c0710ccb83f39e4b9bea8\",\"dweb:/ipfs/QmWDKty8932txnmo4JLiCVfvDHyLqHik2W1NYeXBFQMzYs\"]},\"/home/jqg/FinnexusOptions_V2/contracts/modules/ReentrancyGuard.sol\":{\"keccak256\":\"0x20f4f3c2a5c27de31241140a1008f13ba35a96fbb9c5b14c669a2abb1029e345\",\"urls\":[\"bzz-raw://3eb6b4abcc952bd289aa1c7f86407d7f58b7b7a04ce056b4fc2115595ec2907c\",\"dweb:/ipfs/QmbEzC6iS4x3fY645pWZmgumnLg2dLFyVd5tLjyzdSyJRP\"]},\"/home/jqg/FinnexusOptions_V2/contracts/modules/whiteList.sol\":{\"keccak256\":\"0xa65f8f43b4fb334aab9ad0a3693f1c0f6ba5d4f68291975a02b4f94d7a772ff3\",\"urls\":[\"bzz-raw://a017d4ac3b703fb17684b6852f0375855468a0deba95fa9cf7b963138ac7e268\",\"dweb:/ipfs/QmeDXC8uqdeJEPHGPNz6ZRqyxvAZ27CCM34MHT7sp6rL39\"]}},\"version\":1}",
  "bytecode": "0x60806040526000805460ff199081169091556c0c9f2c9cd04674edea40000000600155633b9aca006002556003805490911690556105dc600d556101f4600e553480156200004c57600080fd5b50604051620024f3380380620024f3833981810160405260c08110156200007257600080fd5b50805160208201516040808401516060850151608086015160a0909601516000805461010033810261010060a860020a03199092169190911780835595519798969794969395939492938993919004600160a060020a031691907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3600f8054600160a060020a038316600160a060020a031990911681179091556040805160048152602481018252602081018051600160e060020a03167f8129fc1c00000000000000000000000000000000000000000000000000000000178152915181516000949382918083835b60208310620001805780518252601f1990920191602091820191016200015f565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855af49150503d8060008114620001e2576040519150601f19603f3d011682016040523d82523d6000602084013e620001e7565b606091505b5050905080620001f657600080fd5b505060078054600160a060020a0319908116600160a060020a0397881617909155600b8054821695871695909517909455600880548516938616939093179092556009805484169185169190911790556006805490921692169190911790555061228d80620002666000396000f3fe6080604052600436106103b4576000357c010000000000000000000000000000000000000000000000000000000090048063a20a8045116101f9578063d18929041161011f578063e7122ffd116100bd578063f2fde38b1161008c578063f2fde38b14610e78578063f495438714610eab578063f4fdc0c214610ed7578063fb1052bf1461058d576103b4565b8063e7122ffd14610dc4578063e7a1c1c014610df7578063e7cd4a0414610e30578063e7f43c6814610e63576103b4565b8063d7e57992116100f9578063d7e5799214610cff578063dab551291461058d578063ddf71cd514610d14578063e28a327d1461058d576103b4565b8063d1892904146107d8578063d6eb59101461058d578063d784d42614610ccc576103b4565b8063b4d5a9c711610197578063c040725a11610166578063c040725a14610c7e578063c219043b14610c93578063c5e5a3ed1461058d578063cd4058191461058d576103b4565b8063b4d5a9c714610be6578063bc2c300214610c21578063bc9abed214610c36578063bdac4bf614610c4b576103b4565b8063aaf10f42116101d3578063aaf10f4214610b5b578063ac8a584a14610b70578063aec6280614610ba3578063b18b78dd14610bd1576103b4565b8063a20a8045146109b9578063a37c4fcf146109f2578063a56ea40314610b28576103b4565b80635c60da1b116102de578063817bf86d1161027c578063925c482c1161024b578063925c482c146108d05780639870d7fe146109235780639ab91a3514610956578063a093e2d014610986576103b4565b8063817bf86d146108735780638691a8c5146108325780638da5cb5b146108a65780638f32d59b146108bb576103b4565b80636d75b9ee116102b85780636d75b9ee14610832578063715018a61461085e57806377e071ad146105b45780637c9c6712146107d8576103b4565b80635c60da1b146108085780635ca4b73b1461081d5780636b6ecea8146105b4576103b4565b80632042e5c211610356578063447dbeac11610325578063447dbeac146105b45780634487152f146106f25780634c69c00f146107a55780635bf5d897146107d8576103b4565b80632042e5c21461064f578063251e2fe31461068257806332c82a5f146106b357806342049a72146105b4576103b4565b80630aaf3832116103925780630aaf38321461058d5780630c80d691146105b45780631730b3cb146105e75780631a5a3fce1461061c576103b4565b8063059621d7146103b95780630933c1ed1461040057806309a9d76c14610528575b600080fd5b3480156103c557600080fd5b506103ec600480360360208110156103dc57600080fd5b5035600160a060020a0316610efa565b604080519115158252519081900360200190f35b34801561040c57600080fd5b506104b36004803603602081101561042357600080fd5b81019060208101813564010000000081111561043e57600080fd5b82018360208201111561045057600080fd5b8035906020019184600183028401116401000000008311171561047257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610f32945050505050565b6040805160208082528351818301528351919283929083019185019080838360005b838110156104ed5781810151838201526020016104d5565b50505050905090810190601f16801561051a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561053457600080fd5b5061053d610ffc565b60408051602080825283518183015283519192839290830191858101910280838360005b83811015610579578181015183820152602001610561565b505050509050019250505060405180910390f35b34801561059957600080fd5b506105a261105f565b60408051918252519081900360200190f35b3480156105c057600080fd5b506105a2600480360360208110156105d757600080fd5b5035600160a060020a031661106d565b3480156105f357600080fd5b5061061a6004803603602081101561060a57600080fd5b5035600160a060020a031661107d565b005b34801561062857600080fd5b5061061a6004803603602081101561063f57600080fd5b5035600160a060020a03166110e9565b34801561065b57600080fd5b506103ec6004803603602081101561067257600080fd5b5035600160a060020a0316611155565b34801561068e57600080fd5b506106976111b2565b60408051600160a060020a039092168252519081900360200190f35b3480156106bf57600080fd5b506105a2600480360360808110156106d657600080fd5b508035906020810135906040810135906060013560ff166111c1565b3480156106fe57600080fd5b506104b36004803603602081101561071557600080fd5b81019060208101813564010000000081111561073057600080fd5b82018360208201111561074257600080fd5b8035906020019184600183028401116401000000008311171561076457600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506111d4945050505050565b3480156107b157600080fd5b5061061a600480360360208110156107c857600080fd5b5035600160a060020a0316611423565b3480156107e457600080fd5b5061061a600480360360408110156107fb57600080fd5b508035906020013561148f565b34801561081457600080fd5b5061069761149c565b34801561082957600080fd5b506106976114ab565b61061a6004803603604081101561084857600080fd5b50600160a060020a03813516906020013561148f565b34801561086a57600080fd5b5061061a6114ba565b34801561087f57600080fd5b506103ec6004803603602081101561089657600080fd5b5035600160a060020a0316611560565b3480156108b257600080fd5b506106976115cf565b3480156108c757600080fd5b506103ec6115e3565b61061a600480360360e08110156108e657600080fd5b508035600160a060020a031690602081013590604081013590606081013563ffffffff169060808101359060a08101359060c0013560ff166115f9565b34801561092f57600080fd5b5061061a6004803603602081101561094657600080fd5b5035600160a060020a031661160b565b34801561096257600080fd5b5061061a6004803603604081101561097957600080fd5b5080359060200135611669565b34801561099257600080fd5b5061061a600480360360208110156109a957600080fd5b5035600160a060020a03166116be565b3480156109c557600080fd5b5061061a600480360360408110156109dc57600080fd5b5080359060200135600160a060020a031661148f565b3480156109fe57600080fd5b5061061a60048036036060811015610a1557600080fd5b810190602081018135640100000000811115610a3057600080fd5b820183602082011115610a4257600080fd5b80359060200191846020830284011164010000000083111715610a6457600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050640100000000811115610ab457600080fd5b820183602082011115610ac657600080fd5b80359060200191846020830284011164010000000083111715610ae857600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550509135925061172a915050565b348015610b3457600080fd5b5061053d60048036036020811015610b4b57600080fd5b5035600160a060020a0316611738565b348015610b6757600080fd5b50610697611742565b348015610b7c57600080fd5b506103ec60048036036020811015610b9357600080fd5b5035600160a060020a0316611751565b348015610baf57600080fd5b50610bb86117ae565b6040805192835260208301919091528051918290030190f35b348015610bdd57600080fd5b506106976117be565b348015610bf257600080fd5b506105a260048036036040811015610c0957600080fd5b50600160a060020a03813581169160200135166117cd565b348015610c2d57600080fd5b5061061a6117de565b348015610c4257600080fd5b50610bb86117e6565b348015610c5757600080fd5b506103ec60048036036020811015610c6e57600080fd5b5035600160a060020a03166117f0565b348015610c8a57600080fd5b50610697611824565b348015610c9f57600080fd5b5061061a60048036036040811015610cb657600080fd5b50600160a060020a038135169060200135611833565b348015610cd857600080fd5b5061061a60048036036020811015610cef57600080fd5b5035600160a060020a0316611899565b348015610d0b57600080fd5b506106976119fc565b348015610d2057600080fd5b5061061a60048036036020811015610d3757600080fd5b810190602081018135640100000000811115610d5257600080fd5b820183602082011115610d6457600080fd5b80359060200191846020830284011164010000000083111715610d8657600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550611a0b945050505050565b348015610dd057600080fd5b5061061a60048036036020811015610de757600080fd5b5035600160a060020a0316611a68565b348015610e0357600080fd5b5061061a60048036036040811015610e1a57600080fd5b5080359060200135600160a060020a0316611ad4565b348015610e3c57600080fd5b5061061a60048036036020811015610e5357600080fd5b5035600160a060020a0316611b5e565b348015610e6f57600080fd5b5061053d611bd9565b348015610e8457600080fd5b5061061a60048036036020811015610e9b57600080fd5b5035600160a060020a0316611c39565b348015610eb757600080fd5b5061061a60048036036020811015610ece57600080fd5b50351515611c8c565b348015610ee357600080fd5b5061061a6004803603604081101561084857600080fd5b6000610f0582611560565b8015610f2c5750600160a060020a0382166000908152600560205260409020546002908116145b92915050565b600f5460405182516060926000928492600160a060020a0390921691869190819060208401908083835b60208310610f7b5780518252601f199092019160209182019101610f5c565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855af49150503d8060008114610fdb576040519150601f19603f3d011682016040523d82523d6000602084013e610fe0565b606091505b50915091506000821415610ff5573d60208201fd5b9392505050565b6060600480548060200260200160405190810160405280929190818152602001828054801561105457602002820191906000526020600020905b8154600160a060020a03168152600190910190602001808311611036575b505050505090505b90565b6000611069611ce9565b5090565b6000611077611ce9565b50919050565b6110856115e3565b6110c7576040805160e560020a62461bcd0281526020600482018190526024820152600080516020612239833981519152604482015290519081900360640190fd5b60098054600160a060020a031916600160a060020a0392909216919091179055565b6110f16115e3565b611133576040805160e560020a62461bcd0281526020600482018190526024820152600080516020612239833981519152604482015290519081900360640190fd5b60088054600160a060020a031916600160a060020a0392909216919091179055565b600061115f6115e3565b6111a1576040805160e560020a62461bcd0281526020600482018190526024820152600080516020612239833981519152604482015290519081900360640190fd5b610f2c60048363ffffffff611e3b16565b600954600160a060020a031690565b60006111cb611ce9565b50949350505050565b60606000606030600160a060020a0316846040516024018080602001828103825283818151815260200191508051906020019080838360005b8381101561122557818101518382015260200161120d565b50505050905090810190601f1680156112525780820380516001836020036101000a031916815260200191505b5060408051601f198184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f0933c1ed00000000000000000000000000000000000000000000000000000000178152905182519295509350839250908083835b602083106112db5780518252601f1990920191602091820191016112bc565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d806000811461133b576040519150601f19603f3d011682016040523d82523d6000602084013e611340565b606091505b50915091506000821415611355573d60208201fd5b80806020019051602081101561136a57600080fd5b810190808051604051939291908464010000000082111561138a57600080fd5b90830190602082018581111561139f57600080fd5b82516401000000008111828201881017156113b957600080fd5b82525081516020918201929091019080838360005b838110156113e65781810151838201526020016113ce565b50505050905090810190601f1680156114135780820380516001836020036101000a031916815260200191505b5060405250505092505050919050565b61142b6115e3565b61146d576040805160e560020a62461bcd0281526020600482018190526024820152600080516020612239833981519152604482015290519081900360640190fd5b60078054600160a060020a031916600160a060020a0392909216919091179055565b611497611f29565b505050565b600f54600160a060020a031681565b600b54600160a060020a031690565b6114c26115e3565b611504576040805160e560020a62461bcd0281526020600482018190526024820152600080516020612239833981519152604482015290519081900360640190fd5b60008054604051610100909104600160a060020a0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805474ffffffffffffffffffffffffffffffffffffffff0019169055565b6000610f2c8260048054806020026020016040519081016040528092919081815260200182805480156115bc57602002820191906000526020600020905b8154600160a060020a0316815260019091019060200180831161159e575b5050505050611fad90919063ffffffff16565b6000546101009004600160a060020a031690565b6000546101009004600160a060020a0316331490565b611601611f29565b5050505050505050565b6116136115e3565b611655576040805160e560020a62461bcd0281526020600482018190526024820152600080516020612239833981519152604482015290519081900360640190fd5b611666600a8263ffffffff611ffc16565b50565b6116716115e3565b6116b3576040805160e560020a62461bcd0281526020600482018190526024820152600080516020612239833981519152604482015290519081900360640190fd5b600291909155600155565b6116c66115e3565b611708576040805160e560020a62461bcd0281526020600482018190526024820152600080516020612239833981519152604482015290519081900360640190fd5b600b8054600160a060020a031916600160a060020a0392909216919091179055565b611732611f29565b50505050565b6060611077611ce9565b600f54600160a060020a031690565b600061175b6115e3565b61179d576040805160e560020a62461bcd0281526020600482018190526024820152600080516020612239833981519152604482015290519081900360640190fd5b610f2c600a8363ffffffff611e3b16565b6000806117b9611ce9565b509091565b600754600160a060020a031690565b60006117d7611ce9565b5092915050565b611666611f29565b6002546001549091565b60006117fb82611560565b8015610f2c575050600160a060020a031660009081526005602052604090205460019081161490565b600854600160a060020a031690565b61183b6115e3565b61187d576040805160e560020a62461bcd0281526020600482018190526024820152600080516020612239833981519152604482015290519081900360640190fd5b600160a060020a03909116600090815260056020526040902055565b6118a16115e3565b6118e3576040805160e560020a62461bcd0281526020600482018190526024820152600080516020612239833981519152604482015290519081900360640190fd5b600f8054600160a060020a038316600160a060020a0319909116811790915560408051600481526024810182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa2e6204500000000000000000000000000000000000000000000000000000000178152915181516000949382918083835b602083106119855780518252601f199092019160209182019101611966565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855af49150503d80600081146119e5576040519150601f19603f3d011682016040523d82523d6000602084013e6119ea565b606091505b50509050806119f857600080fd5b5050565b600654600160a060020a031690565b611a136115e3565b611a55576040805160e560020a62461bcd0281526020600482018190526024820152600080516020612239833981519152604482015290519081900360640190fd5b80516119f890600a90602084019061214f565b611a706115e3565b611ab2576040805160e560020a62461bcd0281526020600482018190526024820152600080516020612239833981519152604482015290519081900360640190fd5b60068054600160a060020a031916600160a060020a0392909216919091179055565b611adc6115e3565b611b1e576040805160e560020a62461bcd0281526020600482018190526024820152600080516020612239833981519152604482015290519081900360640190fd5b80600a8381548110611b2c57fe5b9060005260206000200160006101000a815481600160a060020a030219169083600160a060020a031602179055505050565b611b666115e3565b611ba8576040805160e560020a62461bcd0281526020600482018190526024820152600080516020612239833981519152604482015290519081900360640190fd5b611bb960048263ffffffff611ffc16565b600160a060020a0316600090815260056020526040902063ffffffff9055565b6060600a80548060200260200160405190810160405280929190818152602001828054801561105457602002820191906000526020600020908154600160a060020a03168152600190910190602001808311611036575050505050905090565b611c416115e3565b611c83576040805160e560020a62461bcd0281526020600482018190526024820152600080516020612239833981519152604482015290519081900360640190fd5b61166681612094565b611c946115e3565b611cd6576040805160e560020a62461bcd0281526020600482018190526024820152600080516020612239833981519152604482015290519081900360640190fd5b6003805460ff1916911515919091179055565b6060600030600160a060020a03166000366040516024018080602001828103825284848281815260200192508082843760008382015260408051601f909201601f1990811690940182810390940182529283526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f0933c1ed0000000000000000000000000000000000000000000000000000000017815292518151919750955085945091925081905083835b60208310611db85780518252601f199092019160209182019101611d99565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114611e18576040519150601f19603f3d011682016040523d82523d6000602084013e611e1d565b606091505b505090506040513d6000823e818015611e37573d60408301f35b3d82fd5b8154600090815b81811015611e885783600160a060020a0316858281548110611e6057fe5b600091825260209091200154600160a060020a03161415611e8057611e88565b600101611e42565b81811015611f1e57600182038114611f0257846001830381548110611ea957fe5b9060005260206000200160009054906101000a9004600160a060020a0316858281548110611ed357fe5b9060005260206000200160006101000a815481600160a060020a030219169083600160a060020a031602179055505b8454611f128660001983016121b0565b50600192505050610f2c565b506000949350505050565b600f54604051606091600091600160a060020a0390911690829036908083838082843760405192019450600093509091505080830381855af49150503d8060008114611f91576040519150601f19603f3d011682016040523d82523d6000602084013e611f96565b606091505b505090506040513d6000823e818015611e37573d82f35b8151600090815b81811015611f1e5783600160a060020a0316858281518110611fd257fe5b6020026020010151600160a060020a03161415611ff457600192505050610f2c565b600101611fb4565b61205f8280548060200260200160405190810160405280929190818152602001828054801561205457602002820191906000526020600020905b8154600160a060020a03168152600190910190602001808311612036575b505050505082611fad565b6119f8578154600181018355600083815260209020018054600160a060020a038316600160a060020a03199091161790555050565b600160a060020a0381166120dc5760405160e560020a62461bcd0281526004018080602001828103825260268152602001806122136026913960400191505060405180910390fd5b60008054604051600160a060020a038085169361010090930416917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a360008054600160a060020a039092166101000274ffffffffffffffffffffffffffffffffffffffff0019909216919091179055565b8280548282559060005260206000209081019282156121a4579160200282015b828111156121a45782518254600160a060020a031916600160a060020a0390911617825560209092019160019091019061216f565b506110699291506121d4565b815481835581811115611497576000838152602090206114979181019083016121f8565b61105c91905b80821115611069578054600160a060020a03191681556001016121da565b61105c91905b8082111561106957600081556001016121fe56fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a265627a7a7231582002510049965be302bf06badeb851cf120c03fc4f7e51ed4455f6cc99cfa707f164736f6c63430005100032",
  "deployedBytecode": "",
  "sourceMap": "130:8716:24:-;;;153:5:50;123:35;;-1:-1:-1;;123:35:50;;;;;;158:4:46;123:35:50;130:32:46;234:3;206:31;;86:27:45;;;;;;;;1695:4:23;1663:36;;1737:3;1705:35;;463:474:24;5:2:-1;;;;30:1;27;20:12;5:2;463:474:24;;;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;463:474:24;;;;;;;;;;;;;;;;;;;;;;;;659:6:49;:19;;;668:10;659:19;;-1:-1:-1;;;;;;659:19:49;;;;;;;;;;693:40;;463:474:24;;;;;;;;;;;;;;726:6:49;;;-1:-1:-1;;;;;726:6:49;;659;693:40;;659:6;;693:40;288:14:33;:32;;-1:-1:-1;;;;;288:32:33;;-1:-1:-1;;;;;;288:32:33;;;;;;;;378:39;;;22:32:-1;6:49;;378:39:33;;;;;49:4:-1;25:18;;61:17;;-1:-1;;;;;182:15;378:39:33;179:29:-1;160:49;;349:69:33;;;;288:14;;:32;349:69;;;;25:18:-1;36:153;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;349:69:33;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;331:87:33;;;436:7;428:16;;;;;;-1:-1:-1;;682:7:24;:32;;-1:-1:-1;;;;;;682:32:24;;;-1:-1:-1;;;;;682:32:24;;;;;;;724:13;:47;;;;;;;;;;;;;;781:12;:44;;;;;;;;;;;;;;835:15;:53;;;;;;;;;;;;;898:8;:32;;;;;;;;;;;;;-1:-1:-1;130:8716:24;;;-1:-1:-1;130:8716:24;;",
  "deployedSourceMap": "130:8716:24:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1991:200:43;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1991:200:43;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1991:200:43;-1:-1:-1;;;;;1991:200:43;;:::i;:::-;;;;;;;;;;;;;;;;;;1085:339:33;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1085:339:33;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1085:339:33;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;1085:339:33;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1085:339:33;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1085:339:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;1085:339:33;;-1:-1:-1;1085:339:33;;-1:-1:-1;;;;;1085:339:33:i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1085:339:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1409:94:43;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1409:94:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1409:94:43;;;;;;;;;;;;;;;;;5499:98:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5499:98:24;;;:::i;:::-;;;;;;;;;;;;;;;;6614:116;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6614:116:24;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6614:116:24;-1:-1:-1;;;;;6614:116:24;;:::i;2497:139:3:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2497:139:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2497:139:3;-1:-1:-1;;;;;2497:139:3;;:::i;:::-;;1813:124:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1813:124:26;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1813:124:26;-1:-1:-1;;;;;1813:124:26;;:::i;1177:149:43:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1177:149:43;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1177:149:43;-1:-1:-1;;;;;1177:149:43;;:::i;2380:112:3:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2380:112:3;;;:::i;:::-;;;;-1:-1:-1;;;;;2380:112:3;;;;;;;;;;;;;;6111:187:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6111:187:24;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;6111:187:24;;;;;;;;;;;;;;;;;;;:::i;1837:426:33:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1837:426:33;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1837:426:33;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;1837:426:33;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1837:426:33;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1837:426:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;1837:426:33;;-1:-1:-1;1837:426:33;;-1:-1:-1;;;;;1837:426:33:i;1231:102:39:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1231:102:39;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1231:102:39;-1:-1:-1;;;;;1231:102:39;;:::i;7413:122:24:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7413:122:24;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7413:122:24;;;;;;;:::i;133:29:33:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;133:29:33;;;:::i;528:108:41:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;528:108:41;;;:::i;3888:117:24:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3888:117:24;;;;;;;;:::i;1599:137:49:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1599:137:49;;;:::i;1657:136:43:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1657:136:43;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1657:136:43;-1:-1:-1;;;;;1657:136:43;;:::i;816:77:49:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;816:77:49;;;:::i;1167:90::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1167:90:49;;;:::i;8004:246:24:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;8004:246:24;;-1:-1:-1;;;;;8004:246:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1005:118:48:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1005:118:48;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1005:118:48;-1:-1:-1;;;;;1005:118:48;;:::i;1329:155:46:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1329:155:46;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1329:155:46;;;;;;;:::i;641:129:41:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;641:129:41;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;641:129:41;-1:-1:-1;;;;;641:129:41;;:::i;4342:117:24:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4342:117:24;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4342:117:24;;;;;;-1:-1:-1;;;;;4342:117:24;;:::i;3111:160::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3111:160:24;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3111:160:24;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;3111:160:24;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3111:160:24;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;3111:160:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;3111:160:24;;;;;;;;-1:-1:-1;3111:160:24;;-1:-1:-1;;21:11;5:28;;2:2;;;46:1;43;36:12;2:2;3111:160:24;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3111:160:24;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;3111:160:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;3111:160:24;;-1:-1:-1;;3111:160:24;;;-1:-1:-1;3111:160:24;;-1:-1:-1;;3111:160:24:i;4745:127::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4745:127:24;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4745:127:24;-1:-1:-1;;;;;4745:127:24;;:::i;456:94:33:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;456:94:33;;;:::i;1385:152:48:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1385:152:48;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1385:152:48;-1:-1:-1;;;;;1385:152:48;;:::i;7226:108:24:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7226:108:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1130:96:39;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1130:96:39;;;:::i;2391:140:24:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2391:140:24;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2391:140:24;;;;;;;;;;:::i;2676:71::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2676:71:24;;;:::i;1035:113:46:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1035:113:46;;;:::i;1798:188:43:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1798:188:43;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1798:188:43;-1:-1:-1;;;;;1798:188:43;;:::i;1702:106:26:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1702:106:26;;;:::i;896:139:43:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;896:139:43;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;896:139:43;;;;;;;;:::i;555:236:33:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;555:236:33;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;555:236:33;-1:-1:-1;;;;;555:236:33;;:::i;1013:98:19:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1013:98:19;;;:::i;1764:108:48:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1764:108:48;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1764:108:48;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;1764:108:48;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1764:108:48;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;1764:108:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;1764:108:48;;-1:-1:-1;1764:108:48;;-1:-1:-1;;;;;1764:108:48:i;1116:112:19:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1116:112:19;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1116:112:19;-1:-1:-1;;;;;1116:112:19;;:::i;1198:120:48:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1198:120:48;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1198:120:48;;;;;;-1:-1:-1;;;;;1198:120:48;;:::i;721:170:43:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;721:170:43;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;721:170:43;-1:-1:-1;;;;;721:170:43;;:::i;1597:98:48:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1597:98:48;;;:::i;1885:107:49:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1885:107:49;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1885:107:49;-1:-1:-1;;;;;1885:107:49;;:::i;437:97:45:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;437:97:45;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;437:97:45;;;;:::i;1659:114:24:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1659:114:24;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;1991:200:43;2063:4;2085:29;2103:10;2085:17;:29::i;:::-;:99;;;;-1:-1:-1;;;;;;2120:29:43;;;;;;:17;:29;;;;;;393:6;2120:44;;;2119:64;2085:99;2078:106;1991:200;-1:-1:-1;;1991:200:43:o;1085:339:33:-;1220:14;;:33;;;;1154:12;;1179;;1154;;-1:-1:-1;;;;;1220:14:33;;;;1248:4;;1220:33;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1220:33:33;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;1178:75:33;;;;1301:1;1292:7;1289:14;1286:2;;;1352:14;1345:4;1333:10;1329:21;1322:45;1286:2;1407:10;1085:339;-1:-1:-1;;;1085:339:33:o;1409:94:43:-;1453:16;1487:9;1480:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1480:16:43;;;;;;;;;;;;;;;;;;;;;;;1409:94;;:::o;5499:98:24:-;5547:7;5565:25;:23;:25::i;:::-;;5499:98;:::o;6614:116::-;6681:6;6698:25;:23;:25::i;:::-;;6614:116;;;:::o;2497:139:3:-;1020:9:49;:7;:9::i;:::-;1012:54;;;;;-1:-1:-1;;;;;1012:54:49;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1012:54:49;;;;;;;;;;;;;;;2580:15:3;:49;;-1:-1:-1;;;;;;2580:49:3;-1:-1:-1;;;;;2580:49:3;;;;;;;;;;2497:139::o;1813:124:26:-;1020:9:49;:7;:9::i;:::-;1012:54;;;;;-1:-1:-1;;;;;1012:54:49;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1012:54:49;;;;;;;;;;;;;;;1890:12:26;:40;;-1:-1:-1;;;;;;1890:40:26;-1:-1:-1;;;;;1890:40:26;;;;;;;;;;1813:124::o;1177:149:43:-;1250:4;1020:9:49;:7;:9::i;:::-;1012:54;;;;;-1:-1:-1;;;;;1012:54:49;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1012:54:49;;;;;;;;;;;;;;;1272:47:43;:9;1305:13;1272:47;:32;:47;:::i;2380:112:3:-;2469:15;;-1:-1:-1;;;;;2469:15:3;2380:112;:::o;6111:187:24:-;6248:7;6266:25;:23;:25::i;:::-;;6111:187;;;;;;:::o;1837:426:33:-;1915:12;1940;1954:23;1989:4;-1:-1:-1;;;;;1981:24:33;2065:4;2006:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2006:64:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2006:64:33;;;-1:-1:-1;;26:21;;;22:32;6:49;;2006:64:33;;;49:4:-1;25:18;;61:17;;2006:64:33;182:15:-1;2006:64:33;179:29:-1;160:49;;1981:90:33;;;;2006:64;;-1:-1:-1;1981:90:33;-1:-1:-1;1981:90:33;;-1:-1:-1;25:18;1981:90:33;;25:18:-1;36:153;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1981:90:33;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;1939:132:33;;;;2119:1;2110:7;2107:14;2104:2;;;2170:14;2163:4;2151:10;2147:21;2140:45;2104:2;2236:10;2225:31;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2225:31:33;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;2225:31:33;;420:4:-1;411:14;;;;2225:31:33;;;;;411:14:-1;2225:31:33;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2225:31:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2218:38;;;;1837:426;;;:::o;1231:102:39:-;1020:9:49;:7;:9::i;:::-;1012:54;;;;;-1:-1:-1;;;;;1012:54:49;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1012:54:49;;;;;;;;;;;;;;;1298:7:39;:28;;-1:-1:-1;;;;;;1298:28:39;-1:-1:-1;;;;;1298:28:39;;;;;;;;;;1231:102::o;7413:122:24:-;7509:19;:17;:19::i;:::-;;7413:122;;:::o;133:29:33:-;;;-1:-1:-1;;;;;133:29:33;;:::o;528:108:41:-;615:13;;-1:-1:-1;;;;;615:13:41;528:108;:::o;1599:137:49:-;1020:9;:7;:9::i;:::-;1012:54;;;;;-1:-1:-1;;;;;1012:54:49;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1012:54:49;;;;;;;;;;;;;;;1697:1;1681:6;;1660:40;;1681:6;;;;-1:-1:-1;;;;;1681:6:49;;1660:40;;1697:1;;1660:40;1727:1;1710:19;;-1:-1:-1;;1710:19:49;;;1599:137::o;1657:136:43:-;1725:4;1747:39;1775:10;1747:9;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1747:27:43;;;;;;;;;;;;;;;;;;;;;;;:39;;;;:::i;816:77:49:-;854:7;880:6;;;;-1:-1:-1;;;;;880:6:49;;816:77::o;1167:90::-;1207:4;1244:6;;;;-1:-1:-1;;;;;1244:6:49;1230:10;:20;;1167:90::o;8004:246:24:-;8224:19;:17;:19::i;:::-;;8004:246;;;;;;;:::o;1005:118:48:-;1020:9:49;:7;:9::i;:::-;1012:54;;;;;-1:-1:-1;;;;;1012:54:49;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1012:54:49;;;;;;;;;;;;;;;1071:45:48;:13;1105:10;1071:45;:33;:45;:::i;:::-;1005:118;:::o;1329:155:46:-;1020:9:49;:7;:9::i;:::-;1012:54;;;;;-1:-1:-1;;;;;1012:54:49;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1012:54:49;;;;;;;;;;;;;;;1423:9:46;:22;;;;1455:9;:22;1329:155::o;641:129:41:-;1020:9:49;:7;:9::i;:::-;1012:54;;;;;-1:-1:-1;;;;;1012:54:49;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1012:54:49;;;;;;;;;;;;;;;720:13:41;:43;;-1:-1:-1;;;;;;720:43:41;-1:-1:-1;;;;;720:43:41;;;;;;;;;;641:129::o;3111:160:24:-;3245:19;:17;:19::i;:::-;;3111:160;;;:::o;4745:127::-;4813:16;4840:25;:23;:25::i;456:94:33:-;529:14;;-1:-1:-1;;;;;529:14:33;456:94;:::o;1385:152:48:-;1457:4;1020:9:49;:7;:9::i;:::-;1012:54;;;;;-1:-1:-1;;;;;1012:54:49;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1012:54:49;;;;;;;;;;;;;;;1479:51:48;:13;1516;1479:51;:36;:51;:::i;7226:108:24:-;7275:7;7283;7302:25;:23;:25::i;:::-;;7226:108;;:::o;1130:96:39:-;1211:7;;-1:-1:-1;;;;;1211:7:39;1130:96;:::o;2391:140:24:-;2481:7;2499:25;:23;:25::i;:::-;;2391:140;;;;:::o;2676:71::-;2721:19;:17;:19::i;1035:113:46:-;1121:9;;1131;;1035:113;;:::o;1798:188:43:-;1866:4;1888:29;1906:10;1888:17;:29::i;:::-;:91;;;;-1:-1:-1;;;;;;;1923:29:43;;;;;:17;:29;;;;;;338:6;1923:40;;;1922:56;;1798:188::o;1702:106:26:-;1788:12;;-1:-1:-1;;;;;1788:12:26;1702:106;:::o;896:139:43:-;1020:9:49;:7;:9::i;:::-;1012:54;;;;;-1:-1:-1;;;;;1012:54:49;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1012:54:49;;;;;;;;;;;;;;;-1:-1:-1;;;;;986:29:43;;;;;;;:17;:29;;;;;:42;896:139::o;555:236:33:-;1020:9:49;:7;:9::i;:::-;1012:54;;;;;-1:-1:-1;;;;;1012:54:49;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1012:54:49;;;;;;;;;;;;;;;632:14:33;:32;;-1:-1:-1;;;;;632:32:33;;-1:-1:-1;;;;;;632:32:33;;;;;;;;722:35;;;22:32:-1;6:49;;722:35:33;;;;;49:4:-1;25:18;;61:17;;722:35:33;182:15:-1;722:35:33;179:29:-1;160:49;;693:65:33;;;;632:14;;:32;693:65;;;;25:18:-1;36:153;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;693:65:33;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;675:83:33;;;776:7;768:16;;;;;;1076:1:49;555:236:33;:::o;1013:98:19:-;1095:8;;-1:-1:-1;;;;;1095:8:19;1013:98;:::o;1764:108:48:-;1020:9:49;:7;:9::i;:::-;1012:54;;;;;-1:-1:-1;;;;;1012:54:49;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1012:54:49;;;;;;;;;;;;;;;1840:25:48;;;;:13;;:25;;;;;:::i;1116:112:19:-;1020:9:49;:7;:9::i;:::-;1012:54;;;;;-1:-1:-1;;;;;1012:54:49;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1012:54:49;;;;;;;;;;;;;;;1189:8:19;:32;;-1:-1:-1;;;;;;1189:32:19;-1:-1:-1;;;;;1189:32:19;;;;;;;;;;1116:112::o;1198:120:48:-;1020:9:49;:7;:9::i;:::-;1012:54;;;;;-1:-1:-1;;;;;1012:54:49;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1012:54:49;;;;;;;;;;;;;;;1301:10:48;1278:13;1292:5;1278:20;;;;;;;;;;;;;;;;:33;;;;;-1:-1:-1;;;;;1278:33:48;;;;;-1:-1:-1;;;;;1278:33:48;;;;;;1198:120;;:::o;721:170:43:-;1020:9:49;:7;:9::i;:::-;1012:54;;;;;-1:-1:-1;;;;;1012:54:49;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1012:54:49;;;;;;;;;;;;;;;788:41:43;:9;818:10;788:41;:29;:41;:::i;:::-;-1:-1:-1;;;;;839:29:43;;;;;:17;:29;;;;;283:10;839:45;;721:170::o;1597:98:48:-;1640:16;1675:13;1668:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1668:20:48;;;;;;;;;;;;;;;;;;;;;;1597:98;:::o;1885:107:49:-;1020:9;:7;:9::i;:::-;1012:54;;;;;-1:-1:-1;;;;;1012:54:49;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1012:54:49;;;;;;;;;;;;;;;1957:28;1976:8;1957:18;:28::i;437:97:45:-;1020:9:49;:7;:9::i;:::-;1012:54;;;;;-1:-1:-1;;;;;1012:54:49;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1012:54:49;;;;;;;;;;;;;;;514:6:45;:13;;-1:-1:-1;;514:13:45;;;;;;;;;;437:97::o;2269:496:33:-;2327:12;2352;2378:4;-1:-1:-1;;;;;2370:24:33;2454:8;;2395:68;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;;74:27;2395:68:33;;;137:4:-1;117:14;;;-1:-1;;113:30;;;157:16;;;26:21;;;22:32;;;6:49;;2395:68:33;;;49:4:-1;25:18;;61:17;;2395:68:33;182:15:-1;2395:68:33;179:29:-1;160:49;;2370:94:33;;;;2395:68;;-1:-1:-1;2370:94:33;-1:-1:-1;2370:94:33;;-1:-1:-1;25:18;;-1:-1;2370:94:33;;-1:-1:-1;2370:94:33;25:18:-1;36:153;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2370:94:33;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;2351:113:33;;;2524:4;2518:11;2574:14;2571:1;2557:12;2542:47;2610:7;2630:47;;;;2732:14;2725:4;2711:12;2707:23;2700:47;2630;2660:14;2646:12;2639:36;3252:462:56;3373:16;;3343:4;;;3420:88;3428:3;3426:1;:5;3420:88;;;3470:4;-1:-1:-1;;;;;3454:20:56;:9;3464:1;3454:12;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3454:12:56;:20;3450:47;;;3492:5;;3450:47;3432:3;;3420:88;;;3523:3;3521:1;:5;3517:169;;;3552:1;3548:3;:5;3545:1;:8;3541:78;;3588:9;3602:1;3598:3;:5;3588:16;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3588:16:56;3573:9;3583:1;3573:12;;;;;;;;;;;;;;;;:31;;;;;-1:-1:-1;;;;;3573:31:56;;;;;-1:-1:-1;;;;;3573:31:56;;;;;;3541:78;3632:18;;;:9;-1:-1:-1;;3632:18:56;;;:::i;:::-;;3671:4;3664:11;;;;;;3517:169;-1:-1:-1;3702:5:56;;3252:462;-1:-1:-1;;;;3252:462:56:o;2771:417:33:-;2861:14;;:37;;2818:12;;2843;;-1:-1:-1;;;;;2861:14:33;;;;2843:12;;2889:8;;2861:37;2843:12;2889:8;;2843:12;2861:37;1:33:-1;2861:37:33;;45:16:-1;;;-1:-1;2861:37:33;;-1:-1:-1;2861:37:33;;-1:-1:-1;;2861:37:33;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;2842:56:33;;;2958:4;2952:11;3008:14;3005:1;2991:12;2976:47;3044:7;3064:47;;;;3155:14;3141:12;3134:36;3719:279:56;3839:16;;3810:4;;;3865:105;3884:3;3882:1;:5;3865:105;;;3926:4;-1:-1:-1;;;;;3910:20:56;:9;3920:1;3910:12;;;;;;;;;;;;;;-1:-1:-1;;;;;3910:20:56;;3906:53;;;3955:4;3948:11;;;;;;3906:53;3888:3;;3865:105;;3068:179;3162:33;3180:9;3162:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3162:33:56;;;;;;;;;;;;;;;;;;;;;3190:4;3162:17;:33::i;:::-;3157:84;;27:10:-1;;39:1;23:18;;45:23;;-1:-1;3210:20:56;;;;;;;;;-1:-1:-1;;;;;3210:20:56;;-1:-1:-1;;;;;;3210:20:56;;;;;;3068:179;;:::o;2093:225:49:-;-1:-1:-1;;;;;2166:22:49;;2158:73;;;;-1:-1:-1;;;;;2158:73:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2267:6;;;2246:38;;-1:-1:-1;;;;;2246:38:49;;;;2267:6;;;;;;2246:38;;;2294:6;:17;;-1:-1:-1;;;;;2294:17:49;;;;;-1:-1:-1;;2294:17:49;;;;;;;;;2093:225::o;130:8716:24:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;130:8716:24;-1:-1:-1;;;;;130:8716:24;;;;;;;;;;;-1:-1:-1;130:8716:24;;;;;;;-1:-1:-1;130:8716:24;;;-1:-1:-1;130:8716:24;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;;130:8716:24;;;;;;;;;;;;;;;;;;;;;;;;",
  "source": "pragma solidity =0.5.16;\nimport \"./ManagerData.sol\";\nimport \"../Proxy/baseProxy.sol\";\n/**\n * @title  Erc20Delegator Contract\n\n */\ncontract ManagerProxy is ManagerData,baseProxy{\n    /**\n    * @dev Options manager constructor. set other contract address\n    *  oracleAddr fnx oracle contract address.\n    *  optionsPriceAddr options price contract address\n    *  optionsPoolAddr optoins pool contract address\n    *  FPTCoinAddr FPTCoin contract address\n    */\n    constructor(address implementation_,address oracleAddr,address optionsPriceAddr,\n            address optionsPoolAddr,address collateralPoolAddr,address FPTCoinAddr)\n         baseProxy(implementation_) public  {\n        _oracle = IFNXOracle(oracleAddr);\n        _optionsPrice = IOptionsPrice(optionsPriceAddr);\n        _optionsPool = IOptionsPool(optionsPoolAddr);\n        _collateralPool = ICollateralPool(collateralPoolAddr);\n        _FPTCoin = IFPTCoin(FPTCoinAddr);\n    }\n    /**\n     * @dev  The foundation operator want to add some coin to netbalance, which can increase the FPTCoin net worth.\n     *  settlement the settlement coin address which the foundation operator want to transfer in this contract address.\n     *  amount the amount of the settlement coin which the foundation operator want to transfer in this contract address.\n     */\n    function addNetBalance(address /*settlement*/,uint256 /*amount*/) public payable  {\n        delegateAndReturn();\n    }\n    /**\n     * @dev  The foundation owner want to set the minimum collateral occupation rate.\n     *  collateral collateral coin address\n     *  colRate The thousandths of the minimum collateral occupation rate.\n     */\n    function setCollateralRate(address /*collateral*/,uint256 /*colRate*/) public {\n        delegateAndReturn();\n    }\n    /**\n     * @dev Get the minimum collateral occupation rate.\n     */\n    function getCollateralRate(address /*collateral*/)public view returns (uint256) {\n        delegateToViewAndReturn();\n    }\n    /**\n     * @dev Retrieve user's cost of collateral, priced in USD.\n     *  user input retrieved account \n     */\n    function getUserPayingUsd(address /*user*/)public view returns (uint256){\n        delegateToViewAndReturn();\n    }\n    /**\n     * @dev Retrieve user's amount of the specified collateral.\n     *  user input retrieved account \n     *  collateral input retrieved collateral coin address \n     */\n    function userInputCollateral(address /*user*/,address /*collateral*/)public view returns (uint256){\n        delegateToViewAndReturn();\n    }\n    /**\n     * @dev Calculate the collateral pool shared worth.\n     * The foundation operator will invoke this function frequently\n     */\n    function calSharedPayment() public {\n        delegateAndReturn();\n    }\n    /**\n     * @dev Set the calculation results of the collateral pool shared worth.\n     * The foundation operator will invoke this function frequently\n     *  newNetworth Current expired options' net worth \n     *  sharedBalances All unexpired options' shared balance distributed by time.\n     *  firstOption The new first unexpired option's index.\n     */\n    function setSharedPayment(int256[] memory /*newNetworth*/,int256[] memory /*sharedBalances*/,uint256 /*firstOption*/) public{\n        delegateAndReturn();\n    }\n    /**\n     * @dev Retrieve user's current total worth, priced in USD.\n     *  account input retrieve account\n     */\n    function getUserTotalWorth(address /*account*/)public view returns (uint256){\n        delegateToViewAndReturn();\n    }\n    /**\n     * @dev Retrieve FPTCoin's net worth, priced in USD.\n     */\n    function getTokenNetworth() public view returns (uint256){\n        delegateToViewAndReturn();\n    }\n    /**\n     * @dev Deposit collateral in this pool from user.\n     *  collateral The collateral coin address which is in whitelist.\n     *  amount the amount of collateral to deposit.\n     */\n    function addCollateral(address /*collateral*/,uint256 /*amount*/) public payable {\n        delegateAndReturn();\n    }\n    /**\n     * @dev redeem collateral from this pool, user can input the prioritized collateral,he will get this coin,\n     * if this coin is unsufficient, he will get others collateral which in whitelist.\n     *  tokenAmount the amount of FPTCoin want to redeem.\n     *  collateral The prioritized collateral coin address.\n     */\n    function redeemCollateral(uint256 /*tokenAmount*/,address /*collateral*/) public {\n        delegateAndReturn();\n    }\n    /**\n     * @dev Retrieve user's collateral worth in all collateral coin. \n     * If user want to redeem all his collateral,and the vacant collateral is sufficient,\n     * He can redeem each collateral amount in return list.\n     *  account the retrieve user's account;\n     */\n    function calCollateralWorth(address /*account*/)public view returns(uint256[] memory){\n        delegateToViewAndReturn();\n    }\n    /**\n     * @dev Retrieve the occupied collateral worth, multiplied by minimum collateral rate, priced in USD. \n     */\n    function getOccupiedCollateral() public view returns(uint256){\n        delegateToViewAndReturn();\n    }\n    /**\n     * @dev Retrieve the available collateral worth, the worth of collateral which can used for buy options, priced in USD. \n     */\n    function getAvailableCollateral()public view returns(uint256){\n        delegateToViewAndReturn();\n    }\n    /**\n     * @dev Retrieve the left collateral worth, the worth of collateral which can used for redeem collateral, priced in USD. \n     */\n    function getLeftCollateral()public view returns(uint256){\n        delegateToViewAndReturn();\n    }\n    /**\n     * @dev Retrieve the unlocked collateral worth, the worth of collateral which currently used for options, priced in USD. \n     */\n    function getUnlockedCollateral()public view returns(uint256){\n        delegateToViewAndReturn();\n    }\n    /**\n     * @dev The auxiliary function for calculate option occupied. \n     *  strikePrice option's strike price\n     *  underlyingPrice option's underlying price\n     *  amount option's amount\n     *  optType option's type, 0 for call, 1 for put.\n     */\n    function calOptionsOccupied(uint256 /*strikePrice*/,uint256 /*underlyingPrice*/,uint256 /*amount*/,uint8 /*optType*/)public view returns(uint256){\n        delegateToViewAndReturn();\n    }\n    /**\n     * @dev Retrieve the total collateral worth, priced in USD. \n     */\n    function getTotalCollateral()public view returns(uint256){\n        delegateToViewAndReturn();\n    }\n    /**\n     * @dev Retrieve the balance of collateral, the auxiliary function for the total collateral calculation. \n     */\n    function getRealBalance(address /*settlement*/)public view returns(int256){\n        delegateToViewAndReturn();\n    }\n    function getNetWorthBalance(address /*settlement*/)public view returns(uint256){\n        delegateToViewAndReturn();\n    }\n    /**\n     * @dev collateral occupation rate calculation\n     *      collateral occupation rate = sum(collateral Rate * collateral balance) / sum(collateral balance)\n     */\n    function calculateCollateralRate()public view returns (uint256){\n        delegateToViewAndReturn();\n    }\n    /**\n    * @dev retrieve input price valid range rate, thousandths.\n    */ \n    function getPriceRateRange() public view returns(uint256,uint256) {\n        delegateToViewAndReturn();\n    }\n    /**\n    * @dev set input price valid range rate, thousandths.\n    */ \n    function setPriceRateRange(uint256 /*_minPriceRate*/,uint256 /*_maxPriceRate*/) public{\n        delegateAndReturn();\n    }\n    /**\n    * @dev user buy option and create new option.\n    *  settlement user's settement coin address\n    *  settlementAmount amount of settlement user want fo pay.\n    *  strikePrice user input option's strike price\n    *  underlying user input option's underlying id, 1 for BTC,2 for ETH\n    *  expiration user input expiration,time limit from now\n    *  amount user input amount of new option user want to buy.\n    *  optType user input option type\n    */ \n    function buyOption(address /*settlement*/,uint256 /*settlementAmount*/, uint256 /*strikePrice*/,uint32 /*underlying*/,\n                uint256 /*expiration*/,uint256 /*amount*/,uint8 /*optType*/) public payable{\n        delegateAndReturn();\n    }\n    /**\n    * @dev User sell option.\n    *  optionsId option's ID which was wanted to sell, must owned by user\n    *  amount user input amount of option user want to sell.\n    */ \n    function sellOption(uint256 /*optionsId*/,uint256 /*amount*/) public{\n        delegateAndReturn();\n    }\n    /**\n    * @dev User exercise option.\n    *  optionsId option's ID which was wanted to exercise, must owned by user\n    *  amount user input amount of option user want to exercise.\n    */ \n    function exerciseOption(uint256 /*optionsId*/,uint256 /*amount*/) public{\n        delegateAndReturn();\n    }\n}\n",
  "sourcePath": "/home/jqg/FinnexusOptions_V2/contracts/OptionsManager/ManagerProxy.sol",
  "ast": {
    "absolutePath": "/home/jqg/FinnexusOptions_V2/contracts/OptionsManager/ManagerProxy.sol",
    "exportedSymbols": {
      "ManagerProxy": [
        8060
      ]
    },
    "id": 8061,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7713,
        "literals": [
          "solidity",
          "=",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:24"
      },
      {
        "absolutePath": "/home/jqg/FinnexusOptions_V2/contracts/OptionsManager/ManagerData.sol",
        "file": "./ManagerData.sol",
        "id": 7714,
        "nodeType": "ImportDirective",
        "scope": 8061,
        "sourceUnit": 7712,
        "src": "25:27:24",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/jqg/FinnexusOptions_V2/contracts/Proxy/baseProxy.sol",
        "file": "../Proxy/baseProxy.sol",
        "id": 7715,
        "nodeType": "ImportDirective",
        "scope": 8061,
        "sourceUnit": 12219,
        "src": "53:32:24",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7716,
              "name": "ManagerData",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7711,
              "src": "155:11:24",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ManagerData_$7711",
                "typeString": "contract ManagerData"
              }
            },
            "id": 7717,
            "nodeType": "InheritanceSpecifier",
            "src": "155:11:24"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7718,
              "name": "baseProxy",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 12218,
              "src": "167:9:24",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_baseProxy_$12218",
                "typeString": "contract baseProxy"
              }
            },
            "id": 7719,
            "nodeType": "InheritanceSpecifier",
            "src": "167:9:24"
          }
        ],
        "contractDependencies": [
          1622,
          5724,
          7711,
          8779,
          12218,
          14692,
          14797,
          15013,
          16571,
          16673,
          16828,
          16939,
          16962
        ],
        "contractKind": "contract",
        "documentation": "@title  Erc20Delegator Contract",
        "fullyImplemented": true,
        "id": 8060,
        "linearizedBaseContracts": [
          8060,
          12218,
          7711,
          14797,
          16828,
          1622,
          8779,
          14692,
          5724,
          15013,
          16571,
          16673,
          16939,
          16962
        ],
        "name": "ManagerProxy",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 7767,
              "nodeType": "Block",
              "src": "672:265:24",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7741,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7737,
                      "name": "_oracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14613,
                      "src": "682:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IFNXOracle_$14609",
                        "typeString": "contract IFNXOracle"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 7739,
                          "name": "oracleAddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7723,
                          "src": "703:10:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 7738,
                        "name": "IFNXOracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14609,
                        "src": "692:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IFNXOracle_$14609_$",
                          "typeString": "type(contract IFNXOracle)"
                        }
                      },
                      "id": 7740,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "692:22:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IFNXOracle_$14609",
                        "typeString": "contract IFNXOracle"
                      }
                    },
                    "src": "682:32:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IFNXOracle_$14609",
                      "typeString": "contract IFNXOracle"
                    }
                  },
                  "id": 7742,
                  "nodeType": "ExpressionStatement",
                  "src": "682:32:24"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7743,
                      "name": "_optionsPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14772,
                      "src": "724:13:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IOptionsPrice_$14768",
                        "typeString": "contract IOptionsPrice"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 7745,
                          "name": "optionsPriceAddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7725,
                          "src": "754:16:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 7744,
                        "name": "IOptionsPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14768,
                        "src": "740:13:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IOptionsPrice_$14768_$",
                          "typeString": "type(contract IOptionsPrice)"
                        }
                      },
                      "id": 7746,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "740:31:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IOptionsPrice_$14768",
                        "typeString": "contract IOptionsPrice"
                      }
                    },
                    "src": "724:47:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IOptionsPrice_$14768",
                      "typeString": "contract IOptionsPrice"
                    }
                  },
                  "id": 7748,
                  "nodeType": "ExpressionStatement",
                  "src": "724:47:24"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7749,
                      "name": "_optionsPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8754,
                      "src": "781:12:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IOptionsPool_$8750",
                        "typeString": "contract IOptionsPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 7751,
                          "name": "optionsPoolAddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7727,
                          "src": "809:15:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 7750,
                        "name": "IOptionsPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8750,
                        "src": "796:12:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IOptionsPool_$8750_$",
                          "typeString": "type(contract IOptionsPool)"
                        }
                      },
                      "id": 7752,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "796:29:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IOptionsPool_$8750",
                        "typeString": "contract IOptionsPool"
                      }
                    },
                    "src": "781:44:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IOptionsPool_$8750",
                      "typeString": "contract IOptionsPool"
                    }
                  },
                  "id": 7754,
                  "nodeType": "ExpressionStatement",
                  "src": "781:44:24"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7755,
                      "name": "_collateralPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1597,
                      "src": "835:15:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICollateralPool_$1593",
                        "typeString": "contract ICollateralPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 7757,
                          "name": "collateralPoolAddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7729,
                          "src": "869:18:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 7756,
                        "name": "ICollateralPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1593,
                        "src": "853:15:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ICollateralPool_$1593_$",
                          "typeString": "type(contract ICollateralPool)"
                        }
                      },
                      "id": 7758,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "853:35:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICollateralPool_$1593",
                        "typeString": "contract ICollateralPool"
                      }
                    },
                    "src": "835:53:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICollateralPool_$1593",
                      "typeString": "contract ICollateralPool"
                    }
                  },
                  "id": 7760,
                  "nodeType": "ExpressionStatement",
                  "src": "835:53:24"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7761,
                      "name": "_FPTCoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5699,
                      "src": "898:8:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IFPTCoin_$5695",
                        "typeString": "contract IFPTCoin"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 7763,
                          "name": "FPTCoinAddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7731,
                          "src": "918:11:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 7762,
                        "name": "IFPTCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5695,
                        "src": "909:8:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IFPTCoin_$5695_$",
                          "typeString": "type(contract IFPTCoin)"
                        }
                      },
                      "id": 7764,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "909:21:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IFPTCoin_$5695",
                        "typeString": "contract IFPTCoin"
                      }
                    },
                    "src": "898:32:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IFPTCoin_$5695",
                      "typeString": "contract IFPTCoin"
                    }
                  },
                  "id": 7766,
                  "nodeType": "ExpressionStatement",
                  "src": "898:32:24"
                }
              ]
            },
            "documentation": "@dev Options manager constructor. set other contract address\n oracleAddr fnx oracle contract address.\n optionsPriceAddr options price contract address\n optionsPoolAddr optoins pool contract address\n FPTCoinAddr FPTCoin contract address",
            "id": 7768,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 7734,
                    "name": "implementation_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7721,
                    "src": "647:15:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 7735,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7733,
                  "name": "baseProxy",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 12218,
                  "src": "637:9:24",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_baseProxy_$12218_$",
                    "typeString": "type(contract baseProxy)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "637:26:24"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7732,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7721,
                  "name": "implementation_",
                  "nodeType": "VariableDeclaration",
                  "scope": 7768,
                  "src": "475:23:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7720,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "475:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7723,
                  "name": "oracleAddr",
                  "nodeType": "VariableDeclaration",
                  "scope": 7768,
                  "src": "499:18:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7722,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "499:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7725,
                  "name": "optionsPriceAddr",
                  "nodeType": "VariableDeclaration",
                  "scope": 7768,
                  "src": "518:24:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7724,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "518:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7727,
                  "name": "optionsPoolAddr",
                  "nodeType": "VariableDeclaration",
                  "scope": 7768,
                  "src": "556:23:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7726,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "556:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7729,
                  "name": "collateralPoolAddr",
                  "nodeType": "VariableDeclaration",
                  "scope": 7768,
                  "src": "580:26:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7728,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "580:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7731,
                  "name": "FPTCoinAddr",
                  "nodeType": "VariableDeclaration",
                  "scope": 7768,
                  "src": "607:19:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7730,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "607:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "474:153:24"
            },
            "returnParameters": {
              "id": 7736,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "672:0:24"
            },
            "scope": 8060,
            "src": "463:474:24",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7778,
              "nodeType": "Block",
              "src": "1398:36:24",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7775,
                      "name": "delegateAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12217,
                      "src": "1408:17:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () returns (bytes memory)"
                      }
                    },
                    "id": 7776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1408:19:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7777,
                  "nodeType": "ExpressionStatement",
                  "src": "1408:19:24"
                }
              ]
            },
            "documentation": "@dev  The foundation operator want to add some coin to netbalance, which can increase the FPTCoin net worth.\n settlement the settlement coin address which the foundation operator want to transfer in this contract address.\n amount the amount of the settlement coin which the foundation operator want to transfer in this contract address.",
            "id": 7779,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addNetBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7773,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7770,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7779,
                  "src": "1339:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7769,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1339:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7772,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7779,
                  "src": "1362:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7771,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1362:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1338:43:24"
            },
            "returnParameters": {
              "id": 7774,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1398:0:24"
            },
            "scope": 8060,
            "src": "1316:118:24",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7789,
              "nodeType": "Block",
              "src": "1737:36:24",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7786,
                      "name": "delegateAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12217,
                      "src": "1747:17:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () returns (bytes memory)"
                      }
                    },
                    "id": 7787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1747:19:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7788,
                  "nodeType": "ExpressionStatement",
                  "src": "1747:19:24"
                }
              ]
            },
            "documentation": "@dev  The foundation owner want to set the minimum collateral occupation rate.\n collateral collateral coin address\n colRate The thousandths of the minimum collateral occupation rate.",
            "id": 7790,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setCollateralRate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7784,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7781,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7790,
                  "src": "1686:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7780,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1686:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7783,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7790,
                  "src": "1709:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7782,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1709:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1685:44:24"
            },
            "returnParameters": {
              "id": 7785,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1737:0:24"
            },
            "scope": 8060,
            "src": "1659:114:24",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7800,
              "nodeType": "Block",
              "src": "1930:42:24",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7797,
                      "name": "delegateToViewAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12202,
                      "src": "1940:23:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () view returns (bytes memory)"
                      }
                    },
                    "id": 7798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1940:25:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7799,
                  "nodeType": "ExpressionStatement",
                  "src": "1940:25:24"
                }
              ]
            },
            "documentation": "@dev Get the minimum collateral occupation rate.",
            "id": 7801,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCollateralRate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7793,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7792,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7801,
                  "src": "1877:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7791,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1877:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1876:24:24"
            },
            "returnParameters": {
              "id": 7796,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7795,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7801,
                  "src": "1921:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7794,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1921:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1920:9:24"
            },
            "scope": 8060,
            "src": "1850:122:24",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7811,
              "nodeType": "Block",
              "src": "2166:42:24",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7808,
                      "name": "delegateToViewAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12202,
                      "src": "2176:23:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () view returns (bytes memory)"
                      }
                    },
                    "id": 7809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2176:25:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7810,
                  "nodeType": "ExpressionStatement",
                  "src": "2176:25:24"
                }
              ]
            },
            "documentation": "@dev Retrieve user's cost of collateral, priced in USD.\n user input retrieved account ",
            "id": 7812,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserPayingUsd",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7804,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7803,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7812,
                  "src": "2120:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7802,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2120:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2119:18:24"
            },
            "returnParameters": {
              "id": 7807,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7806,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7812,
                  "src": "2158:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7805,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2158:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2157:9:24"
            },
            "scope": 8060,
            "src": "2094:114:24",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7824,
              "nodeType": "Block",
              "src": "2489:42:24",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7821,
                      "name": "delegateToViewAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12202,
                      "src": "2499:23:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () view returns (bytes memory)"
                      }
                    },
                    "id": 7822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2499:25:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7823,
                  "nodeType": "ExpressionStatement",
                  "src": "2499:25:24"
                }
              ]
            },
            "documentation": "@dev Retrieve user's amount of the specified collateral.\n user input retrieved account \n collateral input retrieved collateral coin address ",
            "id": 7825,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "userInputCollateral",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7817,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7814,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7825,
                  "src": "2420:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7813,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2420:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7816,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7825,
                  "src": "2437:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7815,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2437:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2419:41:24"
            },
            "returnParameters": {
              "id": 7820,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7819,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7825,
                  "src": "2481:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7818,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2481:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2480:9:24"
            },
            "scope": 8060,
            "src": "2391:140:24",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7831,
              "nodeType": "Block",
              "src": "2711:36:24",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7828,
                      "name": "delegateAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12217,
                      "src": "2721:17:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () returns (bytes memory)"
                      }
                    },
                    "id": 7829,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2721:19:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7830,
                  "nodeType": "ExpressionStatement",
                  "src": "2721:19:24"
                }
              ]
            },
            "documentation": "@dev Calculate the collateral pool shared worth.\nThe foundation operator will invoke this function frequently",
            "id": 7832,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calSharedPayment",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7826,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2701:2:24"
            },
            "returnParameters": {
              "id": 7827,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2711:0:24"
            },
            "scope": 8060,
            "src": "2676:71:24",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7846,
              "nodeType": "Block",
              "src": "3235:36:24",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7843,
                      "name": "delegateAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12217,
                      "src": "3245:17:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () returns (bytes memory)"
                      }
                    },
                    "id": 7844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3245:19:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7845,
                  "nodeType": "ExpressionStatement",
                  "src": "3245:19:24"
                }
              ]
            },
            "documentation": "@dev Set the calculation results of the collateral pool shared worth.\nThe foundation operator will invoke this function frequently\n newNetworth Current expired options' net worth \n sharedBalances All unexpired options' shared balance distributed by time.\n firstOption The new first unexpired option's index.",
            "id": 7847,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setSharedPayment",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7841,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7835,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7847,
                  "src": "3137:15:24",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                    "typeString": "int256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7833,
                      "name": "int256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3137:6:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "id": 7834,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3137:8:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_int256_$dyn_storage_ptr",
                      "typeString": "int256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7838,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7847,
                  "src": "3169:15:24",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                    "typeString": "int256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7836,
                      "name": "int256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3169:6:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "id": 7837,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3169:8:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_int256_$dyn_storage_ptr",
                      "typeString": "int256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7840,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7847,
                  "src": "3204:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7839,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3204:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3136:92:24"
            },
            "returnParameters": {
              "id": 7842,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3235:0:24"
            },
            "scope": 8060,
            "src": "3111:160:24",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7857,
              "nodeType": "Block",
              "src": "3471:42:24",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7854,
                      "name": "delegateToViewAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12202,
                      "src": "3481:23:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () view returns (bytes memory)"
                      }
                    },
                    "id": 7855,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3481:25:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7856,
                  "nodeType": "ExpressionStatement",
                  "src": "3481:25:24"
                }
              ]
            },
            "documentation": "@dev Retrieve user's current total worth, priced in USD.\n account input retrieve account",
            "id": 7858,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserTotalWorth",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7850,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7849,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7858,
                  "src": "3422:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7848,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3422:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3421:21:24"
            },
            "returnParameters": {
              "id": 7853,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7852,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7858,
                  "src": "3463:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7851,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3463:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3462:9:24"
            },
            "scope": 8060,
            "src": "3395:118:24",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7866,
              "nodeType": "Block",
              "src": "3648:42:24",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7863,
                      "name": "delegateToViewAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12202,
                      "src": "3658:23:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () view returns (bytes memory)"
                      }
                    },
                    "id": 7864,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3658:25:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7865,
                  "nodeType": "ExpressionStatement",
                  "src": "3658:25:24"
                }
              ]
            },
            "documentation": "@dev Retrieve FPTCoin's net worth, priced in USD.",
            "id": 7867,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenNetworth",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7859,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3616:2:24"
            },
            "returnParameters": {
              "id": 7862,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7861,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7867,
                  "src": "3640:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7860,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3640:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3639:9:24"
            },
            "scope": 8060,
            "src": "3591:99:24",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7877,
              "nodeType": "Block",
              "src": "3969:36:24",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7874,
                      "name": "delegateAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12217,
                      "src": "3979:17:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () returns (bytes memory)"
                      }
                    },
                    "id": 7875,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3979:19:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7876,
                  "nodeType": "ExpressionStatement",
                  "src": "3979:19:24"
                }
              ]
            },
            "documentation": "@dev Deposit collateral in this pool from user.\n collateral The collateral coin address which is in whitelist.\n amount the amount of collateral to deposit.",
            "id": 7878,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addCollateral",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7872,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7869,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7878,
                  "src": "3911:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7868,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3911:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7871,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7878,
                  "src": "3934:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7870,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3934:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3910:43:24"
            },
            "returnParameters": {
              "id": 7873,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3969:0:24"
            },
            "scope": 8060,
            "src": "3888:117:24",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7888,
              "nodeType": "Block",
              "src": "4423:36:24",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7885,
                      "name": "delegateAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12217,
                      "src": "4433:17:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () returns (bytes memory)"
                      }
                    },
                    "id": 7886,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4433:19:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7887,
                  "nodeType": "ExpressionStatement",
                  "src": "4433:19:24"
                }
              ]
            },
            "documentation": "@dev redeem collateral from this pool, user can input the prioritized collateral,he will get this coin,\nif this coin is unsufficient, he will get others collateral which in whitelist.\n tokenAmount the amount of FPTCoin want to redeem.\n collateral The prioritized collateral coin address.",
            "id": 7889,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redeemCollateral",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7883,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7880,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7889,
                  "src": "4368:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7879,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4368:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7882,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7889,
                  "src": "4392:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7881,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4392:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4367:48:24"
            },
            "returnParameters": {
              "id": 7884,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4423:0:24"
            },
            "scope": 8060,
            "src": "4342:117:24",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7900,
              "nodeType": "Block",
              "src": "4830:42:24",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7897,
                      "name": "delegateToViewAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12202,
                      "src": "4840:23:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () view returns (bytes memory)"
                      }
                    },
                    "id": 7898,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4840:25:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7899,
                  "nodeType": "ExpressionStatement",
                  "src": "4840:25:24"
                }
              ]
            },
            "documentation": "@dev Retrieve user's collateral worth in all collateral coin. \nIf user want to redeem all his collateral,and the vacant collateral is sufficient,\nHe can redeem each collateral amount in return list.\n account the retrieve user's account;",
            "id": 7901,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calCollateralWorth",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7892,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7891,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7901,
                  "src": "4773:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7890,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4773:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4772:21:24"
            },
            "returnParameters": {
              "id": 7896,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7895,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7901,
                  "src": "4813:16:24",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7893,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4813:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7894,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "4813:9:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4812:18:24"
            },
            "scope": 8060,
            "src": "4745:127:24",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7909,
              "nodeType": "Block",
              "src": "5061:42:24",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7906,
                      "name": "delegateToViewAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12202,
                      "src": "5071:23:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () view returns (bytes memory)"
                      }
                    },
                    "id": 7907,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5071:25:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7908,
                  "nodeType": "ExpressionStatement",
                  "src": "5071:25:24"
                }
              ]
            },
            "documentation": "@dev Retrieve the occupied collateral worth, multiplied by minimum collateral rate, priced in USD. ",
            "id": 7910,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOccupiedCollateral",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7902,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5030:2:24"
            },
            "returnParameters": {
              "id": 7905,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7904,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7910,
                  "src": "5053:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7903,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5053:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5052:9:24"
            },
            "scope": 8060,
            "src": "5000:103:24",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7918,
              "nodeType": "Block",
              "src": "5310:42:24",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7915,
                      "name": "delegateToViewAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12202,
                      "src": "5320:23:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () view returns (bytes memory)"
                      }
                    },
                    "id": 7916,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5320:25:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7917,
                  "nodeType": "ExpressionStatement",
                  "src": "5320:25:24"
                }
              ]
            },
            "documentation": "@dev Retrieve the available collateral worth, the worth of collateral which can used for buy options, priced in USD. ",
            "id": 7919,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAvailableCollateral",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7911,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5280:2:24"
            },
            "returnParameters": {
              "id": 7914,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7913,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7919,
                  "src": "5302:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7912,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5302:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5301:9:24"
            },
            "scope": 8060,
            "src": "5249:103:24",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7927,
              "nodeType": "Block",
              "src": "5555:42:24",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7924,
                      "name": "delegateToViewAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12202,
                      "src": "5565:23:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () view returns (bytes memory)"
                      }
                    },
                    "id": 7925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5565:25:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7926,
                  "nodeType": "ExpressionStatement",
                  "src": "5565:25:24"
                }
              ]
            },
            "documentation": "@dev Retrieve the left collateral worth, the worth of collateral which can used for redeem collateral, priced in USD. ",
            "id": 7928,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLeftCollateral",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7920,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5525:2:24"
            },
            "returnParameters": {
              "id": 7923,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7922,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7928,
                  "src": "5547:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7921,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5547:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5546:9:24"
            },
            "scope": 8060,
            "src": "5499:98:24",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7936,
              "nodeType": "Block",
              "src": "5804:42:24",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7933,
                      "name": "delegateToViewAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12202,
                      "src": "5814:23:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () view returns (bytes memory)"
                      }
                    },
                    "id": 7934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5814:25:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7935,
                  "nodeType": "ExpressionStatement",
                  "src": "5814:25:24"
                }
              ]
            },
            "documentation": "@dev Retrieve the unlocked collateral worth, the worth of collateral which currently used for options, priced in USD. ",
            "id": 7937,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUnlockedCollateral",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7929,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5774:2:24"
            },
            "returnParameters": {
              "id": 7932,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7931,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7937,
                  "src": "5796:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7930,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5796:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5795:9:24"
            },
            "scope": 8060,
            "src": "5744:102:24",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7953,
              "nodeType": "Block",
              "src": "6256:42:24",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7950,
                      "name": "delegateToViewAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12202,
                      "src": "6266:23:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () view returns (bytes memory)"
                      }
                    },
                    "id": 7951,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6266:25:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7952,
                  "nodeType": "ExpressionStatement",
                  "src": "6266:25:24"
                }
              ]
            },
            "documentation": "@dev The auxiliary function for calculate option occupied. \n strikePrice option's strike price\n underlyingPrice option's underlying price\n amount option's amount\n optType option's type, 0 for call, 1 for put.",
            "id": 7954,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calOptionsOccupied",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7946,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7939,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7954,
                  "src": "6139:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7938,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6139:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7941,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7954,
                  "src": "6163:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7940,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6163:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7943,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7954,
                  "src": "6191:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7942,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6191:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7945,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7954,
                  "src": "6210:5:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 7944,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "6210:5:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6138:90:24"
            },
            "returnParameters": {
              "id": 7949,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7948,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7954,
                  "src": "6248:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7947,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6248:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6247:9:24"
            },
            "scope": 8060,
            "src": "6111:187:24",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7962,
              "nodeType": "Block",
              "src": "6441:42:24",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7959,
                      "name": "delegateToViewAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12202,
                      "src": "6451:23:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () view returns (bytes memory)"
                      }
                    },
                    "id": 7960,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6451:25:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7961,
                  "nodeType": "ExpressionStatement",
                  "src": "6451:25:24"
                }
              ]
            },
            "documentation": "@dev Retrieve the total collateral worth, priced in USD. ",
            "id": 7963,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTotalCollateral",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7955,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6411:2:24"
            },
            "returnParameters": {
              "id": 7958,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7957,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7963,
                  "src": "6433:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7956,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6433:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6432:9:24"
            },
            "scope": 8060,
            "src": "6384:99:24",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7973,
              "nodeType": "Block",
              "src": "6688:42:24",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7970,
                      "name": "delegateToViewAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12202,
                      "src": "6698:23:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () view returns (bytes memory)"
                      }
                    },
                    "id": 7971,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6698:25:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7972,
                  "nodeType": "ExpressionStatement",
                  "src": "6698:25:24"
                }
              ]
            },
            "documentation": "@dev Retrieve the balance of collateral, the auxiliary function for the total collateral calculation. ",
            "id": 7974,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRealBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7966,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7965,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7974,
                  "src": "6638:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7964,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6638:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6637:24:24"
            },
            "returnParameters": {
              "id": 7969,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7968,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7974,
                  "src": "6681:6:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 7967,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6681:6:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6680:8:24"
            },
            "scope": 8060,
            "src": "6614:116:24",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7984,
              "nodeType": "Block",
              "src": "6814:42:24",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7981,
                      "name": "delegateToViewAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12202,
                      "src": "6824:23:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () view returns (bytes memory)"
                      }
                    },
                    "id": 7982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6824:25:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7983,
                  "nodeType": "ExpressionStatement",
                  "src": "6824:25:24"
                }
              ]
            },
            "documentation": null,
            "id": 7985,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNetWorthBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7977,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7976,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7985,
                  "src": "6763:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7975,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6763:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6762:24:24"
            },
            "returnParameters": {
              "id": 7980,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7979,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7985,
                  "src": "6806:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7978,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6806:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6805:9:24"
            },
            "scope": 8060,
            "src": "6735:121:24",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7993,
              "nodeType": "Block",
              "src": "7100:42:24",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7990,
                      "name": "delegateToViewAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12202,
                      "src": "7110:23:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () view returns (bytes memory)"
                      }
                    },
                    "id": 7991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7110:25:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7992,
                  "nodeType": "ExpressionStatement",
                  "src": "7110:25:24"
                }
              ]
            },
            "documentation": "@dev collateral occupation rate calculation\n     collateral occupation rate = sum(collateral Rate * collateral balance) / sum(collateral balance)",
            "id": 7994,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateCollateralRate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7986,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7069:2:24"
            },
            "returnParameters": {
              "id": 7989,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7988,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7994,
                  "src": "7092:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7987,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7092:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7091:9:24"
            },
            "scope": 8060,
            "src": "7037:105:24",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8004,
              "nodeType": "Block",
              "src": "7292:42:24",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 8001,
                      "name": "delegateToViewAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12202,
                      "src": "7302:23:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () view returns (bytes memory)"
                      }
                    },
                    "id": 8002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7302:25:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 8003,
                  "nodeType": "ExpressionStatement",
                  "src": "7302:25:24"
                }
              ]
            },
            "documentation": "@dev retrieve input price valid range rate, thousandths.",
            "id": 8005,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPriceRateRange",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7995,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7252:2:24"
            },
            "returnParameters": {
              "id": 8000,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7997,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8005,
                  "src": "7275:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7996,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7275:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7999,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8005,
                  "src": "7283:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7998,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7283:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7274:17:24"
            },
            "scope": 8060,
            "src": "7226:108:24",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8015,
              "nodeType": "Block",
              "src": "7499:36:24",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 8012,
                      "name": "delegateAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12217,
                      "src": "7509:17:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () returns (bytes memory)"
                      }
                    },
                    "id": 8013,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7509:19:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 8014,
                  "nodeType": "ExpressionStatement",
                  "src": "7509:19:24"
                }
              ]
            },
            "documentation": "@dev set input price valid range rate, thousandths.",
            "id": 8016,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setPriceRateRange",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8010,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8007,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8016,
                  "src": "7440:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8006,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7440:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8009,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8016,
                  "src": "7466:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8008,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7466:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7439:53:24"
            },
            "returnParameters": {
              "id": 8011,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7499:0:24"
            },
            "scope": 8060,
            "src": "7413:122:24",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8036,
              "nodeType": "Block",
              "src": "8214:36:24",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 8033,
                      "name": "delegateAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12217,
                      "src": "8224:17:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () returns (bytes memory)"
                      }
                    },
                    "id": 8034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8224:19:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 8035,
                  "nodeType": "ExpressionStatement",
                  "src": "8224:19:24"
                }
              ]
            },
            "documentation": "@dev user buy option and create new option.\n settlement user's settement coin address\n settlementAmount amount of settlement user want fo pay.\n strikePrice user input option's strike price\n underlying user input option's underlying id, 1 for BTC,2 for ETH\n expiration user input expiration,time limit from now\n amount user input amount of new option user want to buy.\n optType user input option type",
            "id": 8037,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buyOption",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8031,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8018,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8037,
                  "src": "8023:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8017,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8023:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8020,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8037,
                  "src": "8046:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8019,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8046:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8022,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8037,
                  "src": "8076:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8021,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8076:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8024,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8037,
                  "src": "8100:6:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 8023,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8100:6:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8026,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8037,
                  "src": "8139:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8025,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8139:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8028,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8037,
                  "src": "8162:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8027,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8162:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8030,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8037,
                  "src": "8181:5:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 8029,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "8181:5:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8022:177:24"
            },
            "returnParameters": {
              "id": 8032,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8214:0:24"
            },
            "scope": 8060,
            "src": "8004:246:24",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8047,
              "nodeType": "Block",
              "src": "8503:36:24",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 8044,
                      "name": "delegateAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12217,
                      "src": "8513:17:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () returns (bytes memory)"
                      }
                    },
                    "id": 8045,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8513:19:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 8046,
                  "nodeType": "ExpressionStatement",
                  "src": "8513:19:24"
                }
              ]
            },
            "documentation": "@dev User sell option.\n optionsId option's ID which was wanted to sell, must owned by user\n amount user input amount of option user want to sell.",
            "id": 8048,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sellOption",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8042,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8039,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8048,
                  "src": "8455:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8038,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8455:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8041,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8048,
                  "src": "8477:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8040,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8477:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8454:42:24"
            },
            "returnParameters": {
              "id": 8043,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8503:0:24"
            },
            "scope": 8060,
            "src": "8435:104:24",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8058,
              "nodeType": "Block",
              "src": "8808:36:24",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 8055,
                      "name": "delegateAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12217,
                      "src": "8818:17:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () returns (bytes memory)"
                      }
                    },
                    "id": 8056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8818:19:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 8057,
                  "nodeType": "ExpressionStatement",
                  "src": "8818:19:24"
                }
              ]
            },
            "documentation": "@dev User exercise option.\n optionsId option's ID which was wanted to exercise, must owned by user\n amount user input amount of option user want to exercise.",
            "id": 8059,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exerciseOption",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8053,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8050,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8059,
                  "src": "8760:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8049,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8760:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8052,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8059,
                  "src": "8782:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8051,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8782:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8759:42:24"
            },
            "returnParameters": {
              "id": 8054,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8808:0:24"
            },
            "scope": 8060,
            "src": "8736:108:24",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 8061,
        "src": "130:8716:24"
      }
    ],
    "src": "0:8847:24"
  },
  "legacyAST": {
    "absolutePath": "/home/jqg/FinnexusOptions_V2/contracts/OptionsManager/ManagerProxy.sol",
    "exportedSymbols": {
      "ManagerProxy": [
        8060
      ]
    },
    "id": 8061,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7713,
        "literals": [
          "solidity",
          "=",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:24"
      },
      {
        "absolutePath": "/home/jqg/FinnexusOptions_V2/contracts/OptionsManager/ManagerData.sol",
        "file": "./ManagerData.sol",
        "id": 7714,
        "nodeType": "ImportDirective",
        "scope": 8061,
        "sourceUnit": 7712,
        "src": "25:27:24",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/jqg/FinnexusOptions_V2/contracts/Proxy/baseProxy.sol",
        "file": "../Proxy/baseProxy.sol",
        "id": 7715,
        "nodeType": "ImportDirective",
        "scope": 8061,
        "sourceUnit": 12219,
        "src": "53:32:24",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7716,
              "name": "ManagerData",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7711,
              "src": "155:11:24",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ManagerData_$7711",
                "typeString": "contract ManagerData"
              }
            },
            "id": 7717,
            "nodeType": "InheritanceSpecifier",
            "src": "155:11:24"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7718,
              "name": "baseProxy",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 12218,
              "src": "167:9:24",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_baseProxy_$12218",
                "typeString": "contract baseProxy"
              }
            },
            "id": 7719,
            "nodeType": "InheritanceSpecifier",
            "src": "167:9:24"
          }
        ],
        "contractDependencies": [
          1622,
          5724,
          7711,
          8779,
          12218,
          14692,
          14797,
          15013,
          16571,
          16673,
          16828,
          16939,
          16962
        ],
        "contractKind": "contract",
        "documentation": "@title  Erc20Delegator Contract",
        "fullyImplemented": true,
        "id": 8060,
        "linearizedBaseContracts": [
          8060,
          12218,
          7711,
          14797,
          16828,
          1622,
          8779,
          14692,
          5724,
          15013,
          16571,
          16673,
          16939,
          16962
        ],
        "name": "ManagerProxy",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 7767,
              "nodeType": "Block",
              "src": "672:265:24",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7741,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7737,
                      "name": "_oracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14613,
                      "src": "682:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IFNXOracle_$14609",
                        "typeString": "contract IFNXOracle"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 7739,
                          "name": "oracleAddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7723,
                          "src": "703:10:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 7738,
                        "name": "IFNXOracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14609,
                        "src": "692:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IFNXOracle_$14609_$",
                          "typeString": "type(contract IFNXOracle)"
                        }
                      },
                      "id": 7740,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "692:22:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IFNXOracle_$14609",
                        "typeString": "contract IFNXOracle"
                      }
                    },
                    "src": "682:32:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IFNXOracle_$14609",
                      "typeString": "contract IFNXOracle"
                    }
                  },
                  "id": 7742,
                  "nodeType": "ExpressionStatement",
                  "src": "682:32:24"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7743,
                      "name": "_optionsPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14772,
                      "src": "724:13:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IOptionsPrice_$14768",
                        "typeString": "contract IOptionsPrice"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 7745,
                          "name": "optionsPriceAddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7725,
                          "src": "754:16:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 7744,
                        "name": "IOptionsPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14768,
                        "src": "740:13:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IOptionsPrice_$14768_$",
                          "typeString": "type(contract IOptionsPrice)"
                        }
                      },
                      "id": 7746,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "740:31:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IOptionsPrice_$14768",
                        "typeString": "contract IOptionsPrice"
                      }
                    },
                    "src": "724:47:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IOptionsPrice_$14768",
                      "typeString": "contract IOptionsPrice"
                    }
                  },
                  "id": 7748,
                  "nodeType": "ExpressionStatement",
                  "src": "724:47:24"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7749,
                      "name": "_optionsPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8754,
                      "src": "781:12:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IOptionsPool_$8750",
                        "typeString": "contract IOptionsPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 7751,
                          "name": "optionsPoolAddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7727,
                          "src": "809:15:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 7750,
                        "name": "IOptionsPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8750,
                        "src": "796:12:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IOptionsPool_$8750_$",
                          "typeString": "type(contract IOptionsPool)"
                        }
                      },
                      "id": 7752,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "796:29:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IOptionsPool_$8750",
                        "typeString": "contract IOptionsPool"
                      }
                    },
                    "src": "781:44:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IOptionsPool_$8750",
                      "typeString": "contract IOptionsPool"
                    }
                  },
                  "id": 7754,
                  "nodeType": "ExpressionStatement",
                  "src": "781:44:24"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7755,
                      "name": "_collateralPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1597,
                      "src": "835:15:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICollateralPool_$1593",
                        "typeString": "contract ICollateralPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 7757,
                          "name": "collateralPoolAddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7729,
                          "src": "869:18:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 7756,
                        "name": "ICollateralPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1593,
                        "src": "853:15:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ICollateralPool_$1593_$",
                          "typeString": "type(contract ICollateralPool)"
                        }
                      },
                      "id": 7758,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "853:35:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICollateralPool_$1593",
                        "typeString": "contract ICollateralPool"
                      }
                    },
                    "src": "835:53:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICollateralPool_$1593",
                      "typeString": "contract ICollateralPool"
                    }
                  },
                  "id": 7760,
                  "nodeType": "ExpressionStatement",
                  "src": "835:53:24"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7761,
                      "name": "_FPTCoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5699,
                      "src": "898:8:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IFPTCoin_$5695",
                        "typeString": "contract IFPTCoin"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 7763,
                          "name": "FPTCoinAddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7731,
                          "src": "918:11:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 7762,
                        "name": "IFPTCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5695,
                        "src": "909:8:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IFPTCoin_$5695_$",
                          "typeString": "type(contract IFPTCoin)"
                        }
                      },
                      "id": 7764,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "909:21:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IFPTCoin_$5695",
                        "typeString": "contract IFPTCoin"
                      }
                    },
                    "src": "898:32:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IFPTCoin_$5695",
                      "typeString": "contract IFPTCoin"
                    }
                  },
                  "id": 7766,
                  "nodeType": "ExpressionStatement",
                  "src": "898:32:24"
                }
              ]
            },
            "documentation": "@dev Options manager constructor. set other contract address\n oracleAddr fnx oracle contract address.\n optionsPriceAddr options price contract address\n optionsPoolAddr optoins pool contract address\n FPTCoinAddr FPTCoin contract address",
            "id": 7768,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 7734,
                    "name": "implementation_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7721,
                    "src": "647:15:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 7735,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7733,
                  "name": "baseProxy",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 12218,
                  "src": "637:9:24",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_baseProxy_$12218_$",
                    "typeString": "type(contract baseProxy)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "637:26:24"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7732,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7721,
                  "name": "implementation_",
                  "nodeType": "VariableDeclaration",
                  "scope": 7768,
                  "src": "475:23:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7720,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "475:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7723,
                  "name": "oracleAddr",
                  "nodeType": "VariableDeclaration",
                  "scope": 7768,
                  "src": "499:18:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7722,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "499:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7725,
                  "name": "optionsPriceAddr",
                  "nodeType": "VariableDeclaration",
                  "scope": 7768,
                  "src": "518:24:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7724,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "518:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7727,
                  "name": "optionsPoolAddr",
                  "nodeType": "VariableDeclaration",
                  "scope": 7768,
                  "src": "556:23:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7726,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "556:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7729,
                  "name": "collateralPoolAddr",
                  "nodeType": "VariableDeclaration",
                  "scope": 7768,
                  "src": "580:26:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7728,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "580:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7731,
                  "name": "FPTCoinAddr",
                  "nodeType": "VariableDeclaration",
                  "scope": 7768,
                  "src": "607:19:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7730,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "607:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "474:153:24"
            },
            "returnParameters": {
              "id": 7736,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "672:0:24"
            },
            "scope": 8060,
            "src": "463:474:24",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7778,
              "nodeType": "Block",
              "src": "1398:36:24",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7775,
                      "name": "delegateAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12217,
                      "src": "1408:17:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () returns (bytes memory)"
                      }
                    },
                    "id": 7776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1408:19:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7777,
                  "nodeType": "ExpressionStatement",
                  "src": "1408:19:24"
                }
              ]
            },
            "documentation": "@dev  The foundation operator want to add some coin to netbalance, which can increase the FPTCoin net worth.\n settlement the settlement coin address which the foundation operator want to transfer in this contract address.\n amount the amount of the settlement coin which the foundation operator want to transfer in this contract address.",
            "id": 7779,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addNetBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7773,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7770,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7779,
                  "src": "1339:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7769,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1339:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7772,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7779,
                  "src": "1362:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7771,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1362:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1338:43:24"
            },
            "returnParameters": {
              "id": 7774,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1398:0:24"
            },
            "scope": 8060,
            "src": "1316:118:24",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7789,
              "nodeType": "Block",
              "src": "1737:36:24",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7786,
                      "name": "delegateAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12217,
                      "src": "1747:17:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () returns (bytes memory)"
                      }
                    },
                    "id": 7787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1747:19:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7788,
                  "nodeType": "ExpressionStatement",
                  "src": "1747:19:24"
                }
              ]
            },
            "documentation": "@dev  The foundation owner want to set the minimum collateral occupation rate.\n collateral collateral coin address\n colRate The thousandths of the minimum collateral occupation rate.",
            "id": 7790,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setCollateralRate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7784,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7781,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7790,
                  "src": "1686:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7780,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1686:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7783,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7790,
                  "src": "1709:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7782,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1709:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1685:44:24"
            },
            "returnParameters": {
              "id": 7785,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1737:0:24"
            },
            "scope": 8060,
            "src": "1659:114:24",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7800,
              "nodeType": "Block",
              "src": "1930:42:24",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7797,
                      "name": "delegateToViewAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12202,
                      "src": "1940:23:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () view returns (bytes memory)"
                      }
                    },
                    "id": 7798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1940:25:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7799,
                  "nodeType": "ExpressionStatement",
                  "src": "1940:25:24"
                }
              ]
            },
            "documentation": "@dev Get the minimum collateral occupation rate.",
            "id": 7801,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCollateralRate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7793,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7792,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7801,
                  "src": "1877:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7791,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1877:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1876:24:24"
            },
            "returnParameters": {
              "id": 7796,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7795,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7801,
                  "src": "1921:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7794,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1921:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1920:9:24"
            },
            "scope": 8060,
            "src": "1850:122:24",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7811,
              "nodeType": "Block",
              "src": "2166:42:24",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7808,
                      "name": "delegateToViewAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12202,
                      "src": "2176:23:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () view returns (bytes memory)"
                      }
                    },
                    "id": 7809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2176:25:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7810,
                  "nodeType": "ExpressionStatement",
                  "src": "2176:25:24"
                }
              ]
            },
            "documentation": "@dev Retrieve user's cost of collateral, priced in USD.\n user input retrieved account ",
            "id": 7812,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserPayingUsd",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7804,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7803,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7812,
                  "src": "2120:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7802,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2120:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2119:18:24"
            },
            "returnParameters": {
              "id": 7807,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7806,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7812,
                  "src": "2158:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7805,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2158:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2157:9:24"
            },
            "scope": 8060,
            "src": "2094:114:24",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7824,
              "nodeType": "Block",
              "src": "2489:42:24",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7821,
                      "name": "delegateToViewAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12202,
                      "src": "2499:23:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () view returns (bytes memory)"
                      }
                    },
                    "id": 7822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2499:25:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7823,
                  "nodeType": "ExpressionStatement",
                  "src": "2499:25:24"
                }
              ]
            },
            "documentation": "@dev Retrieve user's amount of the specified collateral.\n user input retrieved account \n collateral input retrieved collateral coin address ",
            "id": 7825,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "userInputCollateral",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7817,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7814,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7825,
                  "src": "2420:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7813,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2420:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7816,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7825,
                  "src": "2437:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7815,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2437:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2419:41:24"
            },
            "returnParameters": {
              "id": 7820,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7819,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7825,
                  "src": "2481:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7818,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2481:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2480:9:24"
            },
            "scope": 8060,
            "src": "2391:140:24",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7831,
              "nodeType": "Block",
              "src": "2711:36:24",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7828,
                      "name": "delegateAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12217,
                      "src": "2721:17:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () returns (bytes memory)"
                      }
                    },
                    "id": 7829,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2721:19:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7830,
                  "nodeType": "ExpressionStatement",
                  "src": "2721:19:24"
                }
              ]
            },
            "documentation": "@dev Calculate the collateral pool shared worth.\nThe foundation operator will invoke this function frequently",
            "id": 7832,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calSharedPayment",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7826,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2701:2:24"
            },
            "returnParameters": {
              "id": 7827,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2711:0:24"
            },
            "scope": 8060,
            "src": "2676:71:24",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7846,
              "nodeType": "Block",
              "src": "3235:36:24",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7843,
                      "name": "delegateAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12217,
                      "src": "3245:17:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () returns (bytes memory)"
                      }
                    },
                    "id": 7844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3245:19:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7845,
                  "nodeType": "ExpressionStatement",
                  "src": "3245:19:24"
                }
              ]
            },
            "documentation": "@dev Set the calculation results of the collateral pool shared worth.\nThe foundation operator will invoke this function frequently\n newNetworth Current expired options' net worth \n sharedBalances All unexpired options' shared balance distributed by time.\n firstOption The new first unexpired option's index.",
            "id": 7847,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setSharedPayment",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7841,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7835,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7847,
                  "src": "3137:15:24",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                    "typeString": "int256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7833,
                      "name": "int256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3137:6:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "id": 7834,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3137:8:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_int256_$dyn_storage_ptr",
                      "typeString": "int256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7838,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7847,
                  "src": "3169:15:24",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                    "typeString": "int256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7836,
                      "name": "int256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3169:6:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "id": 7837,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3169:8:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_int256_$dyn_storage_ptr",
                      "typeString": "int256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7840,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7847,
                  "src": "3204:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7839,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3204:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3136:92:24"
            },
            "returnParameters": {
              "id": 7842,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3235:0:24"
            },
            "scope": 8060,
            "src": "3111:160:24",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7857,
              "nodeType": "Block",
              "src": "3471:42:24",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7854,
                      "name": "delegateToViewAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12202,
                      "src": "3481:23:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () view returns (bytes memory)"
                      }
                    },
                    "id": 7855,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3481:25:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7856,
                  "nodeType": "ExpressionStatement",
                  "src": "3481:25:24"
                }
              ]
            },
            "documentation": "@dev Retrieve user's current total worth, priced in USD.\n account input retrieve account",
            "id": 7858,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserTotalWorth",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7850,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7849,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7858,
                  "src": "3422:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7848,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3422:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3421:21:24"
            },
            "returnParameters": {
              "id": 7853,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7852,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7858,
                  "src": "3463:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7851,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3463:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3462:9:24"
            },
            "scope": 8060,
            "src": "3395:118:24",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7866,
              "nodeType": "Block",
              "src": "3648:42:24",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7863,
                      "name": "delegateToViewAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12202,
                      "src": "3658:23:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () view returns (bytes memory)"
                      }
                    },
                    "id": 7864,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3658:25:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7865,
                  "nodeType": "ExpressionStatement",
                  "src": "3658:25:24"
                }
              ]
            },
            "documentation": "@dev Retrieve FPTCoin's net worth, priced in USD.",
            "id": 7867,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenNetworth",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7859,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3616:2:24"
            },
            "returnParameters": {
              "id": 7862,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7861,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7867,
                  "src": "3640:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7860,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3640:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3639:9:24"
            },
            "scope": 8060,
            "src": "3591:99:24",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7877,
              "nodeType": "Block",
              "src": "3969:36:24",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7874,
                      "name": "delegateAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12217,
                      "src": "3979:17:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () returns (bytes memory)"
                      }
                    },
                    "id": 7875,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3979:19:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7876,
                  "nodeType": "ExpressionStatement",
                  "src": "3979:19:24"
                }
              ]
            },
            "documentation": "@dev Deposit collateral in this pool from user.\n collateral The collateral coin address which is in whitelist.\n amount the amount of collateral to deposit.",
            "id": 7878,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addCollateral",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7872,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7869,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7878,
                  "src": "3911:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7868,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3911:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7871,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7878,
                  "src": "3934:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7870,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3934:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3910:43:24"
            },
            "returnParameters": {
              "id": 7873,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3969:0:24"
            },
            "scope": 8060,
            "src": "3888:117:24",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7888,
              "nodeType": "Block",
              "src": "4423:36:24",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7885,
                      "name": "delegateAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12217,
                      "src": "4433:17:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () returns (bytes memory)"
                      }
                    },
                    "id": 7886,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4433:19:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7887,
                  "nodeType": "ExpressionStatement",
                  "src": "4433:19:24"
                }
              ]
            },
            "documentation": "@dev redeem collateral from this pool, user can input the prioritized collateral,he will get this coin,\nif this coin is unsufficient, he will get others collateral which in whitelist.\n tokenAmount the amount of FPTCoin want to redeem.\n collateral The prioritized collateral coin address.",
            "id": 7889,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redeemCollateral",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7883,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7880,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7889,
                  "src": "4368:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7879,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4368:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7882,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7889,
                  "src": "4392:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7881,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4392:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4367:48:24"
            },
            "returnParameters": {
              "id": 7884,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4423:0:24"
            },
            "scope": 8060,
            "src": "4342:117:24",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7900,
              "nodeType": "Block",
              "src": "4830:42:24",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7897,
                      "name": "delegateToViewAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12202,
                      "src": "4840:23:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () view returns (bytes memory)"
                      }
                    },
                    "id": 7898,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4840:25:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7899,
                  "nodeType": "ExpressionStatement",
                  "src": "4840:25:24"
                }
              ]
            },
            "documentation": "@dev Retrieve user's collateral worth in all collateral coin. \nIf user want to redeem all his collateral,and the vacant collateral is sufficient,\nHe can redeem each collateral amount in return list.\n account the retrieve user's account;",
            "id": 7901,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calCollateralWorth",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7892,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7891,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7901,
                  "src": "4773:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7890,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4773:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4772:21:24"
            },
            "returnParameters": {
              "id": 7896,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7895,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7901,
                  "src": "4813:16:24",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7893,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4813:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7894,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "4813:9:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4812:18:24"
            },
            "scope": 8060,
            "src": "4745:127:24",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7909,
              "nodeType": "Block",
              "src": "5061:42:24",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7906,
                      "name": "delegateToViewAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12202,
                      "src": "5071:23:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () view returns (bytes memory)"
                      }
                    },
                    "id": 7907,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5071:25:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7908,
                  "nodeType": "ExpressionStatement",
                  "src": "5071:25:24"
                }
              ]
            },
            "documentation": "@dev Retrieve the occupied collateral worth, multiplied by minimum collateral rate, priced in USD. ",
            "id": 7910,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOccupiedCollateral",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7902,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5030:2:24"
            },
            "returnParameters": {
              "id": 7905,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7904,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7910,
                  "src": "5053:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7903,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5053:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5052:9:24"
            },
            "scope": 8060,
            "src": "5000:103:24",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7918,
              "nodeType": "Block",
              "src": "5310:42:24",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7915,
                      "name": "delegateToViewAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12202,
                      "src": "5320:23:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () view returns (bytes memory)"
                      }
                    },
                    "id": 7916,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5320:25:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7917,
                  "nodeType": "ExpressionStatement",
                  "src": "5320:25:24"
                }
              ]
            },
            "documentation": "@dev Retrieve the available collateral worth, the worth of collateral which can used for buy options, priced in USD. ",
            "id": 7919,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAvailableCollateral",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7911,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5280:2:24"
            },
            "returnParameters": {
              "id": 7914,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7913,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7919,
                  "src": "5302:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7912,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5302:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5301:9:24"
            },
            "scope": 8060,
            "src": "5249:103:24",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7927,
              "nodeType": "Block",
              "src": "5555:42:24",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7924,
                      "name": "delegateToViewAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12202,
                      "src": "5565:23:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () view returns (bytes memory)"
                      }
                    },
                    "id": 7925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5565:25:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7926,
                  "nodeType": "ExpressionStatement",
                  "src": "5565:25:24"
                }
              ]
            },
            "documentation": "@dev Retrieve the left collateral worth, the worth of collateral which can used for redeem collateral, priced in USD. ",
            "id": 7928,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLeftCollateral",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7920,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5525:2:24"
            },
            "returnParameters": {
              "id": 7923,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7922,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7928,
                  "src": "5547:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7921,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5547:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5546:9:24"
            },
            "scope": 8060,
            "src": "5499:98:24",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7936,
              "nodeType": "Block",
              "src": "5804:42:24",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7933,
                      "name": "delegateToViewAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12202,
                      "src": "5814:23:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () view returns (bytes memory)"
                      }
                    },
                    "id": 7934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5814:25:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7935,
                  "nodeType": "ExpressionStatement",
                  "src": "5814:25:24"
                }
              ]
            },
            "documentation": "@dev Retrieve the unlocked collateral worth, the worth of collateral which currently used for options, priced in USD. ",
            "id": 7937,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUnlockedCollateral",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7929,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5774:2:24"
            },
            "returnParameters": {
              "id": 7932,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7931,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7937,
                  "src": "5796:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7930,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5796:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5795:9:24"
            },
            "scope": 8060,
            "src": "5744:102:24",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7953,
              "nodeType": "Block",
              "src": "6256:42:24",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7950,
                      "name": "delegateToViewAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12202,
                      "src": "6266:23:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () view returns (bytes memory)"
                      }
                    },
                    "id": 7951,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6266:25:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7952,
                  "nodeType": "ExpressionStatement",
                  "src": "6266:25:24"
                }
              ]
            },
            "documentation": "@dev The auxiliary function for calculate option occupied. \n strikePrice option's strike price\n underlyingPrice option's underlying price\n amount option's amount\n optType option's type, 0 for call, 1 for put.",
            "id": 7954,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calOptionsOccupied",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7946,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7939,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7954,
                  "src": "6139:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7938,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6139:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7941,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7954,
                  "src": "6163:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7940,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6163:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7943,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7954,
                  "src": "6191:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7942,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6191:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7945,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7954,
                  "src": "6210:5:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 7944,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "6210:5:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6138:90:24"
            },
            "returnParameters": {
              "id": 7949,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7948,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7954,
                  "src": "6248:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7947,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6248:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6247:9:24"
            },
            "scope": 8060,
            "src": "6111:187:24",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7962,
              "nodeType": "Block",
              "src": "6441:42:24",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7959,
                      "name": "delegateToViewAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12202,
                      "src": "6451:23:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () view returns (bytes memory)"
                      }
                    },
                    "id": 7960,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6451:25:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7961,
                  "nodeType": "ExpressionStatement",
                  "src": "6451:25:24"
                }
              ]
            },
            "documentation": "@dev Retrieve the total collateral worth, priced in USD. ",
            "id": 7963,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTotalCollateral",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7955,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6411:2:24"
            },
            "returnParameters": {
              "id": 7958,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7957,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7963,
                  "src": "6433:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7956,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6433:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6432:9:24"
            },
            "scope": 8060,
            "src": "6384:99:24",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7973,
              "nodeType": "Block",
              "src": "6688:42:24",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7970,
                      "name": "delegateToViewAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12202,
                      "src": "6698:23:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () view returns (bytes memory)"
                      }
                    },
                    "id": 7971,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6698:25:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7972,
                  "nodeType": "ExpressionStatement",
                  "src": "6698:25:24"
                }
              ]
            },
            "documentation": "@dev Retrieve the balance of collateral, the auxiliary function for the total collateral calculation. ",
            "id": 7974,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRealBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7966,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7965,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7974,
                  "src": "6638:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7964,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6638:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6637:24:24"
            },
            "returnParameters": {
              "id": 7969,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7968,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7974,
                  "src": "6681:6:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 7967,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6681:6:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6680:8:24"
            },
            "scope": 8060,
            "src": "6614:116:24",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7984,
              "nodeType": "Block",
              "src": "6814:42:24",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7981,
                      "name": "delegateToViewAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12202,
                      "src": "6824:23:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () view returns (bytes memory)"
                      }
                    },
                    "id": 7982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6824:25:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7983,
                  "nodeType": "ExpressionStatement",
                  "src": "6824:25:24"
                }
              ]
            },
            "documentation": null,
            "id": 7985,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNetWorthBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7977,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7976,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7985,
                  "src": "6763:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7975,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6763:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6762:24:24"
            },
            "returnParameters": {
              "id": 7980,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7979,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7985,
                  "src": "6806:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7978,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6806:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6805:9:24"
            },
            "scope": 8060,
            "src": "6735:121:24",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7993,
              "nodeType": "Block",
              "src": "7100:42:24",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7990,
                      "name": "delegateToViewAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12202,
                      "src": "7110:23:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () view returns (bytes memory)"
                      }
                    },
                    "id": 7991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7110:25:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7992,
                  "nodeType": "ExpressionStatement",
                  "src": "7110:25:24"
                }
              ]
            },
            "documentation": "@dev collateral occupation rate calculation\n     collateral occupation rate = sum(collateral Rate * collateral balance) / sum(collateral balance)",
            "id": 7994,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateCollateralRate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7986,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7069:2:24"
            },
            "returnParameters": {
              "id": 7989,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7988,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7994,
                  "src": "7092:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7987,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7092:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7091:9:24"
            },
            "scope": 8060,
            "src": "7037:105:24",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8004,
              "nodeType": "Block",
              "src": "7292:42:24",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 8001,
                      "name": "delegateToViewAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12202,
                      "src": "7302:23:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () view returns (bytes memory)"
                      }
                    },
                    "id": 8002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7302:25:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 8003,
                  "nodeType": "ExpressionStatement",
                  "src": "7302:25:24"
                }
              ]
            },
            "documentation": "@dev retrieve input price valid range rate, thousandths.",
            "id": 8005,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPriceRateRange",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7995,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7252:2:24"
            },
            "returnParameters": {
              "id": 8000,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7997,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8005,
                  "src": "7275:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7996,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7275:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7999,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8005,
                  "src": "7283:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7998,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7283:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7274:17:24"
            },
            "scope": 8060,
            "src": "7226:108:24",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8015,
              "nodeType": "Block",
              "src": "7499:36:24",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 8012,
                      "name": "delegateAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12217,
                      "src": "7509:17:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () returns (bytes memory)"
                      }
                    },
                    "id": 8013,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7509:19:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 8014,
                  "nodeType": "ExpressionStatement",
                  "src": "7509:19:24"
                }
              ]
            },
            "documentation": "@dev set input price valid range rate, thousandths.",
            "id": 8016,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setPriceRateRange",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8010,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8007,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8016,
                  "src": "7440:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8006,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7440:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8009,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8016,
                  "src": "7466:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8008,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7466:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7439:53:24"
            },
            "returnParameters": {
              "id": 8011,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7499:0:24"
            },
            "scope": 8060,
            "src": "7413:122:24",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8036,
              "nodeType": "Block",
              "src": "8214:36:24",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 8033,
                      "name": "delegateAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12217,
                      "src": "8224:17:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () returns (bytes memory)"
                      }
                    },
                    "id": 8034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8224:19:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 8035,
                  "nodeType": "ExpressionStatement",
                  "src": "8224:19:24"
                }
              ]
            },
            "documentation": "@dev user buy option and create new option.\n settlement user's settement coin address\n settlementAmount amount of settlement user want fo pay.\n strikePrice user input option's strike price\n underlying user input option's underlying id, 1 for BTC,2 for ETH\n expiration user input expiration,time limit from now\n amount user input amount of new option user want to buy.\n optType user input option type",
            "id": 8037,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buyOption",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8031,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8018,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8037,
                  "src": "8023:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8017,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8023:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8020,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8037,
                  "src": "8046:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8019,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8046:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8022,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8037,
                  "src": "8076:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8021,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8076:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8024,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8037,
                  "src": "8100:6:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 8023,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8100:6:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8026,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8037,
                  "src": "8139:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8025,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8139:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8028,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8037,
                  "src": "8162:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8027,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8162:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8030,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8037,
                  "src": "8181:5:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 8029,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "8181:5:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8022:177:24"
            },
            "returnParameters": {
              "id": 8032,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8214:0:24"
            },
            "scope": 8060,
            "src": "8004:246:24",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8047,
              "nodeType": "Block",
              "src": "8503:36:24",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 8044,
                      "name": "delegateAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12217,
                      "src": "8513:17:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () returns (bytes memory)"
                      }
                    },
                    "id": 8045,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8513:19:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 8046,
                  "nodeType": "ExpressionStatement",
                  "src": "8513:19:24"
                }
              ]
            },
            "documentation": "@dev User sell option.\n optionsId option's ID which was wanted to sell, must owned by user\n amount user input amount of option user want to sell.",
            "id": 8048,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sellOption",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8042,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8039,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8048,
                  "src": "8455:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8038,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8455:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8041,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8048,
                  "src": "8477:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8040,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8477:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8454:42:24"
            },
            "returnParameters": {
              "id": 8043,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8503:0:24"
            },
            "scope": 8060,
            "src": "8435:104:24",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8058,
              "nodeType": "Block",
              "src": "8808:36:24",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 8055,
                      "name": "delegateAndReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12217,
                      "src": "8818:17:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () returns (bytes memory)"
                      }
                    },
                    "id": 8056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8818:19:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 8057,
                  "nodeType": "ExpressionStatement",
                  "src": "8818:19:24"
                }
              ]
            },
            "documentation": "@dev User exercise option.\n optionsId option's ID which was wanted to exercise, must owned by user\n amount user input amount of option user want to exercise.",
            "id": 8059,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exerciseOption",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8053,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8050,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8059,
                  "src": "8760:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8049,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8760:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8052,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8059,
                  "src": "8782:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8051,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8782:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8759:42:24"
            },
            "returnParameters": {
              "id": 8054,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8808:0:24"
            },
            "scope": 8060,
            "src": "8736:108:24",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 8061,
        "src": "130:8716:24"
      }
    ],
    "src": "0:8847:24"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.4",
  "updatedAt": "2020-09-09T03:13:04.277Z",
  "devdoc": {
    "methods": {
      "addCollateral(address,uint256)": {
        "details": "Deposit collateral in this pool from user. collateral The collateral coin address which is in whitelist. amount the amount of collateral to deposit."
      },
      "addNetBalance(address,uint256)": {
        "details": "The foundation operator want to add some coin to netbalance, which can increase the FPTCoin net worth. settlement the settlement coin address which the foundation operator want to transfer in this contract address. amount the amount of the settlement coin which the foundation operator want to transfer in this contract address."
      },
      "addOperator(address)": {
        "details": "add a new operator by owner.      "
      },
      "addWhiteList(address)": {
        "details": "Implementation of add an eligible address into the whitelist.",
        "params": {
          "addAddress": "new eligible address."
        }
      },
      "buyOption(address,uint256,uint256,uint32,uint256,uint256,uint8)": {
        "details": "user buy option and create new option. settlement user's settement coin address settlementAmount amount of settlement user want fo pay. strikePrice user input option's strike price underlying user input option's underlying id, 1 for BTC,2 for ETH expiration user input expiration,time limit from now amount user input amount of new option user want to buy. optType user input option type"
      },
      "calCollateralWorth(address)": {
        "details": "Retrieve user's collateral worth in all collateral coin.  If user want to redeem all his collateral,and the vacant collateral is sufficient, He can redeem each collateral amount in return list. account the retrieve user's account;"
      },
      "calOptionsOccupied(uint256,uint256,uint256,uint8)": {
        "details": "The auxiliary function for calculate option occupied.  strikePrice option's strike price underlyingPrice option's underlying price amount option's amount optType option's type, 0 for call, 1 for put."
      },
      "calSharedPayment()": {
        "details": "Calculate the collateral pool shared worth. The foundation operator will invoke this function frequently"
      },
      "calculateCollateralRate()": {
        "details": "collateral occupation rate calculation     collateral occupation rate = sum(collateral Rate * collateral balance) / sum(collateral balance)"
      },
      "constructor": {
        "details": "Options manager constructor. set other contract address oracleAddr fnx oracle contract address. optionsPriceAddr options price contract address optionsPoolAddr optoins pool contract address FPTCoinAddr FPTCoin contract address"
      },
      "delegateToImplementation(bytes)": {
        "details": "It returns to the external caller whatever the implementation returns or forwards reverts",
        "params": {
          "data": "The raw data to delegatecall"
        },
        "return": "The returned bytes from the delegatecall"
      },
      "delegateToViewImplementation(bytes)": {
        "details": "It returns to the external caller whatever the implementation returns or forwards reverts There are an additional 2 prefix uints from the wrapper returndata, which we ignore since we make an extra hop.",
        "params": {
          "data": "The raw data to delegatecall"
        },
        "return": "The returned bytes from the delegatecall"
      },
      "exerciseOption(uint256,uint256)": {
        "details": "User exercise option. optionsId option's ID which was wanted to exercise, must owned by user amount user input amount of option user want to exercise."
      },
      "getAvailableCollateral()": {
        "details": "Retrieve the available collateral worth, the worth of collateral which can used for buy options, priced in USD. "
      },
      "getCollateralRate(address)": {
        "details": "Get the minimum collateral occupation rate."
      },
      "getInputAmountRange()": {
        "details": "get the valid range of input amount"
      },
      "getLeftCollateral()": {
        "details": "Retrieve the left collateral worth, the worth of collateral which can used for redeem collateral, priced in USD. "
      },
      "getOccupiedCollateral()": {
        "details": "Retrieve the occupied collateral worth, multiplied by minimum collateral rate, priced in USD. "
      },
      "getOperator()": {
        "details": "get all operators.      "
      },
      "getPriceRateRange()": {
        "details": "retrieve input price valid range rate, thousandths."
      },
      "getRealBalance(address)": {
        "details": "Retrieve the balance of collateral, the auxiliary function for the total collateral calculation. "
      },
      "getTokenNetworth()": {
        "details": "Retrieve FPTCoin's net worth, priced in USD."
      },
      "getTotalCollateral()": {
        "details": "Retrieve the total collateral worth, priced in USD. "
      },
      "getUnlockedCollateral()": {
        "details": "Retrieve the unlocked collateral worth, the worth of collateral which currently used for options, priced in USD. "
      },
      "getUserPayingUsd(address)": {
        "details": "Retrieve user's cost of collateral, priced in USD. user input retrieved account "
      },
      "getUserTotalWorth(address)": {
        "details": "Retrieve user's current total worth, priced in USD. account input retrieve account"
      },
      "getWhiteList()": {
        "details": "Implementation of getting the eligible whitelist."
      },
      "isEligibleAddress(address)": {
        "details": "Implementation of testing whether the input address is eligible.",
        "params": {
          "tmpAddress": "input address for testing."
        }
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "redeemCollateral(uint256,address)": {
        "details": "redeem collateral from this pool, user can input the prioritized collateral,he will get this coin, if this coin is unsufficient, he will get others collateral which in whitelist. tokenAmount the amount of FPTCoin want to redeem. collateral The prioritized collateral coin address."
      },
      "removeOperator(address)": {
        "details": "remove operator by owner.      "
      },
      "removeWhiteList(address)": {
        "details": "Implementation of revoke an invalid address from the whitelist.",
        "params": {
          "removeAddress": "revoked address."
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "sellOption(uint256,uint256)": {
        "details": "User sell option. optionsId option's ID which was wanted to sell, must owned by user amount user input amount of option user want to sell."
      },
      "setCollateralRate(address,uint256)": {
        "details": "The foundation owner want to set the minimum collateral occupation rate. collateral collateral coin address colRate The thousandths of the minimum collateral occupation rate."
      },
      "setInputAmountRange(uint256,uint256)": {
        "details": "set the valid range of input amount",
        "params": {
          "_maxAmount": "the maximum input amount limit",
          "_minAmount": "the minimum input amount limit"
        }
      },
      "setOperator(uint256,address)": {
        "details": "modify indexed operator by owner.      "
      },
      "setOperators(address[])": {
        "details": "set all operators by owner.      "
      },
      "setPriceRateRange(uint256,uint256)": {
        "details": "set input price valid range rate, thousandths."
      },
      "setSharedPayment(int256[],int256[],uint256)": {
        "details": "Set the calculation results of the collateral pool shared worth. The foundation operator will invoke this function frequently newNetworth Current expired options' net worth  sharedBalances All unexpired options' shared balance distributed by time. firstOption The new first unexpired option's index."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "userInputCollateral(address,address)": {
        "details": "Retrieve user's amount of the specified collateral. user input retrieved account  collateral input retrieved collateral coin address "
      }
    },
    "title": "Erc20Delegator Contract"
  },
  "userdoc": {
    "methods": {
      "delegateToImplementation(bytes)": {
        "notice": "Delegates execution to the implementation contract"
      },
      "delegateToViewImplementation(bytes)": {
        "notice": "Delegates execution to an implementation contract"
      },
      "setHalt(bool)": {
        "notice": "function Emergency situation that requires contribution period to stop or not."
      }
    }
  }
}